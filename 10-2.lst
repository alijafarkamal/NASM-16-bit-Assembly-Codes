     1                                  org 0x100                 ; COM file starts at 0x100 in memory
     2                                  
     3                                  section .data
     4 00000000 456E74657220796F75-     promptName: db "Enter your name: $"
     4 00000009 72206E616D653A2024 
     5 00000012 456E74657220796F75-     promptRollNo: db "Enter your roll number: $"
     5 0000001B 7220726F6C6C206E75-
     5 00000024 6D6265723A2024     
     6 0000002B 456E74657220796F75-     promptCourse: db "Enter your course name: $"
     6 00000034 7220636F7572736520-
     6 0000003D 6E616D653A2024     
     7 00000044 456E74657220796F75-     promptSection: db "Enter your section: $"
     7 0000004D 722073656374696F6E-
     7 00000056 3A2024             
     8 00000059 0D0A24                  newline1 db 0Dh, 0Ah, "$" ; Newline sequence for DOS interrupt 21h
     9                                  
    10 0000005C 50                      maxInput db 80
    11 0000005D 00<rep 51h>             inputName: times 81 db 0
    12 000000AE 00<rep 51h>             inputRollNo: times 81 db 0
    13 000000FF 00<rep 51h>             inputCourse: times 81 db 0
    14 00000150 00<rep 51h>             inputSection: times 81 db 0
    15                                  
    16                                  section .text
    17                                  start:
    18                                      ; Clear screen
    19 00000000 E88C00                      call clrscr
    20                                  
    21                                      ; Request and store name
    22 00000003 BA[0000]                    mov dx, promptName
    23 00000006 E89D00                      call print_string
    24 00000009 8D16[5D00]                  lea dx, [inputName]
    25 0000000D E89B00                      call read_string
    26 00000010 E89D00                      call newline
    27                                  
    28                                      ; Request and store roll number
    29 00000013 BA[1200]                    mov dx, promptRollNo
    30 00000016 E88D00                      call print_string
    31 00000019 8D16[AE00]                  lea dx, [inputRollNo]
    32 0000001D E88B00                      call read_string
    33 00000020 E88D00                      call newline
    34                                  
    35                                      ; Request and store course name
    36 00000023 BA[2B00]                    mov dx, promptCourse
    37 00000026 E87D00                      call print_string
    38 00000029 8D16[FF00]                  lea dx, [inputCourse]
    39 0000002D E87B00                      call read_string
    40 00000030 E87D00                      call newline
    41                                  
    42                                      ; Request and store section
    43 00000033 BA[4400]                    mov dx, promptSection
    44 00000036 E86D00                      call print_string
    45 00000039 8D16[5001]                  lea dx, [inputSection]
    46 0000003D E86B00                      call read_string
    47 00000040 E86D00                      call newline
    48                                  
    49                                      ; Clear screen
    50 00000043 E84900                      call clrscr
    51                                  
    52                                      ; Display data
    53 00000046 E80500                      call display_data
    54                                  
    55                                      ; Program end
    56 00000049 B8004C                      mov ax, 0x4C00
    57 0000004C CD21                        int 0x21
    58                                  
    59                                  ; Subroutine to display entered data
    60                                  display_data:
    61 0000004E BA[0000]                    mov dx, promptName
    62 00000051 E85200                      call print_string
    63 00000054 8D16[5D00]                  lea dx, [inputName]
    64 00000058 E84B00                      call print_string
    65 0000005B E85200                      call newline
    66                                  
    67 0000005E BA[1200]                    mov dx, promptRollNo
    68 00000061 E84200                      call print_string
    69 00000064 8D16[AE00]                  lea dx, [inputRollNo]
    70 00000068 E83B00                      call print_string
    71 0000006B E84200                      call newline
    72                                  
    73 0000006E BA[2B00]                    mov dx, promptCourse
    74 00000071 E83200                      call print_string
    75 00000074 8D16[FF00]                  lea dx, [inputCourse]
    76 00000078 E82B00                      call print_string
    77 0000007B E83200                      call newline
    78                                  
    79 0000007E BA[4400]                    mov dx, promptSection
    80 00000081 E82200                      call print_string
    81 00000084 8D16[5001]                  lea dx, [inputSection]
    82 00000088 E81B00                      call print_string
    83 0000008B E82200                      call newline
    84                                  
    85 0000008E C3                          ret
    86                                  
    87                                  ; Subroutine to clear the screen
    88                                  clrscr:
    89                                  
    90 0000008F B800B8                      mov ax, 0xb800             ; Load video base in ax
    91 00000092 8EC0                        mov es, ax                 ; Point es to video base
    92 00000094 BF0000                      mov di, 0                  ; Point di to top left column (0xB800:0000)
    93                                  
    94                                  nextchar:
    95 00000097 26C7052007                  mov word [es:di], 0x0720   ; Clear next char on screen with space (0x20) and white attribute (0x07)
    96 0000009C 83C702                      add di, 2                  ; Move to next screen position (2 bytes per character)
    97 0000009F 81FFA00F                    cmp di, 4000               ; Check if the whole screen is cleared (4000 bytes for 80x25 text mode)
    98 000000A3 75F2                        jne nextchar               ; If not, clear the next character
    99                                  
   100 000000A5 C3                          ret
   101                                  
   102                                  ; Subroutine to print a string (uses DOS interrupt 21h, function 09h)
   103                                  print_string:
   104 000000A6 B409                        mov ah, 0x09               ; DOS function 09h: print string
   105 000000A8 CD21                        int 0x21                   ; Print the string at DS:DX
   106 000000AA C3                          ret
   107                                  
   108                                  ; Subroutine to read a string (uses DOS interrupt 21h, function 0Ah)
   109                                  read_string:
   110 000000AB B40A                        mov ah, 0x0A               ; DOS function 0Ah: buffered input
   111 000000AD CD21                        int 0x21                   ; Read user input into buffer at DS:DX
   112 000000AF C3                          ret
   113                                  
   114                                  ; Subroutine to move to the next line
   115                                  newline:
   116 000000B0 BA[5900]                    mov dx, newline1
   117 000000B3 E8F0FF                      call print_string
   118 000000B6 C3                          ret
