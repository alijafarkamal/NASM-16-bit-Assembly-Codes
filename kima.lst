     1                                  ;Below commented code(starts after this non-commented code ) contains music code embedded with game logic
     2                                  ;Below commented code(starts after this non-commented code ) contains music code embedded with game logic
     3                                  ;Below commented code(starts after this non-commented code ) contains music code embedded with game logic
     4                                  [org 0x0100]
     5 00000000 B81300                   mov ax, 0x0013 
     6 00000003 CD10                     int 0x10 
     7 00000005 B800A0                   mov ax, 0xA000 
     8 00000008 8EC0                     mov es, ax 
     9 0000000A E92607                       jmp start
    10 0000000D 457869743F2028792F-     exit_msg: db 'Exit? (y/n)', 0  ;
    10 00000016 6E2900             
    11 00000019 47616D6520456E6465-     game_ended_msg: db 'Game Ended. Press Key', 0
    11 00000022 642E20507265737320-
    11 0000002B 4B657900           
    12 0000002F 0000                    a_keeper: dw 0
    13 00000031 0000                    rect_mov_count: dw 0
    14 00000033 020A0C1C22              green_shades db 2, 10, 12, 28, 34 
    15 00000038 0000                    upperPillarHeight dw 0 
    16 0000003A 0000                    lowerPillarHeight dw 0 
    17 0000003C 0000                    bird_bottom_corner: dw 0
    18 0000003E 0000                    bird_bottom_corner_end: dw 0
    19 00000040 0000                    bird_top_corner: dw 0
    20 00000042 CC79                    bird_pos: dw 31180
    21 00000044 3F01CB01                pipesX: dw 319, 459
    22 00000048 14001400                pipesY: dw 20 , 20
    23 0000004C 0000                    leftOverPipeWidth: dw 0
    24 0000004E 0000                    leftOverPipeY: dw 0
    25 00000050 0000                    boolDrawBottomPipe: dw 0
    26 00000052 0000                    intBottomPipeStart: dw 0
    27 00000054 0000                    intPipeEndX: dw 0
    28 00000056 0000                    collision_detected: dw 0
    29 00000058 0000                    boolAdjusted: dw 0
    30 0000005A 0000                    boolFirstPipe: dw 0
    31 0000005C 0000                    rect_pos1: dw 0
    32 0000005E 0000                    rect_pos2: dw 0
    33 00000060 0000                    rect_pos_down: dw 0
    34 00000062 0000                    rect_pos_down1: dw 0
    35 00000064 0000                    rect_pos_down2: dw 0
    36 00000066 0000                    isAnimating: dw 0
    37 00000068 44                      BirdDirection: db 'D'
    38 00000069 0000                    bird_position_holder: dw 0
    39 0000006B 0000                    score :dw 0
    40 0000006D 0000                    tickcount: dw 0
    41 0000006F 00000000                old_timer:dw 0,0
    42 00000073 4006                    delay_threshold dw 1600   
    43 00000075 00                      timer_hooked db 0    
    44 00000076 00                      is_flapping :db 0  
    45 00000077 0000                    upper_pillar_helper: dw 0
    46 00000079 417373656D626C6572-     GameTitle: db 'Assembler Aviator', 0
    46 00000082 2041766961746F7200 
    47 0000008B 526F6C6C204E756D62-     RollNumbers: db 'Roll Numbers: 23L-0815, 23L-0576', 0
    47 00000094 6572733A2032334C2D-
    47 0000009D 303831352C2032334C-
    47 000000A6 2D3035373600       
    48 000000AC 446576656C6F706564-     Names: db 'Developed by: Ali Jafar,Tayyab Khalil', 0
    48 000000B5 2062793A20416C6920-
    48 000000BE 4A616661722C546179-
    48 000000C7 796162204B68616C69-
    48 000000D0 6C00               
    49 000000D2 53656D65737465723A-     Semester: db 'Semester: Fall 2024', 0
    49 000000DB 2046616C6C20323032-
    49 000000E4 3400               
    50 000000E6 507265737320555020-     Instructions: db 'Press UP ARROW to move up,ESC to quit', 0
    50 000000EF 4152524F5720746F20-
    50 000000F8 6D6F76652075702C45-
    50 00000101 534320746F20717569-
    50 0000010A 7400               
    51 0000010C 496620455343206973-     Instructions1: db 'If ESC is pressed, game stops', 0
    51 00000115 20707265737365642C-
    51 0000011E 2067616D652073746F-
    51 00000127 707300             
    52 0000012A 496620792069732070-     Instructions2: db 'If y is pressed, it exits', 0
    52 00000133 7265737365642C2069-
    52 0000013C 7420657869747300   
    53 00000144 656C73652069742063-     Instructions3: db 'else it continues from where it stops', 0
    53 0000014D 6F6E74696E75657320-
    53 00000156 66726F6D2077686572-
    53 0000015F 652069742073746F70-
    53 00000168 7300               
    54 0000016A 507265737320616E79-     StartMessage: db 'Press any key to start...', 0
    54 00000173 206B657920746F2073-
    54 0000017C 746172742E2E2E00   
    55 00000184 494E53545255435449-     Instru: db 'INSTRUCTIONS.', 0
    55 0000018D 4F4E532E00         
    56 00000192 507265737320616E79-     StartMessage1: db 'Press any key to continue...', 0
    56 0000019B 206B657920746F2063-
    56 000001A4 6F6E74696E75652E2E-
    56 000001AD 2E00               
    57 000001AF 53636F72653A2000        cscore: db 'Score: ' ,0
    58                                  background:
    59 000001B7 31FF                        xor di, di
    60 000001B9 B900FA                      mov cx, 320 * 200
    61 000001BC B002                        mov al, 2
    62 000001BE F3AA                        rep stosb
    63 000001C0 C3                          ret
    64                                  DisplayIntroduction1:
    65 000001C1 E8F3FF                      call background
    66 000001C4 B20C                        mov dl, 12
    67 000001C6 B609                    	MOV dh,9
    68 000001C8 BE[8401]                	mov si,Instru
    69 000001CB E84100                  	call PrintStringAtPosition
    70 000001CE B203                    	mov dl, 3
    71 000001D0 B60C                        mov dh, 12
    72 000001D2 BE[E600]                    mov si, Instructions
    73 000001D5 E83700                      call PrintStringAtPosition
    74 000001D8 B60F                        mov dh, 15
    75 000001DA BE[9201]                    mov si, StartMessage1
    76 000001DD E82F00                      call PrintStringAtPosition
    77 000001E0 C3                      	ret
    78                                  DisplayIntroduction:
    79 000001E1 E8D3FF                      call background
    80 000001E4 B607                        mov dh, 7
    81 000001E6 B203                        mov dl, 3
    82 000001E8 BE[7900]                    mov si, GameTitle
    83 000001EB E82100                      call PrintStringAtPosition
    84 000001EE B609                        mov dh, 9
    85 000001F0 BE[8B00]                    mov si, RollNumbers
    86 000001F3 E81900                      call PrintStringAtPosition
    87                                  
    88 000001F6 B60B                        mov dh, 11
    89 000001F8 BE[AC00]                    mov si, Names
    90 000001FB E81100                      call PrintStringAtPosition
    91                                  
    92 000001FE B60D                        mov dh, 13
    93 00000200 BE[D200]                    mov si, Semester
    94 00000203 E80900                      call PrintStringAtPosition
    95                                  
    96 00000206 B611                        mov dh, 17
    97 00000208 BE[6A01]                    mov si, StartMessage
    98 0000020B E80100                      call PrintStringAtPosition
    99 0000020E C3                          ret
   100                                  
   101                                  
   102                                  
   103                                  PrintStringAtPosition:
   104 0000020F 60                          pusha
   105 00000210 B402                        mov ah, 02h
   106 00000212 CD10                        int 10h
   107 00000214 B40E                        mov ah, 0Eh
   108 00000216 B700                        mov bh, 0
   109 00000218 B30F                        mov bl, 15
   110                                  
   111                                  print_position_loop:
   112 0000021A AC                          lodsb
   113 0000021B 3C00                        cmp al, 0
   114 0000021D 7404                        je done_position_print
   115 0000021F CD10                        int 10h
   116 00000221 EBF7                        jmp print_position_loop
   117                                  
   118                                  done_position_print:
   119 00000223 61                          popa
   120 00000224 C3                          ret
   121                                  
   122                                  
   123                                  
   124                                  
   125                                  collision:
   126 00000225 60                      pusha
   127 00000226 813E[4200]9600           cmp word[bird_pos],150
   128 0000022C 7708                     ja next_check
   129 0000022E C706[5600]0100           mov word[collision_detected],1
   130 00000234 EB14                     jmp get_out
   131                                  next_check:
   132 00000236 8B3E[3E00]              mov di, word[bird_bottom_corner_end]
   133 0000023A 81C74001                add di,320
   134 0000023E 81FF00E1                 cmp di,57600
   135 00000242 7206                     jb get_out
   136 00000244 C706[5600]0100           mov word[collision_detected],1
   137                                  get_out: 
   138 0000024A 61                      popa
   139 0000024B C3                      ret
   140                                  
   141                                  
   142                                  ShowExitConfirmation:
   143 0000024C B402                        mov ah, 02h                
   144 0000024E B700                        mov bh, 0                   
   145 00000250 B618                        mov dh, 24                  ; Row (adjust as needed)
   146 00000252 B20F                        mov dl, 15                  ; Column (adjust as needed)
   147 00000254 CD10                        int 10h
   148                                  
   149 00000256 B40E                        mov ah, 0Eh                 ; BIOS teletype function
   150 00000258 B700                        mov bh, 0                   ; Page number
   151 0000025A B302                        mov bl, 2                  ; White text
   152 0000025C BE[0D00]                    mov si, exit_msg            ; Pointer to message
   153                                  
   154                                  print_message_text:
   155 0000025F AC                          lodsb                      
   156 00000260 3C00                        cmp al, 0
   157 00000262 7404                        je wait_for_key1
   158 00000264 CD10                        int 10h                   
   159 00000266 EBF7                        jmp print_message_text
   160                                  
   161                                  wait_for_key1:
   162 00000268 B400                        mov ah, 0
   163 0000026A CD16                        int 16h                     ; Get key in AL
   164 0000026C 3C79                        cmp al, 'y'                 ; Check if 'y' or 'Y'
   165 0000026E 741C                        je exit_game
   166 00000270 3C59                        cmp al, 'Y'
   167 00000272 7418                        je exit_game
   168                                  end_erase:
   169 00000274 BB0A00                  	mov bx,10
   170 00000277 BFF8ED                  	mov di,60920
   171                                  exit_loop:
   172 0000027A B95800                  	mov cx,88
   173 0000027D B006                    	mov al,6
   174 0000027F F3AA                    	rep stosb
   175 00000281 4B                      	dec bx
   176 00000282 81C7E800                	add di,232
   177 00000286 83FB00                  	cmp bx,0
   178 00000289 75EF                    jne exit_loop
   179 0000028B C3                          ret
   180                                  
   181                                  exit_game:
   182                                      ; mov ax, 0x0003
   183                                      ; int 0x10
   184 0000028C B402                        mov ah, 02h
   185 0000028E B700                        mov bh, 0
   186 00000290 B60C                        mov dh, 12
   187 00000292 B20F                        mov dl, 15
   188 00000294 CD10                        int 10h
   189                                  
   190 00000296 B40E                        mov ah, 0Eh
   191 00000298 BE[1900]                    mov si, game_ended_msg
   192                                  
   193                                  print_loop:
   194 0000029B AC                          lodsb
   195 0000029C 3C00                        cmp al, 0
   196 0000029E 7404                        je wait_for_key
   197 000002A0 CD10                        int 10h
   198 000002A2 EBF7                        jmp print_loop
   199                                  wait_for_key:
   200 000002A4 B400                        mov ah, 0
   201 000002A6 CD16                        int 16h
   202                                  
   203 000002A8 B80300                      mov ax, 0x0003
   204 000002AB CD10                        int 0x10
   205                                  
   206 000002AD B8004C                      mov ax, 0x4C00
   207 000002B0 CD21                        int 0x21
   208                                  
   209                                  upper_part:
   210 000002B2 31FF                        xor di, di
   211 000002B4 B035                        mov al, 35h
   212 000002B6 B9004B                      mov cx, 320 * 60
   213 000002B9 F3AA                        rep stosb
   214 000002BB C3                          ret
   215                                  
   216                                  medium_part:
   217 000002BC BF004B                      mov di, 320 * 60
   218 000002BF B035                        mov al, 35h
   219 000002C1 B96054                      mov cx, 360 * 60
   220 000002C4 F3AA                        rep stosb
   221 000002C6 C3                          ret
   222                                  
   223                                  lower_part:
   224 000002C7 BF0096                      mov di, 320 * 120
   225 000002CA B035                        mov al, 35h
   226 000002CC B90064                      mov cx, 320 * 80
   227 000002CF F3AA                        rep stosb
   228 000002D1 C3                          ret
   229                                  
   230                                  sscore:
   231 000002D2 60                          pusha
   232 000002D3 BE[AF01]                    mov si, cscore
   233 000002D6 B402                        mov ah, 02h
   234 000002D8 B700                        mov bh, 0
   235 000002DA B618                        mov dh, 24
   236 000002DC B201                        mov dl, 1
   237 000002DE CD10                        int 10h
   238 000002E0 B40E                        mov ah, 0Eh
   239 000002E2 B700                        mov bh, 0
   240 000002E4 B30F                        mov bl, 15
   241                                  
   242                                  print_scoer:
   243 000002E6 AC                          lodsb
   244 000002E7 3C00                        cmp al, 0
   245 000002E9 7404                        je done_
   246 000002EB CD10                        int 10h
   247 000002ED EBF7                        jmp print_scoer
   248                                  
   249                                  done_:
   250 000002EF 61                          popa
   251 000002F0 C3                          ret
   252                                  
   253                                  cal_dig:
   254 000002F1 E8DEFF                      call sscore
   255 000002F4 A1[6B00]                    mov ax, [score]
   256 000002F7 31C9                        xor cx, cx
   257 000002F9 BB0A00                      mov bx, 10
   258                                  store_digits:
   259 000002FC 31D2                        xor dx, dx
   260 000002FE F7F3                        div bx
   261 00000300 52                          push dx
   262 00000301 41                          inc cx
   263 00000302 83F800                      cmp ax, 0
   264 00000305 75F5                        jnz store_digits
   265                                  
   266                                  draw_score:
   267 00000307 B402                        mov ah, 02h
   268 00000309 B700                        mov bh, 0
   269 0000030B B618                        mov dh, 24
   270 0000030D B208                        mov dl, 8
   271 0000030F CD10                        int 10h
   272                                  
   273                                  print_digits:
   274 00000311 5A                          pop dx
   275 00000312 80C230                      add dl, 0x30
   276 00000315 88D0                        mov al, dl
   277 00000317 B40E                        mov ah, 0Eh
   278 00000319 B700                        mov bh, 0
   279 0000031B CD10                        int 10h
   280 0000031D FEC2                        inc dl
   281 0000031F E2F0                        loop print_digits
   282 00000321 C3                          ret    
   283                                  
   284                                  
   285                                  bird_body:
   286 00000322 60                          pusha
   287 00000323 BB0C00                      mov bx,12 
   288 00000326 8B36[4200]                  mov si, [bird_pos] 
   289 0000032A 83C612                      add si,18
   290 0000032D 8936[4000]                  mov word[bird_top_corner],si
   291 00000331 83EE12                      sub si,18
   292                                  body:
   293 00000334 89F7                        mov di, si
   294 00000336 B00E                        mov al, 14 
   295 00000338 B91200                      mov cx, 18 
   296 0000033B F3AA                        rep stosb
   297 0000033D 83EB01                      sub bx,1
   298 00000340 81C64001                    add si, 320
   299 00000344 83FB00                      cmp bx, 0 
   300 00000347 75EB                        jnz body
   301 00000349 57                      	push di
   302 0000034A 8B3E[4200]              	mov di,[bird_pos]
   303 0000034E 81C74806                	add di,1608
   304 00000352 B0CC                    	mov al,  0xCC
   305 00000354 AA                      	stosb
   306 00000355 47                      	inc di
   307 00000356 AA                      	stosb
   308 00000357 47                      	inc di
   309 00000358 AA                      	stosb
   310 00000359 5F                      	pop di
   311 0000035A 81EE4001                    sub si,320
   312 0000035E 8936[3C00]                  mov word[bird_bottom_corner],si
   313 00000362 83C612                      add si,18
   314 00000365 8936[3E00]                  mov word[bird_bottom_corner_end],si
   315 00000369 83EE12                      sub si,18
   316 0000036C 8936[6900]                  mov [bird_position_holder],si
   317 00000370 61                          popa 
   318 00000371 C3                          ret 
   319                                  
   320                                  defDrawPipe:
   321 00000372 55                          push bp
   322 00000373 89E5                        mov bp, sp
   323 00000375 60                          pusha
   324 00000376 8B4E04                      mov cx, [bp+4]
   325 00000379 BA0000                      mov dx, 0
   326 0000037C B40C                        mov ah, 0ch
   327 0000037E 8B5E06                      mov bx, [bp+6]
   328 00000381 891E[5200]                  mov word [intBottomPipeStart], bx
   329 00000385 8306[5200]37                add word [intBottomPipeStart], 55
   330 0000038A C706[5000]0000              mov word [boolDrawBottomPipe], 0
   331 00000390 890E[5400]                  mov word [intPipeEndX], cx
   332 00000394 8306[5400]28                add word [intPipeEndX], 40
   333 00000399 837E0801                    cmp word [bp+8], 1
   334 0000039D 741F                        je drawTopPipe
   335 0000039F 833E[4C00]00                cmp word [leftOverPipeWidth], 0
   336 000003A4 7647                        jbe endDrawPipe
   337 000003A6 8B0E[4C00]                  mov cx, [leftOverPipeWidth]
   338 000003AA 890E[5400]                  mov word [intPipeEndX], cx
   339 000003AE B92800                      mov cx, 40
   340 000003B1 2B0E[4C00]                  sub cx, [leftOverPipeWidth]
   341 000003B5 01CB                        add bx, cx
   342 000003B7 B90000                      mov cx, 0
   343 000003BA FF0E[4C00]                  dec word [leftOverPipeWidth]
   344                                  drawTopPipe:
   345 000003BE B002                        mov al,2
   346                                  colorSelected:
   347 000003C0 81F94001                    cmp cx, 320
   348 000003C4 7327                        jae endDrawPipe
   349 000003C6 83F900                      cmp cx, 0
   350 000003C9 7222                        jb endDrawPipe
   351 000003CB CD10                        int 10h
   352                                  skipPipe:
   353 000003CD 42                          inc dx
   354 000003CE 3B5606                      cmp dx, [bp+6]
   355 000003D1 76EB                        jbe drawTopPipe
   356 000003D3 3B16[5200]                  cmp dx, [intBottomPipeStart]
   357 000003D7 7703                        ja notSkip
   358 000003D9 83C236                      add dx, 54
   359                                  notSkip:
   360 000003DC 81FAB400                    cmp dx, 180
   361 000003E0 72DC                        jb drawTopPipe
   362 000003E2 41                          inc cx
   363 000003E3 BA0000                      mov dx, 0
   364 000003E6 43                          inc bx
   365 000003E7 3B0E[5400]                  cmp cx, [intPipeEndX]
   366 000003EB 72D1                        jb drawTopPipe
   367                                  endDrawPipe:
   368 000003ED 61                          popa 
   369 000003EE 5D                          pop bp
   370 000003EF C20600                      ret 6
   371                                  movePipe:
   372 000003F2 55                          push bp
   373 000003F3 89E5                        mov bp, sp
   374 000003F5 60                          pusha
   375 000003F6 FF06[3100]                  inc word[rect_mov_count]
   376 000003FA 813E[3100]6801              cmp word[rect_mov_count],360
   377 00000400 7402                        je incc
   378 00000402 750D                        jne noincc
   379                                  incc:
   380 00000404 C706[3100]0000              mov word[rect_mov_count],0
   381 0000040A FF06[6B00]                  inc word[score]
   382 0000040E E8E0FE                      call cal_dig
   383                                  noincc:
   384 00000411 8B5E04                      mov bx, [bp+4]
   385 00000414 FF0F                        dec word [bx]
   386 00000416 8B0F                        mov cx, [bx]
   387 00000418 83C129                      add cx,41
   388 0000041B C706[5800]0000              mov word [boolAdjusted], 0
   389 00000421 81F94001                    cmp cx, 320
   390 00000425 7D02                        jge adjustX
   391 00000427 EB0A                        jmp continueDrawing
   392                                  adjustX:
   393 00000429 81E94001                    sub word cx, 320
   394 0000042D C706[5800]0100              mov word [boolAdjusted], 1
   395                                  continueDrawing:
   396 00000433 BA0000                      mov dx,0
   397 00000436 B035                        mov al,35h
   398 00000438 B40C                        mov ah,0ch
   399 0000043A 8B7606                      mov si,[bp+6]
   400                                  drawLastColumnSky:
   401 0000043D CD10                        int 10h
   402 0000043F 3B14                        cmp dx, [si]
   403 00000441 7516                        jne continueDrawingSky
   404 00000443 833E[5800]00                cmp word [boolAdjusted], 0
   405 00000448 7405                        je notCheckForadjusted
   406 0000044A 83F929                      cmp cx,41
   407 0000044D 7711                        ja skipSkyColumn
   408                                  notCheckForadjusted:
   409 0000044F 83F929                      cmp cx,41
   410 00000452 7205                        jb continueDrawingSky
   411 00000454 83C237                      add dx, 55
   412 00000457 EBE4                        jmp drawLastColumnSky
   413                                  continueDrawingSky:
   414 00000459 42                          inc dx
   415 0000045A 81FAB400                    cmp dx,180
   416 0000045E 72DD                        jb drawLastColumnSky
   417                                  skipSkyColumn:
   418 00000460 83E929                      sub cx,41
   419 00000463 83F900                      cmp cx,0
   420 00000466 7523                        jne endMovePipe
   421 00000468 833E[4400]00                cmp word [pipesX], 0
   422 0000046D 7506                        jne endMovePipeContinue
   423 0000046F C706[5A00]0100              mov word [boolFirstPipe], 1
   424                                  endMovePipeContinue:
   425 00000475 C706[4C00]2800              mov word [leftOverPipeWidth], 40
   426 0000047B 8B0C                        mov cx, [si]
   427 0000047D 890E[4E00]                  mov word [leftOverPipeY], cx
   428 00000481 C7074001                    mov word [bx], 320
   429 00000485 FF7606                      push word [bp+6]
   430 00000488 E80500                      call generateRandomNumber
   431                                  endMovePipe:
   432 0000048B 61                          popa
   433 0000048C 5D                          pop bp
   434 0000048D C20200                      ret 2
   435                                  generateRandomNumber:
   436 00000490 55                          push bp
   437 00000491 89E5                        mov bp, sp
   438 00000493 60                          pusha
   439 00000494 B400                        mov ah,0
   440 00000496 CD1A                        int 1ah
   441 00000498 89D0                        mov ax,dx
   442 0000049A BB3C00                      mov bx,60
   443 0000049D BA0000                      mov dx,0
   444 000004A0 F7F3                        div bx
   445 000004A2 8B5E04                      mov bx, [bp+4]
   446 000004A5 8917                        mov word [bx], dx
   447 000004A7 830714                      add word [bx], 20
   448 000004AA 61                          popa
   449 000004AB 5D                          pop bp
   450 000004AC C20200                      ret 2
   451                                  
   452                                  ground:
   453 000004AF BF00E1                      mov di, 57600
   454 000004B2 B9800C                      mov cx, 320 * 10
   455 000004B5 BB0100                      mov bx, 1
   456                                  .draw_gradient:
   457 000004B8 8A87[3300]                  mov al, [green_shades+bx]
   458 000004BC AA                          stosb
   459 000004BD 43                          inc bx
   460 000004BE 83FB04                      cmp bx, 4
   461 000004C1 7503                        jne .continue_gradient
   462 000004C3 BB0100                      mov bx, 1
   463                                  .continue_gradient:
   464 000004C6 E2F0                        loop .draw_gradient
   465 000004C8 BF80ED                      mov di, 60800
   466 000004CB B006                        mov al, 6
   467 000004CD B9800C                      mov cx, 320 * 10
   468 000004D0 F3AA                        rep stosb
   469 000004D2 C3                          ret
   470                                  
   471                                  
   472                                  delay:
   473 000004D3 60                       pusha
   474 000004D4 B900FA                   mov cx,64000
   475                                  delay1:
   476 000004D7 E2FE                     loop delay1
   477 000004D9 61                       popa
   478 000004DA C3                       ret
   479                                  
   480                                  
   481                                  
   482                                  remover_bird:
   483 000004DB 60                       pusha
   484 000004DC 89F7                     mov di,si
   485 000004DE B035                     mov al,35h
   486 000004E0 B91200                   mov cx,18
   487 000004E3 F3AA                     rep stosb
   488 000004E5 61                       popa
   489 000004E6 C3                       ret
   490                                  
   491                                  
   492                                  
   493                                  bird_falling:
   494 000004E7 60                      pusha
   495 000004E8 B800A0                  mov ax,0xA000
   496 000004EB 8EC0                    mov es,ax
   497 000004ED 57                      push di
   498 000004EE 8B3E[4000]              mov di,[bird_top_corner]
   499 000004F2 26803D02                cmp byte[es:di],2
   500 000004F6 742B                    je exit_game_1
   501 000004F8 8B3E[3C00]              mov di,[bird_bottom_corner]
   502 000004FC 2680BD400102            cmp byte[es:di+320],2
   503 00000502 741F                    je exit_game_1
   504 00000504 8B3E[3E00]              mov di,[bird_bottom_corner_end]
   505 00000508 2680BD400102            cmp byte[es:di+320],2
   506 0000050E 7413                    je exit_game_1
   507 00000510 5F                      pop di
   508 00000511 8B36[4200]               mov si,word[bird_pos]
   509 00000515 E8C3FF                   call remover_bird
   510 00000518 8106[4200]4001           add word[bird_pos],320
   511 0000051E E801FE                   call bird_body
   512 00000521 EB07                    jmp outr
   513                                  exit_game_1:
   514 00000523 C706[5600]0100          mov word[collision_detected],1
   515 00000529 5F                      pop di
   516                                  outr:
   517 0000052A 61                       popa
   518 0000052B C3                       ret
   519                                  
   520                                  moving_up:
   521 0000052C 60                       pusha
   522 0000052D B800A0                  mov ax,0xA000
   523 00000530 8EC0                    mov es,ax
   524 00000532 57                      push di
   525 00000533 8B3E[4000]              mov di,[bird_top_corner]
   526 00000537 2680BDC0FE02            cmp byte[es:di-320],2
   527 0000053D 7429                    je exit_game_2
   528 0000053F 8B3E[3E00]              mov di,[bird_bottom_corner_end]
   529 00000543 26803D02                cmp byte[es:di],2
   530 00000547 741F                    je exit_game_2
   531 00000549 8B3E[4200]              mov di,[bird_pos]
   532 0000054D 2680BDC0FE02            cmp byte[es:di-320],2
   533 00000553 7413                    je exit_game_2
   534 00000555 5F                      pop di
   535                                  
   536 00000556 812E[4200]4001           sub word[bird_pos],320
   537 0000055C 8B36[6900]               mov si,[bird_position_holder]
   538 00000560 E878FF                   call remover_bird
   539 00000563 E8BCFD                   call bird_body
   540 00000566 EB07                    jmp outrr
   541                                  exit_game_2:
   542 00000568 C706[5600]0100          mov word[collision_detected],1
   543 0000056E 5F                      pop di
   544                                  outrr:
   545 0000056F 61                       popa
   546 00000570 C3                       ret
   547                                  
   548                                  bird_falling_collide:
   549 00000571 60                      pusha
   550 00000572 8B36[4200]               mov si,word[bird_pos]
   551 00000576 E862FF                   call remover_bird
   552 00000579 8106[4200]4001           add word[bird_pos],320
   553 0000057F E8A0FD                   call bird_body
   554 00000582 61                       popa
   555 00000583 C3                       ret
   556                                  
   557                                  remover_extra:
   558 00000584 60                      pusha
   559 00000585 8B3E[4200]               mov di,[bird_pos]
   560 00000589 B90C00                  mov cx,12
   561 0000058C B035                     mov al,35h
   562                                  l2:
   563 0000058E AA                       stosb
   564 0000058F 81C73F01                 add di,319
   565 00000593 E2F9                    loop l2
   566 00000595 61                       popa
   567 00000596 C3                       ret
   568                                  
   569                                  
   570                                  collide_extra:
   571 00000597 60                      pusha
   572                                  l1:
   573 00000598 E8E9FF                  call remover_extra
   574 0000059B 8306[4200]01            add word[bird_pos],1
   575 000005A0 E830FF                  call delay
   576 000005A3 E82DFF                  call delay
   577 000005A6 E879FD                  call bird_body
   578 000005A9 8B3E[3C00]              mov di,[bird_bottom_corner]
   579 000005AD 2680BD400102            cmp byte[es:di+320],2
   580 000005B3 74E3                    je l1
   581 000005B5 61                      popa
   582 000005B6 C3                      ret
   583                                  
   584                                  Collider:
   585                                  iteration:
   586 000005B7 60                      pusha
   587 000005B8 B800A0                  mov ax,0xA000
   588 000005BB 8EC0                    mov es,ax
   589 000005BD 8B3E[3E00]              mov di,[bird_bottom_corner_end]
   590 000005C1 2680BD3E0102            cmp byte[es:di+318],2
   591 000005C7 741D                    je outrrr
   592 000005C9 8B3E[3C00]              mov di,[bird_bottom_corner]
   593 000005CD 2680BD400102            cmp byte[es:di+320],2
   594 000005D3 7411                    je outrrr
   595 000005D5 61                      popa
   596 000005D6 E8FAFE                  call delay
   597 000005D9 E895FF                  call bird_falling_collide
   598 000005DC 813E[3E00]00E1          cmp word[bird_bottom_corner_end],57600
   599 000005E2 72D3                    jb iteration
   600 000005E4 EB07                    jmp labela
   601                                  outrrr:
   602 000005E6 E8AEFF                  call collide_extra
   603 000005E9 61                      popa
   604 000005EA E8CAFF                  call Collider
   605                                  labela:
   606 000005ED E8E3FE                  call delay
   607 000005F0 E8E0FE                  call delay
   608 000005F3 E896FC                  call exit_game
   609 000005F6 C3                      ret
   610                                  
   611                                  HandleKeyPress:
   612 000005F7 50                          push ax
   613 000005F8 53                          push bx
   614 000005F9 51                          push cx
   615 000005FA 52                          push dx
   616 000005FB B401                        mov ah, 1          
   617 000005FD CD16                        int 0x16
   618 000005FF 7445                        jz no_key_pressed  
   619 00000601 B400                        mov ah, 0          
   620 00000603 CD16                        int 0x16
   621 00000605 80FC01                      cmp ah, 0x01          
   622 00000608 740C                        je exit_game_press
   623                                  
   624 0000060A 80FC48                      cmp ah, 0x48          
   625 0000060D 740C                        je handle_up
   626                                  
   627 0000060F 80FCC8                      cmp ah, 0xC8          
   628 00000612 741B                        je handle_release
   629                                  
   630 00000614 EB30                        jmp no_key_pressed    
   631                                  
   632                                  exit_game_press:
   633 00000616 E833FC                      call ShowExitConfirmation
   634 00000619 EB2E                        jmp out_of
   635                                  handle_up:
   636 0000061B C706[7600]0100              mov word [is_flapping], 1  
   637 00000621 C706[6D00]0000              mov word [tickcount], 0    
   638 00000627 E802FF                      call moving_up  
   639 0000062A E8FFFE                  	call moving_up
   640 0000062D EB1A                        jmp out_of
   641                                  handle_release:
   642 0000062F 803E[7500]01                cmp byte [timer_hooked], 1 
   643 00000634 7413                        je out_of                  
   644 00000636 C606[7500]01                mov byte [timer_hooked], 1 
   645 0000063B E81000                      call hook_timer            
   646 0000063E C706[7600]0000              mov word [is_flapping], 0  
   647 00000644 EB03                        jmp out_of
   648                                  no_key_pressed:
   649 00000646 E89EFE                      call bird_falling
   650                                  out_of:
   651 00000649 5A                          pop dx
   652 0000064A 59                          pop cx
   653 0000064B 5B                          pop bx
   654 0000064C 58                          pop ax
   655 0000064D C3                          ret
   656                                  
   657                                  
   658                                  hook_timer:
   659 0000064E FA                          cli                        
   660 0000064F 1E                          push ds
   661 00000650 31C0                        xor ax, ax
   662 00000652 8EC0                        mov es, ax
   663 00000654 26A12000                    mov ax, word [es:8*4]
   664 00000658 A3[6F00]                    mov word [old_timer], ax
   665 0000065B 26A12200                    mov ax, word [es:8*4+2]
   666 0000065F A3[7100]                    mov word [old_timer+2], ax
   667 00000662 A1[7300]                    mov ax, [delay_threshold]
   668 00000665 26C7062000[7406]            mov word [es:8*4], timr
   669 0000066C 268C0E2200                  mov word [es:8*4+2], cs
   670 00000671 1F                          pop ds
   671 00000672 FB                          sti
   672 00000673 C3                          ret
   673                                  
   674                                  timr:
   675 00000674 50                          push ax
   676 00000675 53                          push bx
   677 00000676 51                          push cx
   678 00000677 52                          push dx
   679 00000678 FF06[6D00]                  inc word [tickcount]
   680 0000067C 3906[6D00]                  cmp word [tickcount], ax
   681 00000680 7511                        jne end_timer
   682 00000682 C706[6D00]0000              mov word [tickcount], 0
   683 00000688 E85CFE                      call bird_falling
   684 0000068B C606[7500]00                mov byte [timer_hooked], 0
   685 00000690 E80900                      call unhook_timer
   686                                  end_timer:
   687 00000693 B020                        mov al, 0x20
   688 00000695 E620                        out 0x20, al
   689 00000697 5A                          pop dx
   690 00000698 59                          pop cx
   691 00000699 5B                          pop bx
   692 0000069A 58                          pop ax
   693 0000069B CF                          iret
   694                                  
   695                                  unhook_timer:
   696 0000069C FA                          cli
   697 0000069D 1E                          push ds
   698 0000069E 31C0                        xor ax, ax
   699 000006A0 8EC0                        mov es, ax
   700 000006A2 A1[6F00]                    mov ax, word [old_timer]
   701 000006A5 26A32000                    mov word [es:8*4], ax
   702 000006A9 A1[7100]                    mov ax, word [old_timer+2]
   703 000006AC 26A32200                    mov word [es:8*4+2], ax
   704 000006B0 1F                          pop ds
   705 000006B1 FB                          sti
   706 000006B2 C3                          ret
   707                                  
   708                                  ground_mover:
   709 000006B3 60                       pusha
   710 000006B4 1E                       push ds
   711 000006B5 B800A0                   mov ax,0xA000
   712 000006B8 8ED8                     mov ds,ax
   713 000006BA BF00E1                   mov di,57600
   714 000006BD BE02E1                   mov si,57602
   715 000006C0 B97E0C                   mov cx,3198
   716 000006C3 F3A4                     rep movsb
   717 000006C5 1F                       pop ds
   718 000006C6 61                       popa
   719 000006C7 C3                       ret
   720                                  
   721                                  PrintStartScreen:
   722 000006C8 E8E7FB                   call upper_part  
   723 000006CB E8EEFB                   call medium_part
   724 000006CE E8F6FB                   call lower_part
   725 000006D1 E84EFC                   call bird_body
   726 000006D4 E8D8FD                   call ground
   727 000006D7 C3                       ret
   728                                  
   729                                  anime:
   730                                  	
   731 000006D8 E8F7FB                  	call sscore
   732                                  main_loop:
   733 000006DB E8F5FD                  	call delay
   734 000006DE E8F2FD                  	call delay
   735 000006E1 E813FF                      call HandleKeyPress 
   736 000006E4 E83EFB                  	call collision
   737 000006E7 833E[5600]01            	cmp word[collision_detected],1
   738 000006EC 0F84C7FE                	je Collider
   739 000006F0 C706[5600]0000          	mov word[collision_detected],0
   740                                  continue_loop:
   741 000006F6 68[4800]                    push pipesY ; y-coordinate address of pipe
   742 000006F9 68[4400]                    push pipesX ; x-coordinate address of pipe    
   743 000006FC E8F3FC                      call movePipe
   744                                  
   745 000006FF 68[4A00]                    push pipesY+2 ; y-coordinate address of pipe
   746 00000702 68[4600]                    push pipesX+2 ; x-coordinate address of pipe
   747 00000705 E8EAFC                      call movePipe
   748 00000708 6A01                        push 1
   749 0000070A FF36[4800]                  push word [pipesY] ; x-coordinate of pipe
   750 0000070E FF36[4400]                  push word [pipesX] ; y-coordinate of pipe
   751 00000712 E85DFC                      call defDrawPipe
   752 00000715 6A01                        push 1
   753 00000717 FF36[4A00]                  push word [pipesY+2] ; x-coordinate of pipe
   754 0000071B FF36[4600]                  push word [pipesX+2] ; y-coordinate of pipe
   755 0000071F E850FC                      call defDrawPipe
   756 00000722 6A00                        push 0
   757 00000724 FF36[4E00]                  push word [leftOverPipeY]
   758 00000728 6A00                        push 0
   759 0000072A E845FC                      call defDrawPipe
   760 0000072D E883FF                  	call ground_mover
   761 00000730 EBA9                    	jmp main_loop
   762 00000732 C3                      	ret
   763                                  
   764                                  start:
   765 00000733 E8ABFA                      call DisplayIntroduction
   766 00000736 B400                        mov ah, 0
   767 00000738 CD16                        int 16h
   768 0000073A 80FC01                      cmp ah, 0x01
   769 0000073D 0F844BFB                    je exit_game
   770 00000741 E873FA                  	call background
   771 00000744 E87AFA                  	call DisplayIntroduction1
   772 00000747 B400                        mov ah, 0
   773 00000749 CD16                        int 16h
   774 0000074B 80FC01                      cmp ah, 0x01
   775 0000074E 0F843AFB                    je exit_game
   776 00000752 E873FF                      call PrintStartScreen
   777 00000755 B400                        mov ah, 0
   778 00000757 CD16                        int 16h
   779 00000759 80FC01                      cmp ah, 0x01
   780 0000075C E879FF                  	call anime
   781 0000075F B8004C                  	mov ax,0x4c00
   782 00000762 CD21                    	int 0x21
   783                                  
   784                                  ; [org 0x0100]
   785                                   ; mov ax, 0x0013 
   786                                   ; int 0x10 
   787                                   ; mov ax, 0xA000 
   788                                   ; mov es, ax 
   789                                       ; jmp start
   790                                  ; exit_msg: db 'Exit? (y/n)', 0  ;
   791                                  ; game_ended_msg: db 'Game Ended. Press Key', 0
   792                                  ; a_keeper: dw 0
   793                                  ; rect_mov_count: dw 0
   794                                  ; green_shades db 2, 10, 12, 28, 34 
   795                                  ; upperPillarHeight dw 0 
   796                                  ; lowerPillarHeight dw 0 
   797                                  ; bird_bottom_corner: dw 0
   798                                  ; bird_bottom_corner_end: dw 0
   799                                  ; bird_top_corner: dw 0
   800                                  ; bird_pos: dw 31180
   801                                  ; pipesX: dw 319, 459
   802                                  ; pipesY: dw 20 , 20
   803                                  ; leftOverPipeWidth: dw 0
   804                                  ; leftOverPipeY: dw 0
   805                                  ; boolDrawBottomPipe: dw 0
   806                                  ; intBottomPipeStart: dw 0
   807                                  ; intPipeEndX: dw 0
   808                                  ; collision_detected: dw 0
   809                                  ; boolAdjusted: dw 0
   810                                  ; boolFirstPipe: dw 0
   811                                  ; rect_pos1: dw 0
   812                                  ; rect_pos2: dw 0
   813                                  ; rect_pos_down: dw 0
   814                                  ; rect_pos_down1: dw 0
   815                                  ; rect_pos_down2: dw 0
   816                                  ; isAnimating: dw 0
   817                                  ; BirdDirection: db 'D'
   818                                  ; bird_position_holder: dw 0
   819                                  ; score :dw 0
   820                                  ; game_end: dw 0
   821                                  ; tickcount: dw 0
   822                                  ; old_timer:dw 0,0
   823                                  ; oldtimer : dw 0, 0
   824                                  ; delay_threshold dw 1600   
   825                                  ; timer_hooked db 0    
   826                                  ; is_flapping :db 0  
   827                                  ; upper_pillar_helper: dw 0
   828                                  ; GameTitle: db 'Assembler Aviator', 0
   829                                  ; RollNumbers: db 'Roll Numbers: 23L-0815, 23L-0576', 0
   830                                  ; Names: db 'Developed by: Ali Jafar,Tayyab Khalil', 0
   831                                  ; Semester: db 'Semester: Fall 2024', 0
   832                                  ; Instructions: db 'Press UP ARROW to move up,ESC to quit', 0
   833                                  ; Instructions1: db 'If ESC is pressed, game stops', 0
   834                                  ; Instructions2: db 'If y is pressed, it exits', 0
   835                                  ; Instructions3: db 'else it continues from where it stops', 0
   836                                  ; StartMessage: db 'Press any key to start...', 0
   837                                  ; cscore: db 'Score: ' ,0
   838                                  ; ; notes: dw 440, 494, 523, 587, 659, 698, 784  ; Frequencies for A4, B4, C5, etc.
   839                                  ; ; durations: dw 300, 300, 400, 300, 500, 300, 600 ; Durations in milliseconds
   840                                  ; ; note_count: dw 7                              ; Number of notes
   841                                  ; notes: dw 0x1FB4, 0x152F, 0x0A97  ; Frequencies for D3, A3, and A4
   842                                  ; durations: dw 500, 500, 500         ; Durations in milliseconds
   843                                  ; note_count: dw 3                    ; Number of notes
   844                                  ; current_note: dw 0                  ; Index of the current note
   845                                  ; ; pcb: times *2 dw 0 ; Allocate space for 2 tasks (game + music)
   846                                  
   847                                  ; pcb: dw 0, 0, 0, 0, 0 ; task0 regs[cs:pcb + 0]
   848                                  ; dw 0, 0, 0, 0, 0 ;
   849                                  ; current: db 0
   850                                  ; background:
   851                                  ; push cs 
   852                                  ; pop ds
   853                                  ; push es
   854                                      ; xor di, di
   855                                      ; mov cx, 320 * 200
   856                                      ; mov al, 2
   857                                      ; rep stosb
   858                                  	; pop es
   859                                      ; ret
   860                                  ; DisplayIntroduction:
   861                                  
   862                                  ; push cs 
   863                                  ; pop ds
   864                                  ; push es
   865                                      ; call background
   866                                      ; mov dh, 7
   867                                      ; mov dl, 3
   868                                      ; mov si, GameTitle
   869                                      ; call PrintStringAtPosition
   870                                      ; mov dh, 9
   871                                      ; mov si, RollNumbers
   872                                      ; call PrintStringAtPosition
   873                                  
   874                                      ; mov dh, 11
   875                                      ; mov si, Names
   876                                      ; call PrintStringAtPosition
   877                                  
   878                                      ; mov dh, 13
   879                                      ; mov si, Semester
   880                                      ; call PrintStringAtPosition
   881                                  
   882                                      ; mov dh, 15
   883                                      ; mov si, Instructions
   884                                      ; call PrintStringAtPosition
   885                                  
   886                                      ; mov dh, 17
   887                                      ; mov si, StartMessage
   888                                      ; call PrintStringAtPosition
   889                                  	; pop es
   890                                      ; ret
   891                                  
   892                                  ; PrintStringAtPosition:
   893                                  
   894                                  ; push cs 
   895                                  ; pop ds
   896                                  ; push es
   897                                      ; pusha
   898                                      ; mov ah, 02h
   899                                      ; int 10h
   900                                      ; mov ah, 0Eh
   901                                      ; mov bh, 0
   902                                      ; mov bl, 15
   903                                  
   904                                  ; print_position_loop:
   905                                      ; lodsb
   906                                      ; cmp al, 0
   907                                      ; je done_position_print
   908                                      ; int 10h
   909                                      ; jmp print_position_loop
   910                                  
   911                                  ; done_position_print:
   912                                      ; popa
   913                                  	; pop es
   914                                      ; ret
   915                                  
   916                                  ; collision:
   917                                  ; cli
   918                                  ; push cs 
   919                                  ; pop ds
   920                                  ; ;push es
   921                                  ; pusha
   922                                   ; cmp word[bird_pos],150
   923                                   ; ja next_check
   924                                   ; mov word[collision_detected],1
   925                                   ; jmp get_out
   926                                  ; next_check:
   927                                  ; mov di, word[bird_bottom_corner_end]
   928                                  ; add di,320
   929                                   ; cmp di,57600
   930                                   ; jb get_out
   931                                   ; mov word[collision_detected],1
   932                                  ; get_out: 
   933                                  ; popa
   934                                  ; ;pop es
   935                                  ; ret
   936                                  
   937                                  
   938                                  ; ShowExitConfirmation:
   939                                  ; push cs 
   940                                  ; pop ds
   941                                      ; mov ah, 02h                
   942                                      ; mov bh, 0                   
   943                                      ; mov dh, 24                  ; Row (adjust as needed)
   944                                      ; mov dl, 15                  ; Column (adjust as needed)
   945                                      ; int 10h
   946                                  
   947                                      ; mov ah, 0Eh                 ; BIOS teletype function
   948                                      ; mov bh, 0                   ; Page number
   949                                      ; mov bl, 2                  ; White text
   950                                      ; mov si, exit_msg            ; Pointer to message
   951                                  
   952                                  ; print_message_text:
   953                                      ; lodsb                      
   954                                      ; cmp al, 0
   955                                      ; je wait_for_key1
   956                                      ; int 10h                   
   957                                      ; jmp print_message_text
   958                                  
   959                                  ; wait_for_key1:
   960                                  ; push cs 
   961                                  ; pop ds
   962                                      ; mov ah, 0
   963                                      ; int 16h                     ; Get key in AL
   964                                      ; cmp al, 'y'                 ; Check if 'y' or 'Y'
   965                                      ; je exit_game
   966                                      ; cmp al, 'Y'
   967                                      ; je exit_game
   968                                  ; end_erase:
   969                                  	; mov bx,10
   970                                  	; mov di,60920
   971                                  ; exit_loop:
   972                                  	; mov cx,88
   973                                  	; mov al,6
   974                                  	; rep stosb
   975                                  	; dec bx
   976                                  	; add di,232
   977                                  	; cmp bx,0
   978                                  ; jne exit_loop
   979                                      ; ret
   980                                  ; exit_game:  
   981                                  ; mov word[game_end],1
   982                                  
   983                                      ; mov al, 11111101b    
   984                                      ; in  al, 61h          
   985                                      ; and al, 11111100b    
   986                                      ; out 61h, al          
   987                                      ; mov al, 10110110b    
   988                                      ; out 43h, al          
   989                                      ; mov al, 0            
   990                                      ; out 42h, al          
   991                                  	 ; mov al, 0           
   992                                      ; out 42h, al          
   993                                      ; ; Wait for a keypress
   994                                  ; wait_for_key:
   995                                      ; mov ah, 0                      ; BIOS keyboard function
   996                                      ; int 16h                        ; Wait for key
   997                                  
   998                                      ; ; Clear the stack and prepare for a clean exit
   999                                  ; reset_stack:
  1000                                      ; cli                            ; Disable interrupts
  1001                                      ; xor ax, ax                     ; AX = 0
  1002                                      ; mov ss, ax                     ; Reset stack segment to 0
  1003                                      ; mov sp, 0xFFFE                 ; Set stack pointer to a safe high value
  1004                                      ; sti                            ; Re-enable interrupts
  1005                                  
  1006                                      ; ; Restore video mode to text mode 03h (80x25 color text)
  1007                                      ; mov ax, 0x0003                 ; Set video mode 03h
  1008                                      ; int 0x10                       ; Call BIOS to restore text mode
  1009                                  
  1010                                      ; ; Forcefully restore all critical interrupt vectors
  1011                                      ; xor ax, ax                     ; AX = 0
  1012                                      ; mov es, ax                     ; ES = 0 (interrupt vector table segment)
  1013                                  
  1014                                      ; ; Restore default INT 9h (keyboard interrupt) to BIOS
  1015                                      ; ;mov word [es:9*4], 0x1C        ; Default offset for keyboard handler
  1016                                      ; ;mov word [es:9*4+2], 0xF000    ; Default segment for keyboard handler
  1017                                  ; mov ax,[oldtimer]
  1018                                  ; mov bx,[oldtimer+2]
  1019                                       ; mov word [es:8*4],ax 
  1020                                       ; mov [es:8*4+2], bx
  1021                                  ; ; mov byte [cs:dead], 1  ; Stop the sound
  1022                                      ; ; Stop the sound by disabling the speaker
  1023                                      ; mov ah, 0                      ; BIOS keyboard function
  1024                                      ; int 16h                        ; Clear buffer with wait
  1025                                      ; mov ah, 1
  1026                                      ; int 16h                        ; Test for a keypress
  1027                                      ; jz no_more_keys
  1028                                  ; clear_keys:
  1029                                      ; mov ah, 0
  1030                                      ; int 16h                        ; Read and discard key
  1031                                      ; jmp no_more_keys
  1032                                  ; no_more_keys:
  1033                                  
  1034                                      ; mov al, 20h                    ; End-of-Interrupt command
  1035                                      ; out 20h, al                    ; Send to PIC
  1036                                      ; mov cx, 0FFFFh                 ; Arbitrary delay
  1037                                  ; delay_loop:
  1038                                      ; loop delay_loop
  1039                                  ; jmp ll2
  1040                                      ; ; Terminate program and return to DOS
  1041                                      ; mov ax, 0x4C00                 ; DOS terminate program function
  1042                                      ; int 0x21                       ; Exit program and return to DOS
  1043                                  
  1044                                  
  1045                                  
  1046                                  ; upper_part:
  1047                                  ; push cs 
  1048                                  ; pop ds
  1049                                  ; push es
  1050                                      ; xor di, di
  1051                                      ; mov al, 35h
  1052                                      ; mov cx, 320 * 60
  1053                                      ; rep stosb
  1054                                  	; pop es
  1055                                      ; ret
  1056                                  
  1057                                  ; medium_part:
  1058                                  ; push cs 
  1059                                  ; pop ds
  1060                                  ; push es
  1061                                      ; mov di, 320 * 60
  1062                                      ; mov al, 35h
  1063                                      ; mov cx, 360 * 60
  1064                                      ; rep stosb
  1065                                  	; pop es
  1066                                      ; ret
  1067                                  
  1068                                  ; lower_part:
  1069                                  ; push cs 
  1070                                  ; pop ds
  1071                                  ; push es
  1072                                      ; mov di, 320 * 120
  1073                                      ; mov al, 35h
  1074                                      ; mov cx, 320 * 80
  1075                                      ; rep stosb
  1076                                  	; pop es
  1077                                      ; ret
  1078                                  
  1079                                  ; sscore:
  1080                                  ; push cs 
  1081                                  ; pop ds
  1082                                  ; push es
  1083                                      ; pusha
  1084                                      ; mov si, cscore
  1085                                      ; mov ah, 02h
  1086                                      ; mov bh, 0
  1087                                      ; mov dh, 24
  1088                                      ; mov dl, 1
  1089                                      ; int 10h
  1090                                      ; mov ah, 0Eh
  1091                                      ; mov bh, 0
  1092                                      ; mov bl, 15
  1093                                  
  1094                                  ; print_scoer:
  1095                                      ; lodsb
  1096                                      ; cmp al, 0
  1097                                      ; je done_
  1098                                      ; int 10h
  1099                                      ; jmp print_scoer
  1100                                  
  1101                                  ; done_:
  1102                                      ; popa
  1103                                  	; pop es
  1104                                      ; ret
  1105                                  
  1106                                  ; cal_dig:
  1107                                  
  1108                                      ; call sscore
  1109                                  	; push cs 
  1110                                  ; pop ds
  1111                                  ; push es
  1112                                      ; mov ax, [score]
  1113                                  	; cmp ax,1000
  1114                                  	; je movv
  1115                                  	; jne movv1
  1116                                  	; movv:
  1117                                  	; mov ax,0
  1118                                  	; movv1:
  1119                                      ; xor cx, cx
  1120                                      ; mov bx, 10
  1121                                  ; store_digits:
  1122                                  ; push cs 
  1123                                  ; pop ds
  1124                                      ; xor dx, dx
  1125                                      ; div bx
  1126                                      ; push dx
  1127                                      ; inc cx
  1128                                      ; cmp ax, 0
  1129                                      ; jnz store_digits
  1130                                  
  1131                                  ; draw_score:
  1132                                  ; push cs 
  1133                                  ; pop ds
  1134                                      ; mov ah, 02h
  1135                                      ; mov bh, 0
  1136                                      ; mov dh, 24
  1137                                      ; mov dl, 8
  1138                                      ; int 10h
  1139                                  
  1140                                  ; print_digits:
  1141                                  
  1142                                      ; pop dx
  1143                                      ; add dl, 0x30
  1144                                      ; mov al, dl
  1145                                      ; mov ah, 0Eh
  1146                                      ; mov bh, 0
  1147                                      ; int 10h
  1148                                      ; inc dl
  1149                                      ; loop print_digits
  1150                                  	; pop es
  1151                                      ; ret    
  1152                                  
  1153                                  
  1154                                  ; bird_body:
  1155                                  ; push cs 
  1156                                  ; pop ds
  1157                                  ; push es
  1158                                      ; pusha
  1159                                      ; mov bx,12 
  1160                                      ; mov si, [bird_pos] 
  1161                                      ; add si,18
  1162                                      ; mov word[bird_top_corner],si
  1163                                      ; sub si,18
  1164                                  ; body:
  1165                                      ; mov di, si
  1166                                      ; mov al, 14 
  1167                                      ; mov cx, 18 
  1168                                      ; rep stosb
  1169                                      ; sub bx,1
  1170                                      ; add si, 320
  1171                                      ; cmp bx, 0 
  1172                                      ; jnz body
  1173                                  	; push di
  1174                                  	; mov di,[bird_pos]
  1175                                  	; add di,1608
  1176                                  	; mov al,  0xCC
  1177                                  	; stosb
  1178                                  	; inc di
  1179                                  	; stosb
  1180                                  	; inc di
  1181                                  	; stosb
  1182                                  	; pop di
  1183                                      ; sub si,320
  1184                                      ; mov word[bird_bottom_corner],si
  1185                                      ; add si,18
  1186                                      ; mov word[bird_bottom_corner_end],si
  1187                                      ; sub si,18
  1188                                      ; mov [bird_position_holder],si
  1189                                      ; popa
  1190                                  ; pop es	
  1191                                      ; ret 
  1192                                  
  1193                                  ; defDrawPipe:
  1194                                      ; push bp
  1195                                      ; mov bp, sp
  1196                                      ; pusha
  1197                                      ; mov cx, [bp+4]
  1198                                      ; mov dx, 0
  1199                                      ; mov ah, 0ch
  1200                                      ; mov bx, [bp+6]
  1201                                      ; mov word [intBottomPipeStart], bx
  1202                                      ; add word [intBottomPipeStart], 55
  1203                                      ; mov word [boolDrawBottomPipe], 0
  1204                                      ; mov word [intPipeEndX], cx
  1205                                      ; add word [intPipeEndX], 40
  1206                                      ; cmp word [bp+8], 1
  1207                                      ; je drawTopPipe
  1208                                      ; cmp word [leftOverPipeWidth], 0
  1209                                      ; jbe endDrawPipe
  1210                                      ; mov cx, [leftOverPipeWidth]
  1211                                      ; mov word [intPipeEndX], cx
  1212                                      ; mov cx, 40
  1213                                      ; sub cx, [leftOverPipeWidth]
  1214                                      ; add bx, cx
  1215                                      ; mov cx, 0
  1216                                      ; dec word [leftOverPipeWidth]
  1217                                  ; drawTopPipe:
  1218                                      ; mov al,2
  1219                                  ; colorSelected:
  1220                                      ; cmp cx, 320
  1221                                      ; jae endDrawPipe
  1222                                      ; cmp cx, 0
  1223                                      ; jb endDrawPipe
  1224                                      ; int 10h
  1225                                  ; skipPipe:
  1226                                      ; inc dx
  1227                                      ; cmp dx, [bp+6]
  1228                                      ; jbe drawTopPipe
  1229                                      ; cmp dx, [intBottomPipeStart]
  1230                                      ; ja notSkip
  1231                                      ; add dx, 54
  1232                                  ; notSkip:
  1233                                      ; cmp dx, 180
  1234                                      ; jb drawTopPipe
  1235                                      ; inc cx
  1236                                      ; mov dx, 0
  1237                                      ; inc bx
  1238                                      ; cmp cx, [intPipeEndX]
  1239                                      ; jb drawTopPipe
  1240                                  ; endDrawPipe:
  1241                                      ; popa 
  1242                                      ; pop bp
  1243                                  	; ;pop es
  1244                                      ; ret 6
  1245                                  ; movePipe:
  1246                                  ; push cs 
  1247                                  ; pop ds
  1248                                      ; push bp
  1249                                      ; mov bp, sp
  1250                                      ; pusha
  1251                                      ; inc word[rect_mov_count]
  1252                                      ; cmp word[rect_mov_count],325
  1253                                      ; je incc
  1254                                      ; jne noincc
  1255                                  ; incc:
  1256                                      ; mov word[rect_mov_count],0
  1257                                      ; inc word[score]
  1258                                      ; call cal_dig
  1259                                  ; noincc:
  1260                                      ; mov bx, [bp+4]
  1261                                      ; dec word [bx]
  1262                                      ; mov cx, [bx]
  1263                                      ; add cx,41
  1264                                      ; mov word [boolAdjusted], 0
  1265                                      ; cmp cx, 320
  1266                                      ; jge adjustX
  1267                                      ; jmp continueDrawing
  1268                                  ; adjustX:
  1269                                      ; sub word cx, 320
  1270                                      ; mov word [boolAdjusted], 1
  1271                                  ; continueDrawing:
  1272                                      ; mov dx,0
  1273                                      ; mov al,35h
  1274                                      ; mov ah,0ch
  1275                                      ; mov si,[bp+6]
  1276                                  ; drawLastColumnSky:
  1277                                      ; int 10h
  1278                                      ; cmp dx, [ds:si]
  1279                                      ; jne continueDrawingSky
  1280                                      ; cmp word [boolAdjusted], 0
  1281                                      ; je notCheckForadjusted
  1282                                      ; cmp cx,41
  1283                                      ; ja skipSkyColumn
  1284                                  ; notCheckForadjusted:
  1285                                      ; cmp cx,41
  1286                                      ; jb continueDrawingSky
  1287                                      ; add dx, 55
  1288                                      ; jmp drawLastColumnSky
  1289                                  ; continueDrawingSky:
  1290                                      ; inc dx
  1291                                      ; cmp dx,180
  1292                                      ; jb drawLastColumnSky
  1293                                  ; skipSkyColumn:
  1294                                      ; sub cx,41
  1295                                      ; cmp cx,0
  1296                                      ; jne endMovePipe
  1297                                      ; cmp word [pipesX], 0
  1298                                      ; jne endMovePipeContinue
  1299                                      ; mov word [boolFirstPipe], 1
  1300                                  ; endMovePipeContinue:
  1301                                      ; mov word [leftOverPipeWidth], 40
  1302                                      ; mov cx, [ds:si]
  1303                                      ; mov word [leftOverPipeY], cx
  1304                                      ; mov word [bx], 320
  1305                                      ; push word [bp+6]
  1306                                      ; call generateRandomNumber
  1307                                  ; endMovePipe:
  1308                                      ; popa
  1309                                      ; pop bp
  1310                                      ; ret 2
  1311                                  ; generateRandomNumber:
  1312                                  ; push cs 
  1313                                  ; pop ds
  1314                                      ; push bp
  1315                                      ; mov bp, sp
  1316                                      ; pusha
  1317                                      ; mov ah,0
  1318                                      ; int 1ah
  1319                                      ; mov ax,dx
  1320                                      ; mov bx,60
  1321                                      ; mov dx,0
  1322                                      ; div bx
  1323                                      ; mov bx, [bp+4]
  1324                                      ; mov word [bx], dx
  1325                                      ; add word [bx], 20
  1326                                      ; popa
  1327                                      ; pop bp
  1328                                      ; ret 2
  1329                                  
  1330                                  ; ground:
  1331                                  ; push cs 
  1332                                  ; pop ds
  1333                                  ; push es
  1334                                      ; mov di, 57600
  1335                                      ; mov cx, 320 * 10
  1336                                      ; mov bx, 1
  1337                                  ; .draw_gradient:
  1338                                      ; mov al, [green_shades+bx]
  1339                                      ; stosb
  1340                                      ; inc bx
  1341                                      ; cmp bx, 4
  1342                                      ; jne .continue_gradient
  1343                                      ; mov bx, 1
  1344                                  ; .continue_gradient:
  1345                                      ; loop .draw_gradient
  1346                                      ; mov di, 60800
  1347                                      ; mov al, 6
  1348                                      ; mov cx, 320 * 10
  1349                                      ; rep stosb
  1350                                  	; pop es
  1351                                      ; ret
  1352                                  
  1353                                  
  1354                                  ; delay:
  1355                                  ; push cs 
  1356                                  ; pop ds
  1357                                   ; pusha
  1358                                   ; mov cx,64000
  1359                                  ; delay1:
  1360                                   ; loop delay1
  1361                                   ; popa
  1362                                   ; ret
  1363                                  
  1364                                  
  1365                                  
  1366                                  ; remover_bird:
  1367                                  ; push cs 
  1368                                  ; pop ds
  1369                                   ; pusha
  1370                                   ; mov di,si
  1371                                   ; mov al,35h
  1372                                   ; mov cx,18
  1373                                   ; rep stosb
  1374                                   ; popa
  1375                                   ; ret
  1376                                  
  1377                                  
  1378                                  
  1379                                  ; bird_falling:
  1380                                  ; push cs 
  1381                                  ; pop ds
  1382                                  ; pusha
  1383                                  ; mov ax,0xA000
  1384                                  ; mov es,ax
  1385                                  ; push di
  1386                                  ; mov di,[bird_top_corner]
  1387                                  ; cmp byte[es:di],2
  1388                                  ; je exit_game_1
  1389                                  ; mov di,[bird_bottom_corner]
  1390                                  ; cmp byte[es:di+320],2
  1391                                  ; je exit_game_1
  1392                                  ; mov di,[bird_bottom_corner_end]
  1393                                  ; cmp byte[es:di+320],2
  1394                                  ; je exit_game_1
  1395                                  ; pop di
  1396                                   ; mov si,word[bird_pos]
  1397                                   ; call remover_bird
  1398                                   ; add word[bird_pos],320
  1399                                   ; call bird_body
  1400                                  ; jmp outr
  1401                                  ; exit_game_1:
  1402                                  ; mov word[collision_detected],1
  1403                                  ; pop di
  1404                                  ; outr:
  1405                                   ; popa
  1406                                   ; ret
  1407                                  
  1408                                  ; moving_up:
  1409                                  ; push cs 
  1410                                  ; pop ds
  1411                                   ; pusha
  1412                                  ; mov ax,0xA000
  1413                                  ; mov es,ax
  1414                                  ; push di
  1415                                  ; mov di,[bird_top_corner]
  1416                                  ; cmp byte[es:di-320],2
  1417                                  ; je exit_game_2
  1418                                  ; mov di,[bird_bottom_corner_end]
  1419                                  ; cmp byte[es:di],2
  1420                                  ; je exit_game_2
  1421                                  ; mov di,[bird_pos]
  1422                                  ; cmp byte[es:di-320],2
  1423                                  ; je exit_game_2
  1424                                  ; pop di
  1425                                  
  1426                                   ; sub word[bird_pos],320
  1427                                   ; mov si,[bird_position_holder]
  1428                                   ; call remover_bird
  1429                                   ; call bird_body
  1430                                  ; jmp outrr
  1431                                  ; exit_game_2:
  1432                                  ; mov word[collision_detected],1
  1433                                  ; pop di
  1434                                  ; outrr:
  1435                                   ; popa
  1436                                   ; ret
  1437                                  
  1438                                  ; bird_falling_collide:
  1439                                  ; push cs 
  1440                                  ; pop ds
  1441                                  ; pusha
  1442                                   ; mov si,word[bird_pos]
  1443                                   ; call remover_bird
  1444                                   ; add word[bird_pos],320
  1445                                   ; call bird_body
  1446                                   ; popa
  1447                                   ; ret
  1448                                  
  1449                                  ; remover_extra:
  1450                                  ; push cs 
  1451                                  ; pop ds
  1452                                  ; pusha
  1453                                   ; mov di,[bird_pos]
  1454                                  ; mov cx,12
  1455                                   ; mov al,35h
  1456                                  ; l2:
  1457                                   ; stosb
  1458                                   ; add di,319
  1459                                  ; loop l2
  1460                                   ; popa
  1461                                   ; ret
  1462                                  
  1463                                  
  1464                                  ; collide_extra:
  1465                                  ; push cs 
  1466                                  ; pop ds
  1467                                  ; pusha
  1468                                  ; l1:
  1469                                  ; call remover_extra
  1470                                  ; add word[bird_pos],1
  1471                                  ; call delay
  1472                                  ; call delay
  1473                                  ; call bird_body
  1474                                  ; mov di,[bird_bottom_corner]
  1475                                  ; cmp byte[es:di+320],2
  1476                                  ; je l1
  1477                                  ; popa
  1478                                  ; ret
  1479                                  
  1480                                  ; Collider:
  1481                                      ; mov al, 11111101b    ; Clear bit 1 (Speaker Gate)
  1482                                      ; in  al, 61h          ; Read current state of port 61h
  1483                                      ; and al, 11111100b    ; Clear speaker bits
  1484                                      ; out 61h, al          ; Write back to port 61h
  1485                                      ; mov al, 10110110b    ; Control word: Select Channel 2, Latch Command
  1486                                      ; out 43h, al          ; Send control word to PIT command register
  1487                                      ; mov al, 0            ; Send initial count low byte
  1488                                      ; out 42h, al          ; Write to Channel 2 data port
  1489                                      ; mov al, 0            ; Send initial count high byte
  1490                                      ; out 42h, al
  1491                                  ; push cs 
  1492                                  ; pop ds
  1493                                  ; iteration:
  1494                                  ; pusha
  1495                                  ; mov ax,0xA000
  1496                                  ; mov es,ax
  1497                                  ; mov di,[bird_bottom_corner_end]
  1498                                  ; cmp byte[es:di+318],2
  1499                                  ; je outrrr
  1500                                  ; mov di,[bird_bottom_corner]
  1501                                  ; cmp byte[es:di+320],2
  1502                                  ; je outrrr
  1503                                  ; popa
  1504                                  ; call delay
  1505                                  ; call bird_falling_collide
  1506                                  ; cmp word[bird_bottom_corner_end],57600
  1507                                  ; jb iteration
  1508                                  ; jmp labela
  1509                                  ; outrrr:
  1510                                  ; call collide_extra
  1511                                  ; popa
  1512                                  ; call Collider
  1513                                  ; labela:
  1514                                  ; call delay
  1515                                  ; call delay
  1516                                  ; call exit_game
  1517                                  ; ret
  1518                                  
  1519                                  ; HandleKeyPress:
  1520                                  ; push cs 
  1521                                  ; pop ds
  1522                                      ; push ax
  1523                                      ; push bx
  1524                                      ; push cx
  1525                                      ; push dx
  1526                                      ; mov ah, 1          
  1527                                      ; int 0x16
  1528                                      ; jz no_key_pressed  
  1529                                      ; mov ah, 0          
  1530                                      ; int 0x16
  1531                                      ; cmp ah, 0x01          
  1532                                      ; je exit_game_press
  1533                                  
  1534                                      ; cmp ah, 0x48          
  1535                                      ; je handle_up
  1536                                  
  1537                                      ; cmp ah, 0xC8          
  1538                                      ; je handle_release
  1539                                  
  1540                                      ; jmp no_key_pressed    
  1541                                  
  1542                                  ; exit_game_press:
  1543                                      ; call ShowExitConfirmation
  1544                                      ; jmp out_of
  1545                                  
  1546                                  ; handle_up:
  1547                                      ; mov word [is_flapping], 1  
  1548                                      ; mov word [tickcount], 0    
  1549                                      ; call moving_up             
  1550                                      ; jmp out_of
  1551                                  ; handle_release:
  1552                                      ; cmp byte [timer_hooked], 1 
  1553                                      ; je out_of                  
  1554                                      ; mov byte [timer_hooked], 1 
  1555                                      ; call hook_timer            
  1556                                      ; mov word [is_flapping], 0  
  1557                                      ; jmp out_of
  1558                                  ; no_key_pressed:
  1559                                      ; call bird_falling
  1560                                  ; out_of:
  1561                                      ; pop dx
  1562                                      ; pop cx
  1563                                      ; pop bx
  1564                                      ; pop ax
  1565                                      ; ret
  1566                                  
  1567                                  
  1568                                  ; hook_timer:
  1569                                  ; push cs 
  1570                                  ; pop ds
  1571                                      ; cli                        
  1572                                      ; push ds
  1573                                      ; xor ax, ax
  1574                                      ; mov es, ax
  1575                                      ; mov ax, word [es:8*4]
  1576                                      ; mov word [old_timer], ax
  1577                                      ; mov ax, word [es:8*4+2]
  1578                                      ; mov word [old_timer+2], ax
  1579                                      ; mov ax, [delay_threshold]
  1580                                      ; mov word [es:8*4], timr
  1581                                      ; mov word [es:8*4+2], cs
  1582                                      ; pop ds
  1583                                      ; sti
  1584                                      ; ret
  1585                                  
  1586                                  ; timr:
  1587                                  ; push cs 
  1588                                  ; pop ds
  1589                                      ; push ax
  1590                                      ; push bx
  1591                                      ; push cx
  1592                                      ; push dx
  1593                                      ; inc word [tickcount]
  1594                                      ; cmp word [tickcount], ax
  1595                                      ; jne end_timer
  1596                                      ; mov word [tickcount], 0
  1597                                      ; call bird_falling
  1598                                      ; mov byte [timer_hooked], 0
  1599                                      ; call unhook_timer
  1600                                  ; end_timer:
  1601                                      ; mov al, 0x20
  1602                                      ; out 0x20, al
  1603                                      ; pop dx
  1604                                      ; pop cx
  1605                                      ; pop bx
  1606                                      ; pop ax
  1607                                      ; iret
  1608                                  
  1609                                  ; unhook_timer:
  1610                                  ; push cs 
  1611                                  ; pop ds
  1612                                      ; cli
  1613                                      ; push ds
  1614                                      ; xor ax, ax
  1615                                      ; mov es, ax
  1616                                      ; mov ax, word [old_timer]
  1617                                      ; mov word [es:8*4], ax
  1618                                      ; mov ax, word [old_timer+2]
  1619                                      ; mov word [es:8*4+2], ax
  1620                                      ; pop ds
  1621                                      ; sti
  1622                                      ; ret
  1623                                  
  1624                                  ; ground_mover:
  1625                                  ; push cs 
  1626                                  ; pop ds
  1627                                   ; pusha
  1628                                   ; push ds
  1629                                   ; push es
  1630                                   ; mov ax,0xA000
  1631                                   ; mov ds,ax
  1632                                   ; mov di,57600
  1633                                   ; mov si,57602
  1634                                   ; mov cx,3198
  1635                                   ; rep movsb
  1636                                   ; pop es
  1637                                   ; pop ds
  1638                                   ; popa
  1639                                   ; ret
  1640                                  
  1641                                  ; PrintStartScreen:
  1642                                   ; call upper_part  
  1643                                   ; call medium_part
  1644                                   ; call lower_part
  1645                                   ; call bird_body
  1646                                   ; call ground
  1647                                   ; ret
  1648                                  
  1649                                  ; anime:
  1650                                  	; call sscore
  1651                                  
  1652                                  ; main_loop:
  1653                                  	; call delay
  1654                                  	; call delay
  1655                                      ; call HandleKeyPress 
  1656                                  	; call collision
  1657                                  	; cmp word[collision_detected],1
  1658                                  	; je Collider
  1659                                  	; mov word[collision_detected],0
  1660                                  ; continue_loop:
  1661                                  ; mov ax,0xA000
  1662                                  ; mov ds,ax
  1663                                      ; push pipesY ; y-coordinate address of pipe
  1664                                      ; push pipesX ; x-coordinate address of pipe    
  1665                                      ; call movePipe
  1666                                  
  1667                                      ; push pipesY+2 ; y-coordinate address of pipe
  1668                                      ; push pipesX+2 ; x-coordinate address of pipe
  1669                                      ; call movePipe
  1670                                      ; push 1
  1671                                      ; push word [pipesY] ; x-coordinate of pipe
  1672                                      ; push word [pipesX] ; y-coordinate of pipe
  1673                                      ; call defDrawPipe
  1674                                      ; push 1
  1675                                      ; push word [pipesY+2] ; x-coordinate of pipe
  1676                                      ; push word [pipesX+2] ; y-coordinate of pipe
  1677                                      ; call defDrawPipe
  1678                                      ; push 0
  1679                                      ; push word [leftOverPipeY]
  1680                                      ; push 0
  1681                                      ; call defDrawPipe
  1682                                  	; call ground_mover
  1683                                  		; ;call music
  1684                                  ; jmp main_loop ; Repeat the main loop
  1685                                  	; ret
  1686                                  ; sound:
  1687                                      ; pusha                       ; Save all general-purpose registers
  1688                                      ; push ds                     ; Save DS
  1689                                      ; push es                     ; Save ES
  1690                                      ; push ss                     ; Save SS
  1691                                      ; mov ax, 0xA000              ; Video memory segment
  1692                                      ; mov es, ax                  ; Use ES for potential screen updates (if needed)
  1693                                  
  1694                                  ; infinite_sound_loop:
  1695                                      ; mov al, 182                 ; Command to set frequency mode
  1696                                      ; out 43h, al
  1697                                      ; mov bx, 1193180             ; Base frequency of 1.19318 MHz
  1698                                      ; div bx                      ; Calculate divisor for desired frequency
  1699                                      ; out 42h, al                 ; Low byte of divisor to timer
  1700                                      ; mov al, ah
  1701                                      ; out 42h, al                 ; High byte of divisor to timer
  1702                                  
  1703                                      ; ; Enable the speaker
  1704                                      ; in al, 61h                  ; Read speaker control register
  1705                                      ; or al, 00000011b            ; Enable speaker
  1706                                      ; out 61h, al
  1707                                  
  1708                                      ; ; Optional delay or loop (minimal)
  1709                                      ; nop                         ; Use NOP or a small delay instead of an infinite loop
  1710                                      ; nop
  1711                                  
  1712                                      ; ; Disable the speaker
  1713                                      ; in al, 61h
  1714                                      ; and al, 11111100b           ; Disable speaker
  1715                                      ; out 61h, al
  1716                                      ; jmp infinite_sound_loop
  1717                                  
  1718                                  ; sound_exit:
  1719                                      ; pop ss                      ; Restore SS
  1720                                      ; pop es                      ; Restore ES
  1721                                      ; pop ds                      ; Restore DS
  1722                                      ; popa                        ; Restore all general-purpose registers
  1723                                      ; ret                         ; Return to caller
  1724                                  ; prrint:
  1725                                  ; inc word [score]
  1726                                  ; call sound
  1727                                  ; jmp prrint
  1728                                  ; start:
  1729                                  
  1730                                   ; call DisplayIntroduction 
  1731                                   ; mov ah,0
  1732                                   ; int 16h
  1733                                   ; cmp ah,0x01
  1734                                   ; je exit_game
  1735                                   ; call PrintStartScreen 
  1736                                       ; xor ax, ax
  1737                                       ; mov es, ax
  1738                                       ; cli
  1739                                  	 ; mov ax, word[es:8*4]
  1740                                  	 ; mov word [oldtimer],ax
  1741                                  	 ; mov ax,word[es:8*4+2]
  1742                                  	 ; mov word[oldtimer+2],ax
  1743                                       ; mov word [es:8*4], timer
  1744                                       ; mov [es:8*4+2], cs
  1745                                       ; sti
  1746                                  
  1747                                  ; ll1:
  1748                                       ; mov word [pcb+10+4], sound         ; Game logic thread
  1749                                       ; mov [pcb+10+6], cs
  1750                                       ; mov word [pcb+10+8], 0x0200    
  1751                                       ; mov word [pcb+20+4], anime  ; Music thread
  1752                                       ; mov [pcb+20+6], cs
  1753                                       ; mov word [pcb+20+8], 0x0200         ; Flags
  1754                                       ; mov word [current], 0               ; Start with the first task
  1755                                  	 ; jmp ll1
  1756                                  	 ; ll2:
  1757                                  	 ; cmp word[game_end] ,1
  1758                                  	 ; je exxxxit
  1759                                  	 ; exxxxit:
  1760                                   ; mov ax, 0x4C00
  1761                                  ; int 0x21
  1762                                  ; timer:
  1763                                  	; push cs 
  1764                                  ; pop ds
  1765                                    ; push ax
  1766                                   ; push bx
  1767                                   ; mov bl, [cs:current] ; read index of current task ... bl
  1768                                   ; mov ax, 10 ; space used by
  1769                                   ; mul bl ; multiply to get
  1770                                   ; mov bx, ax ; load start of
  1771                                   ; pop ax ; read origina
  1772                                  
  1773                                   ; mov [cs:pcb+bx+2], ax ; space for current task's BX
  1774                                   ; pop ax ; read original
  1775                                   ; mov [cs:pcb+bx+0], ax ; space for current task's AX
  1776                                   ; pop ax ; read original
  1777                                   ; mov [cs:pcb+bx+4], ax ; space for current task
  1778                                   ; pop ax ; read original
  1779                                   ; mov [cs:pcb+bx+6], ax ; space for current task
  1780                                   ; pop ax ; read original
  1781                                   ; mov [cs:pcb+bx+8], ax ; space for current task
  1782                                   ; inc byte [cs:current] ; update current task index...1
  1783                                   ; cmp byte [cs:current], 3; is task index out of range
  1784                                   ; jne skipreset ; no, proceed
  1785                                   ; mov byte [cs:current], 0 ; yes, reset to task 0
  1786                                   ; skipreset: 
  1787                                   ; mov bl, [cs:current] ; read index of current task
  1788                                   ; mov ax, 10 ; space used by
  1789                                   ; mul bl ; multiply to get
  1790                                   ; mov bx, ax ; load start of
  1791                                   ; mov al, 0x20
  1792                                   ; out 0x20, al ; send EOI to PIC
  1793                                   ; push word [cs:pcb+bx+8] ; flags of new task...
  1794                                   ; push word [cs:pcb+bx+6] ; cs of new task ...
  1795                                   ; push word [cs:pcb+bx+4] ; ip of new task...
  1796                                   ; mov ax, [cs:pcb+bx+0] ; ax of new task...pcb+10+0
  1797                                   ; mov bx, [cs:pcb+bx+2] ; bx of new task...pcb+10+2
  1798                                   ; iret ; return to new
