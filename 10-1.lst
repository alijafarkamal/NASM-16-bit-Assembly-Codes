     1                                  ; org 0x100                 ; COM file starts at 0x100 in memory
     2                                  
     3                                  ; section .data
     4                                  ; name times 29 db       ; Buffer for name (29 max characters, +2 for control)
     5                                  ; roll times 9 db    ; Buffer for roll number (9 max characters, +2 for control)
     6                                  ; course times 29 db ; Buffer for course name (29 max characters, +2 for control)
     7                                  ; section_name times 9 db ; Buffer for section (9 max characters, +2 for control)
     8                                  
     9                                  ; msg_name db "Enter your surname: $"
    10                                  ; msg_roll db "Enter your roll number: $"
    11                                  ; msg_course db "Enter your course name: $"
    12                                  ; msg_section db "Enter your section: $"
    13                                  ; newline1 db 0Dh, 0Ah, "$"         ; Newline sequence for DOS interrupt 21h
    14                                  
    15                                  ; section .text
    16                                  ; start:
    17                                      ; mov dx, msg_name
    18                                      ; call print_string            ; Print "Enter your name:"
    19                                      ; lea dx, [name]
    20                                      ; call read_string             ; Read user input into 'name'
    21                                      ; call newline                 ; Move to the next line
    22                                  
    23                                  
    24                                      ; mov dx, msg_roll
    25                                      ; call print_string            ; Print "Enter your roll number:"
    26                                      ; lea dx, [roll]
    27                                      ; call read_string             ; Read user input into 'roll'
    28                                      ; call newline                 ; Move to the next line
    29                                  
    30                                      ; ; Ask for and store the course name
    31                                      ; mov dx, msg_course
    32                                      ; call print_string            ; Print "Enter your course name:"
    33                                      ; lea dx, [course]
    34                                      ; call read_string             ; Read user input into 'course'
    35                                      ; call newline                 ; Move to the next line
    36                                  
    37                                      ; ; Ask for and store the section
    38                                      ; mov dx, msg_section
    39                                      ; call print_string            ; Print "Enter your section:"
    40                                  	
    41                                      ; lea dx, [section_name]
    42                                      ; call read_string             ; Read user input into 'section_name'
    43                                      ; call newline                 ; Move to the next line
    44                                  
    45                                      ; ; Program end
    46                                      ; mov ax, 0x4C00              ; DOS terminate program
    47                                      ; int 0x21
    48                                  ; ; Subroutine to print a string (uses DOS interrupt 21h, function 09h)
    49                                  ; print_string:
    50                                      ; mov ah, 0x09                ; DOS function 09h: print string
    51                                      ; int 0x21                    ; Print the string at DS:DX
    52                                      ; ret
    53                                  ; read_string:
    54                                      ; mov ah, 0x0A                  ;DOS function 0Ah: buffered input
    55                                      ; int 0x21                    		;Read user input into buffer at DS:DX
    56                                      ; ret
    57                                  
    58                                  ; newline:
    59                                      ; mov dx, newline1
    60                                      ; call print_string
    61                                      ; ret
    62                                  org 0x100                 ; COM file starts at 0x100 in memory
    63                                  
    64                                  section .data
    65 00000000 <rep 1Dh>               name times 29 db       ; Buffer for name (29 max characters, +2 for control)
    65          ******************       warning: no operand for data declaration [-w+db-empty]
    66 00000000 <rep 9h>                roll times 9 db        ; Buffer for roll number (9 max characters, +2 for control)
    66          ******************       warning: no operand for data declaration [-w+db-empty]
    67 00000000 <rep 1Dh>               course times 29 db     ; Buffer for course name (29 max characters, +2 for control)
    67          ******************       warning: no operand for data declaration [-w+db-empty]
    68 00000000 <rep 9h>                section_name times 9 db; Buffer for section (9 max characters, +2 for control)
    68          ******************       warning: no operand for data declaration [-w+db-empty]
    69                                  
    70 00000000 456E74657220796F75-     msg_name db "Enter your surname: $"
    70 00000009 72207375726E616D65-
    70 00000012 3A2024             
    71 00000015 456E74657220796F75-     msg_roll db "Enter your roll number: $"
    71 0000001E 7220726F6C6C206E75-
    71 00000027 6D6265723A2024     
    72 0000002E 456E74657220796F75-     msg_course db "Enter your course name: $"
    72 00000037 7220636F7572736520-
    72 00000040 6E616D653A2024     
    73 00000047 456E74657220796F75-     msg_section db "Enter your section: $"
    73 00000050 722073656374696F6E-
    73 00000059 3A2024             
    74 0000005C 0D0A24                  newline1 db 0Dh, 0Ah, "$"         ; Newline sequence for DOS interrupt 21h
    75 0000005F 596F757220656E7465-     msg_prompt db "Your entered data: $"
    75 00000068 72656420646174613A-
    75 00000071 2024               
    76 00000073 4E616D653A2024          label_name db "Name: $"
    77 0000007A 526F6C6C204E756D62-     label_roll db "Roll Number: $"
    77 00000083 65723A2024         
    78 00000088 436F757273653A2024      label_course db "Course: $"
    79 00000091 53656374696F6E3A20-     label_section db "Section: $"
    79 0000009A 24                 
    80                                  
    81                                  section .text
    82                                  start:
    83                                      ; Ask for and read the name
    84 00000000 60                      	pusha 
    85 00000001 BA[0000]                    mov dx, msg_name
    86 00000004 E89200                      call print_string            ; Print "Enter your name:"
    87 00000007 BA0000                  	mov dx,0
    88 0000000A 8D16[0000]                  lea dx, [name]
    89 0000000E E88F00                      call read_string             ; Read user input into 'name'
    90 00000011 E89300                      call newline                 ; Move to the next line
    91 00000014 61                      popa
    92 00000015 60                      pusha
    93                                      ; Ask for and read the roll number
    94 00000016 BA[1500]                    mov dx, msg_roll
    95 00000019 E87D00                      call print_string            ; Print "Enter your roll number:"
    96 0000001C BA0000                  	mov dx,0
    97 0000001F 8D16[0000]                  lea dx, [roll]
    98 00000023 E87A00                      call read_string             ; Read user input into 'roll'
    99 00000026 E87E00                      call newline                 ; Move to the next line
   100 00000029 61                      popa
   101                                      ; Ask for and read the course name
   102 0000002A 60                      pusha
   103 0000002B BA[2E00]                    mov dx, msg_course
   104 0000002E E86800                      call print_string            ; Print "Enter your course name:"
   105 00000031 BA0000                  	mov dx,0
   106 00000034 8D16[0000]                  lea dx, [course]
   107 00000038 E86500                      call read_string             ; Read user input into 'course'
   108 0000003B E86900                      call newline                 ; Move to the next line
   109 0000003E 61                      popa
   110 0000003F 60                      pusha
   111                                      ; Ask for and read the section name
   112 00000040 BA[4700]                    mov dx, msg_section
   113 00000043 E85300                      call print_string            ; Print "Enter your section:"
   114 00000046 BA0000                  	mov dx,0
   115 00000049 8D16[0000]                  lea dx, [section_name]
   116 0000004D E85000                      call read_string             ; Read user input into 'section_name'
   117 00000050 E85400                      call newline                 ; Move to the next line
   118 00000053 61                      popa
   119                                      ; Output all the entered data
   120                                  
   121                                      ; Display the label and name
   122 00000054 BA[7300]                    mov dx, label_name
   123 00000057 E83F00                      call print_string            ; Print "Name: "
   124 0000005A 8D16[0200]                  lea dx, [name+2]             ; Skip the first 2 bytes (for input buffer size and length)
   125 0000005E E83800                      call print_string            ; Print the name entered by user
   126 00000061 E84300                      call newline                 ; Move to the next line
   127                                  
   128                                      ; Display the label and roll number
   129 00000064 BA[7A00]                    mov dx, label_roll
   130 00000067 E82F00                      call print_string            ; Print "Roll Number: "
   131 0000006A 8D16[0200]                  lea dx, [roll+2]             ; Skip the first 2 bytes (for input buffer size and length)
   132 0000006E E82800                      call print_string            ; Print the roll number entered by user
   133 00000071 E83300                      call newline                 ; Move to the next line
   134                                  
   135                                      ; Display the label and course
   136 00000074 BA[8800]                    mov dx, label_course
   137 00000077 E81F00                      call print_string            ; Print "Course: "
   138 0000007A 8D16[0200]                  lea dx, [course+2]           ; Skip the first 2 bytes (for input buffer size and length)
   139 0000007E E81800                      call print_string            ; Print the course entered by user
   140 00000081 E82300                      call newline                 ; Move to the next line
   141                                  
   142                                      ; Display the label and section
   143 00000084 BA[9100]                    mov dx, label_section
   144 00000087 E80F00                      call print_string            ; Print "Section: "
   145 0000008A 8D16[0200]                  lea dx, [section_name+2]     ; Skip the first 2 bytes (for input buffer size and length)
   146 0000008E E80800                      call print_string            ; Print the section entered by user
   147 00000091 E81300                      call newline                 ; Move to the next line
   148                                  
   149                                      ; Program end
   150 00000094 B8004C                      mov ax, 0x4C00              ; DOS terminate program
   151 00000097 CD21                        int 0x21
   152                                  
   153                                  ; Subroutine to print a string (uses DOS interrupt 21h, function 09h)
   154                                  print_string:
   155 00000099 60                      	pusha
   156 0000009A B409                        mov ah, 0x09                ; DOS function 09h: print string
   157 0000009C CD21                        int 0x21                    ; Print the string at DS:DX
   158 0000009E 61                      	popa
   159 0000009F C3                          ret
   160                                  
   161                                  ; Subroutine to read a string (uses DOS interrupt 21h, function 0Ah)
   162                                  read_string:
   163 000000A0 60                      	pusha
   164 000000A1 B40A                        mov ah, 0x0A                  ; DOS function 0Ah: buffered input
   165 000000A3 CD21                        int 0x21                      ; Read user input into buffer at DS:DX
   166 000000A5 61                      	popa
   167 000000A6 C3                          ret
   168                                  
   169                                  ; Subroutine to move to the next line
   170                                  newline:
   171 000000A7 60                      	pusha
   172 000000A8 BA[5C00]                    mov dx, newline1
   173 000000AB E8EBFF                      call print_string
   174 000000AE 61                      	popa
   175 000000AF C3                          ret
