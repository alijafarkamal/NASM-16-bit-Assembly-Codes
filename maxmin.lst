     1                                  ;unsigned_max
     2                                  [org 0x0100]
     3                                  ;	jmp start ; unconditionally jump over data
     4                                  ;num1: dw 2,4,2,8,2
     5                                  ;max_un: dw 0
     6                                  ;start:
     7                                  ;	mov bx,num1		;pointer
     8                                  ;	mov ax,0
     9                                  ;	mov cx,0
    10                                  ;unsigned_max:
    11                                  ;	cmp ax,[bx]
    12                                  ;	jb value_get
    13                                  ;counter:
    14                                  ;	add bx,2
    15                                  ;	add cx,1
    16                                  ;	cmp cx,5
    17                                  ;	jz out
    18                                  ;	jmp unsigned_max
    19                                  ;value_get:
    20                                  ;	mov ax,[bx]
    21                                  ;	jmp counter
    22                                  ;out:
    23                                  ;	mov [max_un],ax
    24                                  	
    25                                  ;unsigned_min
    26                                  ;	jmp start ; unconditionally jump over data
    27                                  ;num1: dw 2,4,1,8,2
    28                                  ;min_un: dw 0
    29                                  ;start:
    30                                  ;	mov bx,num1		;pointer
    31                                  ;	mov ax,[bx]
    32                                  ;	add bx,2
    33                                  ;	mov cx,0
    34                                  ;unsigned_min:
    35                                  ;	cmp ax,[bx]
    36                                  ;	ja value_get
    37                                  ;counter:
    38                                  ;	add bx,2
    39                                  ;	add cx,1
    40                                  ;	cmp cx,4
    41                                  ;	jz out
    42                                  ;	jmp unsigned_min
    43                                  ;value_get:
    44                                  ;	mov ax,[bx]
    45                                  ;	jmp counter
    46                                  ;out:
    47                                  ;	mov [min_un],ax
    48                                  
    49                                  ;	jmp start ; unconditionally jump over data
    50                                  ;num1: dw -1,-2,1,-8,0
    51                                  ;min_s: dw 0
    52                                  ;start:
    53                                  ;	mov bx,num1		;pointer
    54                                  ;	mov ax,[bx]
    55                                  ;	add bx,2
    56                                  ;	mov cx,0
    57                                  ;signed_min:
    58                                  ;	cmp ax,[bx]
    59                                  ;	jg value_get
    60                                  ;counter:
    61                                  ;	add bx,2
    62                                  ;	add cx,1
    63                                  ;	cmp cx,4
    64                                  ;	jz out
    65                                  ;	jmp signed_min
    66                                  ;value_get:
    67                                  ;	mov ax,[bx]
    68                                  ;	jmp counter
    69                                  ;out:
    70                                  ;	mov [min_s],ax
    71                                  	
    72 00000000 EB0C                    		jmp start ; unconditionally jump over data
    73 00000002 FFFFFEFF0100F8FF00-     num1: dw -1,-2,1,-8,0
    73 0000000B 00                 
    74 0000000C 0000                    max_s: dw 0
    75                                  start:
    76 0000000E BB[0200]                	mov bx,num1		;pointer
    77 00000011 8B07                    	mov ax,[bx]
    78 00000013 83C302                  	add bx,2
    79 00000016 B90000                  	mov cx,0
    80                                  signed_max:
    81 00000019 3B07                    	cmp ax,[bx]
    82 0000001B 7C0D                    	jl value_get
    83                                  counter:
    84 0000001D 83C302                  	add bx,2
    85 00000020 83C101                  	add cx,1
    86 00000023 83F904                  	cmp cx,4
    87 00000026 7406                    	jz out
    88 00000028 EBEF                    	jmp signed_max
    89                                  value_get:
    90 0000002A 8B07                    	mov ax,[bx]
    91 0000002C EBEF                    	jmp counter
    92                                  out:
    93 0000002E A3[0C00]                	mov [max_s],ax
    94                                  	
    95 00000031 B8004C                  mov ax, 0x4c00 ; terminate program
    96 00000034 CD21                    int 0x21
