     1                                  ;New! Keyboard shortcuts â€¦ Drive keyboard shortcuts have been updated to give you first-letters navigation
     2                                  ; Flag Register with unsigned subtraction
     3                                  
     4                                  [org 0x0100]
     5 00000000 EB1C                    		jmp start
     6 00000002 010002000400010001-     Set: dw 1,2,4,1,1,2,3,1,2,5
     6 0000000B 000200030001000200-
     6 00000014 0500               
     7 00000016 010002000300            Subset: dw 1,2,3
     8 0000001C 0000                    Index: dw 0
     9                                  start:
    10 0000001E B80100                  	mov ax,1	;counter for subset
    11 00000021 BB[0200]                	mov bx,Set	;pointer for set
    12 00000024 BD[1600]                	mov bp,Subset	;pointer for subset
    13 00000027 B90000                  	mov cx,0
    14 0000002A BE0300                  	mov si,3
    15                                  loop:
    16 0000002D 83F90A                  	cmp cx,10	;compares full array iteration
    17 00000030 7438                    	jz out		
    18 00000032 83C101                  	add cx,1	
    19 00000035 8B17                    	mov dx,[bx]	;value get
    20 00000037 3B5600                  	cmp dx,[bp]
    21 0000003A 7418                    	jz check
    22 0000003C 833F01                  	cmp word[bx],1
    23 0000003F 7508                    	jnz look	;jump not zero 
    24 00000041 83ED02                  	sub bp,2	;backward coming ;cmp dx,[bp-2]
    25 00000044 83E801                  	sub ax,1	
    26 00000047 EB0B                    	jmp check
    27                                  look:
    28 00000049 83C302                  	add bx,2
    29 0000004C BD[1600]                	mov bp,Subset	;keeping bp at first index
    30 0000004F B80100                  	mov ax,1	;remaining at 0th index
    31 00000052 EBD9                    	jmp loop
    32                                  check:
    33 00000054 83F803                  	cmp ax,3
    34 00000057 740B                    	jz result
    35 00000059 83C001                  	add ax,1	;matching counter
    36 0000005C 83C502                  	add bp,2
    37 0000005F 83C302                  	add bx,2
    38 00000062 EBC9                    	jmp loop
    39                                  result:
    40 00000064 29F1                    	sub cx,si
    41 00000066 890E[1C00]              	mov [Index],cx
    42                                  out:
    43                                  	
    44 0000006A B8004C                  	mov ax, 0x4c00		;terminate the program
    45 0000006D CD21                    	int 0x21
    46                                  	
    47                                  
