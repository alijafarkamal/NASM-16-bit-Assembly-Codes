     1                                  [org 0x0100]
     2 00000000 E9B716                  jmp start
     3                                  
     4 00000003 5802                    right: dw 600
     5 00000005 2602                    mid: dw 550
     6 00000007 F401                    left: dw 500
     7                                  
     8 00000009 D809                    right_b: dw 2520
     9 0000000B A609                    mid_b: dw 2470
    10 0000000D 7409                    left_b: dw 2420
    11                                  
    12 0000000F 00000000                oldisr: dd 0
    13 00000013 00000000                oldisr2: dd 0
    14                                  
    15 00000017 00                      flag: db 0
    16 00000018 00                      flag2: db 0
    17 00000019 00                      flag3: db 0
    18                                  
    19 0000001A 00                      ground_flag:db 0
    20                                  
    21 0000001B 2030                    rec_colour: dw 0x3020
    22                                  
    23                                  
    24 0000001D 0000<rep 7D0h>          buffer: times 2000 dw 0
    25 00000FBD 464C41505059204249-     gamename: db 'FLAPPY BIRD....$'
    25 00000FC6 52442E2E2E2E24     
    26 00000FCD 4D656D626572313A20-     name1: db 'Member1: Abdul Ghani , 23L-0761....$'
    26 00000FD6 416264756C20476861-
    26 00000FDF 6E69202C2032334C2D-
    26 00000FE8 303736312E2E2E2E24 
    27 00000FF1 4D656D626572323A20-     name2: db 'Member2: Ali Shahzad , 23L-0719....$'
    27 00000FFA 416C6920536861687A-
    27 00001003 6164202C2032334C2D-
    27 0000100C 303731392E2E2E2E24 
    28 00001015 33726420536D657374-     smester: db '3rd Smester....$'
    28 0000101E 65722E2E2E2E24     
    29                                  
    30                                  
    31 00001025 57656C636F6D652074-     message1: db 'Welcome to Flappy Bird'
    31 0000102E 6F20466C6170707920-
    31 00001037 42697264           
    32 0000103B 1600                    length1: dw 22
    33 0000103D 507265737320532074-     message2: db 'Press S to start AND E to End the Game'
    33 00001046 6F2073746172742041-
    33 0000104F 4E44204520746F2045-
    33 00001058 6E6420746865204761-
    33 00001061 6D65               
    34 00001063 2D00                    length2: dw 45
    35 00001065 707265737320492074-     msg: db 'press I to view the intructions'
    35 0000106E 6F2076696577207468-
    35 00001077 6520696E7472756374-
    35 00001080 696F6E73           
    36 00001084 2000                    len: dw 32
    37                                  
    38 00001086 507265737320452074-     message3: db 'Press E to End the game And C to continue'
    38 0000108F 6F20456E6420746865-
    38 00001098 2067616D6520416E64-
    38 000010A1 204320746F20636F6E-
    38 000010AA 74696E7565         
    39 000010AF 3100                    length3: dw 49
    40                                  
    41                                  
    42 000010B1 00                      velocity db 0
    43 000010B2 01                      gravity db 1
    44 000010B3 FD                      flap_strength db -3
    45 000010B4 28                      x: db 40        
    46 000010B5 0C                      y: db 12        
    47                                  
    48                                  
    49                                  
    50 000010B6 47616D65204F766572-     gameover_message: db 'Game Over :(....$'
    50 000010BF 203A282E2E2E2E24   
    51 000010C7 0D00                    gameover_length: dw 13
    52                                  
    53 000010C9 596F75722053636F72-     score_message: db 'Your Score:'
    53 000010D2 653A               
    54 000010D4 0B00                    score_length: dw 11
    55 000010D6 0000                    score :dw 0
    56 000010D8 0A00                    highest_score :dw 10
    57                                  
    58 000010DA 507265737320452074-     prompt_message: db 'Press E to end '
    58 000010E3 6F20656E6420       
    59 000010E9 0F00                    prompt_length: dw 15
    60                                  
    61                                  
    62 000010EB 436F6E67726174756C-     congrats_message: db 'Congratulations :)...$'
    62 000010F4 6174696F6E73203A29-
    62 000010FD 2E2E2E24           
    63 00001101 1200                    congrats_length: dw 18
    64                                  
    65 00001103 596F752062726F6B65-     score_message2: db 'You broke the record!....$'
    65 0000110C 20746865207265636F-
    65 00001115 7264212E2E2E2E24   
    66 0000111D 1600                    score_length2: dw 22
    67 0000111F 507265737320452074-     prompt_message2: db 'Press E to end....$'
    67 00001128 6F20656E642E2E2E2E-
    67 00001131 24                 
    68 00001132 0F00                     prompt_length2: dw 15
    69                                  
    70                                  
    71                                  
    72                                  
    73 00001134 00                          old_x db 0
    74 00001135 00                          old_y db 0
    75                                  
    76                                  update_screen:
    77 00001136 FA                      cli                    ; Disable interrupts
    78 00001137 60                      pusha                  ; Save all registers
    79 00001138 B8[1D00]                mov ax, buffer         ; Load the address of the buffer
    80 0000113B 89C6                    mov si, ax             ; SI points to the buffer start
    81 0000113D B800B8                  mov ax, 0xB800         ; Video memory segment
    82 00001140 8EC0                    mov es, ax             ; Set ES to video segment
    83 00001142 31FF                    xor di, di             ; DI points to start of video memory
    84                                  
    85 00001144 B9D007                  mov cx, 2000           ; Number of words (80x25 characters)
    86                                  copy_loop:
    87 00001147 A5                      movsw                  ; Move word from [SI] to [ES:DI], SI and DI increment by 2
    88 00001148 E2FD                    loop copy_loop         ; Repeat for all screen words
    89                                  
    90 0000114A 61                      popa                   ; Restore all registers
    91 0000114B FB                      sti                    ; Re-enable interrupts
    92 0000114C C3                      ret
    93                                  
    94                                  
    95                                  
    96                                  
    97                                  draw_bird:
    98 0000114D 50                          push ax
    99 0000114E 53                          push bx
   100 0000114F 06                          push es
   101 00001150 57                          push di
   102                                  
   103 00001151 B800B8                      mov ax, 0xb800         
   104 00001154 8EC0                        mov es, ax
   105 00001156 31FF                        xor di, di             
   106                                  
   107                                    
   108 00001158 B050                        mov al, 80             
   109 0000115A F626[B510]                  mul byte [y]           
   110 0000115E 83C028                      add ax, 40             
   111 00001161 D1E0                        shl ax, 1              
   112 00001163 89C7                        mov di, ax             
   113                                  
   114                                     
   115                                     
   116 00001165 26C7052040                  mov word [es:di], 0x4020  
   117 0000116A 83C702                      add di, 2                 
   118                                  							  
   119                                    
   120 0000116D 26C7052040                  mov word [es:di], 0x4020  
   121 00001172 83C702                      add di, 2                 
   122                                  
   123                                      
   124 00001175 26C7052040                  mov word [es:di], 0x4020  
   125                                  	
   126 0000117A 81C7A000                	ADD DI,160
   127 0000117E 26C7052040              	MOV WORD[ES:DI],0x4020
   128                                  	
   129 00001183 B482                    	mov ah,0x82
   130 00001185 B05E                    	mov al,'^'
   131 00001187 83EF02                  	sub di, 2
   132 0000118A 268905                  	MOV WORD[ES:DI],ax
   133                                  	
   134 0000118D 83EF02                  	SUB DI,2
   135 00001190 26C7052040              	MOV WORD[ES:DI],0x4020
   136                                  	
   137                                  	
   138                                  	
   139                                  	
   140                                  
   141 00001195 5F                          pop di
   142 00001196 07                          pop es
   143 00001197 5B                          pop bx
   144 00001198 58                          pop ax
   145 00001199 C3                          ret
   146                                  
   147                                  clear_bird:
   148 0000119A 50                          push ax
   149 0000119B 53                          push bx
   150 0000119C 06                          push es
   151 0000119D 57                          push di
   152                                  
   153 0000119E B800B8                      mov ax, 0xb800         
   154 000011A1 8EC0                        mov es, ax
   155 000011A3 31FF                        xor di, di             
   156                                  
   157                                     
   158 000011A5 B050                        mov al, 80             
   159 000011A7 F626[B510]                  mul byte [y]           
   160 000011AB 83C028                      add ax, 40             
   161 000011AE D1E0                        shl ax, 1              
   162 000011B0 89C7                        mov di, ax             
   163                                  
   164                                     
   165 000011B2 26C7052007                  mov word [es:di], 0x0720
   166                                  
   167 000011B7 5F                          pop di
   168 000011B8 07                          pop es
   169 000011B9 5B                          pop bx
   170 000011BA 58                          pop ax
   171 000011BB C3                          ret
   172                                  
   173                                  
   174                                  clear:
   175 000011BC 06                          push es
   176 000011BD 50                          push ax
   177 000011BE 51                          push cx
   178 000011BF 57                          push di
   179                                  
   180 000011C0 B800B8                      mov ax, 0xb800
   181 000011C3 8EC0                        mov es, ax
   182 000011C5 31FF                        xor di, di
   183 000011C7 B82007                      mov ax, 0x0720  
   184 000011CA B9D007                      mov cx, 2000    
   185                                  
   186 000011CD FC                          cld
   187 000011CE F3AB                        rep stosw       
   188                                  
   189 000011D0 5F                          pop di
   190 000011D1 59                          pop cx
   191 000011D2 58                          pop ax
   192 000011D3 07                          pop es
   193 000011D4 C3                          ret
   194                                  
   195                                  
   196                                  background:
   197 000011D5 06                          push es
   198 000011D6 50                          push ax
   199 000011D7 51                          push cx
   200 000011D8 57                          push di
   201                                  
   202 000011D9 B800B8                      mov ax, 0xb800
   203 000011DC 8EC0                        mov es, ax
   204 000011DE 31FF                        xor di, di
   205 000011E0 B8207F                      mov ax, 0x7F20  ; space char with blue background
   206 000011E3 B9D007                      mov cx, 2000
   207                                  
   208 000011E6 FC                          cld
   209 000011E7 F3AB                        rep stosw       ; apply blue background across screen
   210                                  
   211 000011E9 5F                          pop di
   212 000011EA 59                          pop cx
   213 000011EB 58                          pop ax
   214 000011EC 07                          pop es
   215 000011ED C3                          ret
   216                                  
   217                                  printstr:
   218 000011EE 55                          push bp
   219 000011EF 89E5                        mov bp, sp
   220 000011F1 06                          push es
   221 000011F2 50                          push ax
   222 000011F3 51                          push cx
   223 000011F4 56                          push si
   224 000011F5 57                          push di
   225                                  
   226 000011F6 B800B8                      mov ax, 0xb800
   227 000011F9 8EC0                        mov es, ax           
   228                                  
   229 000011FB B050                        mov al, 80           
   230 000011FD F6660C                      mul byte [bp+12]     
   231 00001200 03460A                      add ax, [bp+10]      
   232 00001203 D1E0                        shl ax, 1            
   233                                  
   234 00001205 89C7                        mov di, ax           
   235 00001207 8B7606                      mov si, [bp+6]       
   236 0000120A 8B4E04                      mov cx, [bp+4]       
   237 0000120D 8A6608                      mov ah, [bp+8]       
   238                                  
   239 00001210 FC                          cld 
   240                                  
   241                                  nextchar:
   242 00001211 AC                          lodsb                
   243 00001212 AB                          stosw                
   244 00001213 E2FC                        loop nextchar        
   245                                          
   246 00001215 5F                          pop di
   247 00001216 5E                          pop si
   248 00001217 59                          pop cx
   249 00001218 58                          pop ax
   250 00001219 07                          pop es
   251 0000121A 5D                          pop bp
   252 0000121B C20A00                      ret 10
   253                                  
   254                                  print_message:
   255 0000121E 55                          push bp
   256 0000121F 89E5                        mov bp, sp
   257 00001221 06                          push es
   258 00001222 50                          push ax
   259 00001223 51                          push cx
   260 00001224 56                          push si
   261 00001225 57                          push di
   262                                      
   263 00001226 B800B8                      mov ax, 0xb800
   264 00001229 8EC0                        mov es, ax           
   265                                  
   266 0000122B B050                        mov al, 80           
   267 0000122D F6660C                      mul byte [bp+12]     
   268 00001230 03460A                      add ax, [bp+10]      
   269 00001233 D1E0                        shl ax, 1            
   270                                  
   271 00001235 89C7                        mov di, ax           
   272 00001237 8B7606                      mov si, [bp+6]       
   273 0000123A 8B4E04                      mov cx, [bp+4]       
   274 0000123D 8A6608                      mov ah, [bp+8]       
   275                                  
   276 00001240 FC                          cld 
   277                                  
   278                                  nextchar1:
   279 00001241 AC                          lodsb                
   280 00001242 AB                          stosw                
   281 00001243 E2FC                        loop nextchar1        
   282                                          
   283 00001245 5F                          pop di
   284 00001246 5E                          pop si
   285 00001247 59                          pop cx
   286 00001248 58                          pop ax
   287 00001249 07                          pop es
   288 0000124A 5D                          pop bp
   289 0000124B C20A00                      ret 10
   290                                  	
   291                                  uped:
   292 0000124E 55                          push bp
   293 0000124F 89E5                        mov bp, sp
   294 00001251 60                          pusha
   295                                      
   296                                      
   297 00001252 B800B8                      mov ax, 0xB800
   298 00001255 8EC0                        mov es, ax
   299 00001257 31FF                        xor di, di 
   300                                      
   301 00001259 B80000                      mov ax,0
   302 0000125C BB5000                  	mov bx,80;
   303 0000125F F7E3                    	mul bx
   304 00001261 83C000                  	add ax,0;
   305 00001264 D1E0                    	shl ax,1
   306 00001266 89C7                    	mov di,ax
   307                                  	
   308                                  loop_ground1:
   309 00001268 26C7052068                  mov word [es:di], 0x6820 
   310 0000126D 83C702                      add di, 2                
   311 00001270 81FFE001                    cmp di, 480
   312 00001274 72F2                        jb loop_ground1          
   313 00001276 61                          popa
   314 00001277 5D                          pop bp
   315 00001278 C3                          ret
   316                                  	
   317                                  	
   318                                  ground:
   319 00001279 55                          push bp
   320 0000127A 89E5                        mov bp, sp
   321 0000127C 60                          pusha
   322                                      
   323                                      
   324 0000127D B800B8                      mov ax, 0xB800
   325 00001280 8EC0                        mov es, ax
   326 00001282 31FF                        xor di, di 
   327                                      
   328 00001284 B81400                      mov ax,20
   329 00001287 BB5000                  	mov bx,80;
   330 0000128A F7E3                    	mul bx
   331 0000128C 83C000                  	add ax,0;
   332 0000128F D1E0                    	shl ax,1
   333 00001291 89C7                    	mov di,ax
   334                                  	
   335                                  loop_ground:
   336 00001293 26C7052060                  mov word [es:di], 0x6020 
   337 00001298 83C702                      add di, 2                
   338 0000129B 81FFA00F                    cmp di, 4000
   339 0000129F 26C706C40E2007          	mov word[es:3780],0x0720
   340 000012A6 72EB                        jb loop_ground
   341                                  	
   342 000012A8 61                          popa
   343 000012A9 5D                          pop bp
   344 000012AA C3                          ret
   345                                  	
   346                                  scrollGround:
   347 000012AB 55                          push bp
   348 000012AC 89E5                        mov bp, sp
   349 000012AE 60                          pusha
   350                                      
   351 000012AF B800B8                      mov ax, 0xb800            ; Set ES to video memory
   352 000012B2 8EC0                        mov es, ax
   353 000012B4 BF760C                      mov di, 3190              ; Start at the first ground row (row 19)
   354 000012B7 BE0000                      mov si, 0                 ; Offset into Save_Ground (starting point)
   355 000012BA BB[061A]                    mov bx, Save_Ground       ; Address of Save_Ground
   356 000012BD B90500                      mov cx, 5                 ; Process 5 rows (lines 19-24)
   357                                  
   358 000012C0 FC                          cld                       ; Ensure forward direction (left to right)
   359                                      
   360                                      ; Save the current ground rows to Save_Ground
   361                                  save_ground_loop:
   362 000012C1 268B15                      mov dx, [es:di]           ; Save the first word of the row (current row)
   363 000012C4 8910                        mov [bx + si], dx         ; Store it in Save_Ground
   364 000012C6 81C7A000                    add di, 160               ; Move to next row (next row in video memory)
   365 000012CA 83C602                      add si, 2                 ; Increment Save_Ground offset (2 bytes per word)
   366 000012CD E2F2                        loop save_ground_loop     ; Repeat for 5 rows
   367                                  
   368                                      ; Now we begin the scroll (shift rows left)
   369 000012CF BF760C                      mov di, 3190              ; Reset to the first ground row
   370 000012D2 BE780C                      mov si, 3192              ; Start shifting from column 2 (word 2 in the row)
   371 000012D5 B90500                      mov cx, 5                 ; Process 5 rows (lines 19-24)
   372                                      
   373 000012D8 1E                          push ds
   374 000012D9 8ED8                        mov ds, ax                ; Set DS to the correct segment
   375                                  
   376                                      ; Shift rows left
   377                                  shift_ground_loop:
   378 000012DB 51                          push cx
   379 000012DC B94F00                      mov cx, 79                ; Shift 79 words (158 bytes) in the row
   380 000012DF F3A5                        rep movsw                 ; Move row data one word left (shift)
   381 000012E1 83C702                      add di, 2                 ; Skip the last word (clear rightmost column)
   382 000012E4 59                          pop cx
   383 000012E5 83C602                      add si, 2                 ; Move to the next row
   384 000012E8 E2F1                        loop shift_ground_loop    ; Repeat for all 5 rows
   385                                  
   386                                      ; Restore the last column (rightmost part of the rows)
   387 000012EA BE0000                      mov si, 0                 ; Reset Save_Ground offset
   388 000012ED BF7E0C                      mov di, 3198              ; Start restoring from the last column
   389 000012F0 B90500                      mov cx, 5                 ; Process 5 rows
   390                                  
   391 000012F3 1F                          pop ds                    ; Restore DS
   392                                  restore_ground_loop:
   393 000012F4 8B10                        mov dx, [bx + si]         ; Load saved word from Save_Ground
   394 000012F6 268915                      mov [es:di], dx           ; Restore it to the last column
   395 000012F9 83C602                      add si, 2                 ; Increment Save_Ground offset (2 bytes per word)
   396 000012FC 81C7A000                    add di, 160               ; Move to the next row
   397 00001300 E2F2                        loop restore_ground_loop  ; Repeat for all 5 rows
   398                                  
   399 00001302 61                          popa
   400 00001303 5D                          pop bp
   401 00001304 C3                          ret
   402                                  
   403                                  
   404                                  
   405                                  RECTANGLE:
   406 00001305 55                          push bp
   407 00001306 89E5                        mov bp, sp
   408 00001308 50                          push ax
   409 00001309 53                          push bx
   410 0000130A 51                          push cx
   411 0000130B 52                          push dx
   412 0000130C 56                          push si
   413 0000130D 57                          push di
   414                                  
   415 0000130E 8B7E04                      mov di, [bp+4]        ; di = start address of the rectangle
   416 00001311 BA0000                      mov dx, 0             ; dx = row counter
   417                                  
   418                                  outerloop:
   419 00001314 B90000                      mov cx, 0                
   420                                  innerloop:
   421 00001317 A1[1B00]                	mov ax,[rec_colour]
   422 0000131A 268905                      mov word [es:di], ax 
   423 0000131D 83C702                      add di, 2            
   424 00001320 41                          inc cx
   425 00001321 83F908                      cmp cx, 8      
   426 00001324 75F1                        jne innerloop        
   427                                  
   428 00001326 81C79000                    add di, 144          
   429 0000132A 42                          inc dx
   430 0000132B 83FA05                      cmp dx, 5       
   431 0000132E 75E4                        jne outerloop        
   432                                  
   433 00001330 5F                          pop di
   434 00001331 5E                          pop si
   435 00001332 5A                          pop dx
   436 00001333 59                          pop cx
   437 00001334 5B                          pop bx
   438 00001335 58                          pop ax
   439 00001336 5D                          pop bp
   440 00001337 C20200                      ret 2             
   441                                  
   442                                  
   443                                  
   444                                  wait_for_key:
   445 0000133A 31C0                        xor ax, ax
   446 0000133C CD16                        int 0x16           
   447 0000133E C3                          ret
   448                                  
   449                                  
   450                                  
   451                                  
   452                                  delay:
   453 0000133F 60                          pusha
   454 00001340 B9FFFF                      mov cx, 0FFFFh         
   455                                  .delay_loop:
   456 00001343 90                          nop                    
   457 00001344 E2FD                        loop .delay_loop       
   458 00001346 61                          popa
   459 00001347 C3                          ret
   460                                  	
   461                                  	
   462                                  	
   463                                  	
   464                                  update_bird_position:
   465                                      ; Preserve registers
   466 00001348 50                          push ax
   467 00001349 53                          push bx
   468 0000134A 51                          push cx
   469 0000134B 52                          push dx
   470 0000134C 06                          push es
   471 0000134D 57                          push di
   472                                  
   473                                      ; Check if update should be performed
   474 0000134E 2EA0[031A]                  MOV AL,byte [CS:release_flag]
   475 00001352 3C01                        CMP AL, 1
   476 00001354 0F84C500                    je NOUPDATE                    
   477                                  
   478                                      ; Reset status flags
   479 00001358 C606[1A00]00                mov byte [ground_flag], 0      
   480                                  
   481                                      ; Apply gravity and update velocity
   482 0000135D A0[B110]                    mov al, [velocity]
   483 00001360 0206[B210]                  add al, [gravity]             
   484 00001364 A2[B110]                    mov [velocity], al
   485                                  
   486                                      ; Update Y position
   487 00001367 A0[B510]                    mov al, [y]
   488 0000136A 0206[B110]                  add al, [velocity]            
   489 0000136E A2[B510]                    mov [y], al
   490                                  
   491                                      ; Set up video memory access
   492 00001371 B800B8                      mov ax, 0xB800                
   493 00001374 8EC0                        mov es, ax
   494                                  
   495                                     
   496 00001376 31C0                        xor ax, ax                   
   497 00001378 A0[B410]                    mov al, [x]
   498 0000137B B350                        mov bl, 80                    
   499 0000137D F6E3                        mul bl
   500 0000137F B400                    	mov ah,0x00
   501 00001381 0306[B510]                  add ax, [y]                   
   502 00001385 D1E0                        shl ax, 1                     
   503 00001387 89C7                        mov di, ax
   504                                  	;mov word [es:di],0x0720
   505 00001389 268B1D                       mov bx, [es:di]
   506 0000138C 3B1E[1B00]                  cmp bx, [rec_colour]           
   507 00001390 0F848200                    je collision_detected
   508                                  
   509                                      ; Check LOWER LEFT corner
   510 00001394 31C0                        xor ax, ax                    ; Clear ax
   511 00001396 A0[B410]                    mov al, [x]
   512 00001399 0402                        add al, 2                     ; Height is 3, so add 2 for bottom edge
   513 0000139B B350                        mov bl, 80
   514 0000139D F6E3                        mul bl
   515 0000139F B400                    	mov ah,0x00
   516 000013A1 0306[B510]                  add ax, [y]
   517 000013A5 D1E0                        shl ax, 1
   518 000013A7 89C7                        mov di, ax
   519 000013A9 268B1D                      mov bx, [es:di]
   520 000013AC 3B1E[1B00]                  cmp bx, [rec_colour]  
   521 000013B0 7464                        je collision_detected
   522                                  
   523                                      ; Check UPPER RIGHT corner
   524 000013B2 31C0                        xor ax, ax                    ; Clear ax
   525 000013B4 A0[B410]                    mov al, [x]
   526 000013B7 B350                        mov bl, 80
   527 000013B9 F6E3                        mul bl
   528 000013BB 0306[B510]                  add ax, [y]
   529 000013BF 83C005                      add ax, 5                     ; Width is 6, so add 5 for right edge
   530 000013C2 D1E0                        shl ax, 1
   531 000013C4 89C7                        mov di, ax
   532 000013C6 268B1D                      mov bx, [es:di]
   533 000013C9 3B1E[1B00]                  cmp bx, [rec_colour]  
   534 000013CD 7447                        je collision_detected
   535                                  
   536                                      ; Check LOWER RIGHT corner
   537 000013CF 31C0                        xor ax, ax                    ; Clear ax
   538 000013D1 A0[B410]                    mov al, [x]
   539 000013D4 0402                        add al, 2                     ; Height is 3, so add 2 for bottom edge
   540 000013D6 B350                        mov bl, 80
   541 000013D8 F6E3                        mul bl
   542 000013DA 0306[B510]                  add ax, [y]
   543 000013DE 83C005                      add ax, 5                     ; Width is 6, so add 5 for right edge
   544 000013E1 D1E0                        shl ax, 1
   545 000013E3 89C7                        mov di, ax
   546 000013E5 268B1D                       mov bx, [es:di]
   547 000013E8 3B1E[1B00]                  cmp bx, [rec_colour]  
   548 000013EC 7428                        je collision_detected
   549                                  
   550                                      ; Boundary checks
   551 000013EE 803E[B510]03                cmp byte [y], 3
   552 000013F3 7D05                        jge no_limit_up
   553 000013F5 C606[B510]03                mov byte [y], 3              
   554                                  no_limit_up:
   555                                  
   556 000013FA 803E[B510]16                cmp byte [y], 22
   557 000013FF 7C0D                        jl no_limit_down
   558 00001401 E88F00                      call unhook_keyboard_isr
   559 00001404 E8A100                      call unhook_timer_isr
   560 00001407 C606[1A00]01                mov byte [ground_flag], 1
   561 0000140C EB08                        jmp collision_detected        
   562                                  no_limit_down:
   563                                  
   564 0000140E 2EC606[031A]00              mov byte [CS:release_flag], 0
   565 00001414 EB0D                        jmp end_update
   566                                  
   567                                  collision_detected:
   568 00001416 C606[101A]01                mov byte[collision_flag], 1
   569                                     
   570 0000141B EB06                        jmp end_update                  
   571                                  
   572                                  NOUPDATE:
   573 0000141D 2EC606[031A]00              mov byte [CS:release_flag], 0
   574                                  
   575                                  end_update:
   576 00001423 5F                          pop di
   577 00001424 07                          pop es
   578 00001425 5A                          pop dx
   579 00001426 59                          pop cx
   580 00001427 5B                          pop bx
   581 00001428 58                          pop ax
   582 00001429 C3                          ret
   583                                  
   584                                  
   585                                  endscreen:
   586 0000142A A1[D610]                mov ax,  word[score]
   587 0000142D 3B06[D810]              cmp ax,word [highest_score]
   588 00001431 7C06                    jl end_scr
   589 00001433 A3[D810]                mov word[highest_score],ax
   590 00001436 E82B01                  call highest_score_scr
   591                                  
   592                                  end_scr:
   593                                  
   594                                     
   595 00001439 E899FD                      call background
   596                                  
   597                                      ; Display "Game Over 😞" message
   598 0000143C B80A00                      mov ax, 10
   599 0000143F 50                          push ax
   600 00001440 B81E00                      mov ax, 30
   601 00001443 50                          push ax
   602 00001444 B87000                      mov ax, 0x70       ; Attribute for foreground and background color
   603 00001447 50                          push ax
   604 00001448 B8[B610]                    mov ax, gameover_message
   605 0000144B 50                          push ax
   606 0000144C FF36[C710]                  push word [gameover_length]
   607 00001450 E8CBFD                      call print_message
   608                                  
   609                                      ; Display score (You can replace with actual score logic if needed)
   610 00001453 B80C00                      mov ax, 12
   611 00001456 50                          push ax
   612 00001457 B81E00                      mov ax, 30
   613 0000145A 50                          push ax
   614 0000145B B87000                      mov ax, 0x70       ; Attribute for foreground and background color
   615 0000145E 50                          push ax
   616 0000145F B8[C910]                    mov ax, score_message
   617 00001462 50                          push ax
   618 00001463 FF36[D410]                  push word [score_length]
   619 00001467 E8B4FD                      call print_message
   620 0000146A E8C600                   call display_score
   621                                      ; Display "Press E to end, S to start again"
   622 0000146D B80E00                      mov ax, 14
   623 00001470 50                          push ax
   624 00001471 B81E00                      mov ax, 30
   625 00001474 50                          push ax
   626 00001475 B87000                      mov ax, 0x70       ; Attribute for foreground and background color
   627 00001478 50                          push ax
   628 00001479 B8[DA10]                    mov ax, prompt_message
   629 0000147C 50                          push ax
   630 0000147D FF36[E910]                  push word [prompt_length]
   631 00001481 E89AFD                      call print_message
   632                                  
   633                                      
   634 00001484 E8B3FE                  call wait_for_key
   635                                    
   636                                  	
   637 00001487 3C65                    	cmp al,'e'
   638 00001489 0F845803                    je handle_endgame
   639 0000148D 3C45                    	cmp al,'E'
   640 0000148F 0F845203                	je handle_endgame
   641                                  
   642                                  	;call delay
   643                                  
   644                                      
   645                                  	
   646                                  unhook_keyboard_isr:
   647 00001493 FA                          cli                     
   648 00001494 31C0                        xor ax, ax
   649 00001496 8EC0                        mov es, ax		
   650 00001498 A1[0F00]                    mov ax, [oldisr]       
   651 0000149B 26A32400                    mov [es:9*4], ax       
   652 0000149F A1[1100]                    mov ax, [oldisr+2]     
   653 000014A2 26A32600                    mov [es:9*4+2], ax     
   654 000014A6 FB                          sti  
   655                                  	
   656 000014A7 C3                          ret
   657                                  unhook_timer_isr:
   658 000014A8 FA                          cli                     
   659 000014A9 31C0                        xor ax, ax
   660 000014AB 8EC0                        mov es, ax		
   661 000014AD A1[1300]                    mov ax, [oldisr2]       
   662 000014B0 26A32000                    mov [es:8*4], ax       
   663 000014B4 A1[1500]                    mov ax, [oldisr2+2]     
   664 000014B7 26A32200                    mov [es:8*4+2], ax     
   665 000014BB FB                          sti  
   666                                  	
   667 000014BC C3                          ret
   668                                  
   669                                  
   670                                  again_start:
   671 000014BD C606[B410]28            	mov byte[x],40
   672 000014C2 C606[B510]0C            	mov byte[y],12
   673 000014C7 E883FC                      call draw_bird
   674 000014CA E9ED01                  	JMP start
   675                                  	
   676                                  
   677                                  flaapy:
   678 000014CD A0[B310]                    mov al, [flap_strength]
   679 000014D0 A2[B110]                    mov [velocity], al
   680 000014D3 C3                          ret
   681                                  
   682                                  flap:
   683 000014D4 E8F6FF                      call flaapy
   684 000014D7 EB54                       jmp out_kbisr
   685                                  
   686                                  pause_screen:
   687                                  
   688 000014D9 E85AFC                  call update_screen
   689                                  
   690 000014DC E8F6FC                  call background
   691                                  
   692                                  
   693 000014DF B80D00                      mov ax, 13
   694 000014E2 50                          push ax
   695 000014E3 B81000                      mov ax, 16
   696 000014E6 50                          push ax
   697 000014E7 B87000                      mov ax, 0x70       
   698 000014EA 50                          push ax
   699 000014EB B8[8610]                    mov ax, message3
   700 000014EE 50                          push ax
   701 000014EF FF36[AF10]                  push word [length3]
   702 000014F3 E828FD                      call print_message
   703                                  	
   704                                     
   705 000014F6 C606[1700]01               mov byte[flag] ,1 
   706                                     
   707                                  	.pause_loop:
   708 000014FB E460                        in al, 0x60             
   709 000014FD 3C2E                        cmp al, 0x2E            
   710 000014FF 7408                        je resume_game
   711 00001501 3C12                    	cmp al ,0x12
   712 00001503 0F84DE02                	je handle_endgame
   713                                      
   714                                  	
   715 00001507 EBF2                        jmp .pause_loop         
   716                                  
   717                                  resume_game:
   718 00001509 C606[1700]00                mov byte [flag], 0  
   719                                  
   720                                   
   721 0000150E EB1D                        JMP out_kbisr           
   722                                  
   723                                  
   724                                  
   725                                  
   726                                  
   727                                     
   728                                     
   729                                  wait_for_retrace:
   730 00001510 BADA03                      mov dx, 0x03DA        ; VGA status register
   731                                  .wait_not_retrace:
   732 00001513 EC                          in al, dx
   733 00001514 A808                        test al, 0x08         ; Check if in vertical retrace
   734 00001516 74FB                        jz .wait_not_retrace  ; Loop until retrace starts
   735                                  
   736 00001518 C3                          ret
   737                                  kbisr:
   738 00001519 50                          push ax                
   739 0000151A E460                    	in al,0x60
   740                                  	
   741                                  	
   742 0000151C 3C48                    	cmp al,0x48
   743 0000151E 74B4                    	je flap
   744                                  	
   745                                  	
   746                                  	
   747 00001520 3C01                    	cmp al,0x01
   748 00001522 74B5                    	je pause_screen
   749                                  	
   750                                  
   751 00001524 3CC8                    cmp al,0xC8
   752 00001526 7505                        jne out_kbisr
   753 00001528 C606[031A]01            	mov byte [release_flag],1
   754                                  	
   755                                  	
   756                                  	
   757                                  	
   758                                  	
   759                                  out_kbisr:
   760                                  	
   761 0000152D B020                    	mov al,0x20
   762 0000152F E620                    	out 0x20,al
   763 00001531 58                      	pop ax
   764 00001532 CF                      	iret
   765                                  	
   766                                  	
   767                                  	display_score:
   768 00001533 55                          PUSH BP 
   769 00001534 89E5                    	MOV BP,sp
   770 00001536 60                      	pusha
   771 00001537 B800B8                      mov ax, 0xB800         
   772 0000153A 8EC0                        mov es, ax       
   773 0000153C BFD607                      mov di, 2006        
   774 0000153F BB0A00                      mov bx ,10 
   775 00001542 B90000                      mov cx,0
   776 00001545 A1[D610]                    mov ax,[score]
   777                                     
   778                                     nextdigit:
   779 00001548 31D2                        xor dx, dx 
   780 0000154A F7F3                       div bx 
   781 0000154C 80C230                     add dl,0x30
   782 0000154F 52                         push dx 
   783 00001550 41                         inc cx
   784 00001551 83F800                     cmp ax,0
   785 00001554 75F2                       jnz nextdigit
   786                                  
   787                                     
   788                                     nextpos:
   789 00001556 5A                         pop dx
   790 00001557 B670                       mov dh,0x70
   791 00001559 268915                     mov [es:di],dx
   792 0000155C 83C702                     add di,2
   793 0000155F E2F5                       loop nextpos
   794 00001561 61                         popa
   795 00001562 5D                         pop bp
   796                                     
   797                                     
   798 00001563 C3                          ret
   799                                           
   800                                  
   801                                  highest_score_scr:
   802 00001564 06                          push es
   803 00001565 50                          push ax
   804 00001566 51                          push cx
   805 00001567 52                          push dx
   806 00001568 56                          push si
   807 00001569 57                          push di
   808                                  
   809                                      ; Set background and foreground color
   810 0000156A E868FC                      call background
   811                                  
   812                                      ; Display "Congratulations 🎉" message
   813 0000156D B80A00                      mov ax, 10
   814 00001570 50                          push ax
   815 00001571 B81E00                      mov ax, 30
   816 00001574 50                          push ax
   817 00001575 B87000                      mov ax, 0x70       ; Attribute for foreground and background color
   818 00001578 50                          push ax
   819 00001579 B8[EB10]                    mov ax, congrats_message
   820 0000157C 50                          push ax
   821 0000157D FF36[0111]                  push word [congrats_length]
   822 00001581 E89AFC                      call print_message
   823                                  
   824                                      ; Display score message
   825 00001584 B80C00                      mov ax, 12
   826 00001587 50                          push ax
   827 00001588 B81E00                      mov ax, 30
   828 0000158B 50                          push ax
   829 0000158C B87000                      mov ax, 0x70       ; Attribute for foreground and background color
   830 0000158F 50                          push ax
   831 00001590 B8[0311]                    mov ax, score_message2
   832 00001593 50                          push ax
   833 00001594 FF36[1D11]                  push word [score_length2]
   834 00001598 E883FC                      call print_message
   835                                  
   836                                      ; Display "Press E to end, S to start again"
   837 0000159B B80E00                      mov ax, 14
   838 0000159E 50                          push ax
   839 0000159F B81E00                      mov ax, 30
   840 000015A2 50                          push ax
   841 000015A3 B87000                      mov ax, 0x70       ; Attribute for foreground and background color
   842 000015A6 50                          push ax
   843 000015A7 B8[1F11]                    mov ax, prompt_message2
   844 000015AA 50                          push ax
   845 000015AB FF36[3211]                  push word [prompt_length2]
   846 000015AF E86CFC                      call print_message
   847                                  
   848                                      ; Wait for user input
   849 000015B2 E885FD                      call wait_for_key
   850 000015B5 3C45                        cmp al, 'E'
   851 000015B7 0F841602                    je endgame
   852 000015BB 3C65                        cmp al, 'e'
   853 000015BD 0F841002                    je endgame
   854 000015C1 3C53                        cmp al, 'S'
   855 000015C3 0F84B001                    je game_start
   856 000015C7 3C73                        cmp al, 's'
   857 000015C9 0F84AA01                    je game_start
   858 000015CD EB95                        jmp highest_score_scr      
   859                                  	
   860                                  	
   861 000015CF 5F                          pop di
   862 000015D0 5E                          pop si
   863 000015D1 5A                          pop dx
   864 000015D2 59                          pop cx
   865 000015D3 58                          pop ax
   866 000015D4 07                          pop es
   867 000015D5 C3                          ret
   868                                  
   869                                  
   870                                  game_loop:
   871                                  game:
   872                                     
   873 000015D6 E866FD                      call delay
   874 000015D9 E863FD                      call delay
   875 000015DC E831FF                      call wait_for_retrace
   876 000015DF E854FB                  	call update_screen 
   877                                  
   878 000015E2 E8F0FB                      call background
   879 000015E5 E891FC                      call ground
   880 000015E8 E863FC                      call uped
   881                                  
   882                                         
   883                                  	   
   884                                      ; mov ah, 01h            
   885                                      ; int 16h
   886                                      ; jz no_key_pressed      
   887                                  
   888                                     
   889                                      ; mov ah, 00h            
   890                                      ; int 16h
   891                                      ; cmp al, 'U'
   892                                      ; je flap 
   893                                  
   894                                  	
   895                                  
   896                                  
   897                                  	
   898                                   
   899                                      
   900 000015EB 832E[0300]02                sub word [right], 2
   901                                  	
   902 000015F0 813E[0300]E001              cmp word [right], 480    ;;;;;LEFT CORNER
   903 000015F6 7D0A                        jge skip1
   904 000015F8 FF06[D610]                   INC WORD [score]
   905 000015FC C706[0300]7002              mov word [right], 624
   906                                  
   907                                  skip1:
   908 00001602 A1[0300]                    mov ax, [right]
   909 00001605 50                          push ax
   910                                      
   911 00001606 E8FCFC                      call RECTANGLE
   912                                  	
   913                                  	
   914                                  	
   915                                  
   916 00001609 832E[0500]02                sub word [mid], 2
   917 0000160E 813E[0500]E001              cmp word [mid], 480
   918 00001614 7D0A                        jge skip2
   919 00001616 FF06[D610]              	INC WORD [score]
   920 0000161A C706[0500]7002              mov word [mid], 624
   921                                  
   922                                  skip2:
   923 00001620 A1[0500]                    mov ax, [mid]
   924 00001623 50                          push ax
   925                                     
   926 00001624 E8DEFC                      call RECTANGLE
   927                                  
   928 00001627 832E[0700]02                sub word [left], 2
   929 0000162C 813E[0700]E001              cmp word [left], 480
   930 00001632 7D0A                        jge skip3
   931 00001634 FF06[D610]              	INC WORD [score]
   932 00001638 C706[0700]7002              mov word [left], 624
   933                                  
   934                                  skip3:
   935 0000163E A1[0700]                    mov ax, [left]
   936 00001641 50                          push ax
   937                                     
   938 00001642 E8C0FC                      call RECTANGLE
   939                                  
   940 00001645 832E[0900]02                sub word [right_b], 2
   941 0000164A 813E[0900]6009              cmp word [right_b], 2400
   942 00001650 7D06                        jge skip4
   943                                  	
   944 00001652 C706[0900]F009              mov word [right_b], 2544
   945                                  
   946                                  skip4:
   947 00001658 A1[0900]                    mov ax, [right_b]
   948 0000165B 50                          push ax
   949                                     
   950 0000165C E8A6FC                      call RECTANGLE
   951                                  
   952 0000165F 832E[0B00]02                sub word [mid_b], 2
   953 00001664 813E[0B00]6009              cmp word [mid_b], 2400
   954 0000166A 7D06                        jge skip5
   955 0000166C C706[0B00]F009              mov word [mid_b], 2544
   956                                  
   957                                  skip5:
   958 00001672 A1[0B00]                    mov ax, [mid_b]
   959 00001675 50                          push ax
   960                                      
   961 00001676 E88CFC                      call RECTANGLE
   962                                  
   963 00001679 832E[0D00]02                sub word [left_b], 2
   964 0000167E 813E[0D00]6009              cmp word [left_b], 2400
   965 00001684 7D06                        jge skip6
   966 00001686 C706[0D00]F009              mov word [left_b], 2544
   967                                  
   968                                  skip6:
   969 0000168C A1[0D00]                    mov ax, [left_b]
   970 0000168F 50                          push ax
   971                                     
   972 00001690 E872FC                      call RECTANGLE
   973                                  	
   974                                  	no_key_pressed:
   975                                  	
   976 00001693 E8B2FC                  	call update_bird_position
   977                                  
   978 00001696 E801FB                      call clear_bird
   979 00001699 E8B1FA                      call draw_bird
   980                                  	
   981                                  	
   982 0000169C 803E[1A00]01            	cmp byte[ground_flag],1
   983 000016A1 0F8485FD                	je endscreen
   984                                  	
   985 000016A5 803E[101A]01            	cmp byte[collision_flag],1
   986 000016AA 0F847CFD                	je endscreen
   987                                      
   988                                  	
   989                                  	
   990                                  
   991 000016AE 803E[1800]01               cmp byte[flag2],1
   992                                     
   993 000016B3 0F8473FD                	je endscreen
   994 000016B7 E91CFF                      jmp game
   995                                  
   996                                  
   997                                  
   998                                  start:
   999                                  	
  1000                                  	
  1001                                  	                    ; Re-enable interrupts
  1002 000016BA E8FFFA                      call clear
  1003 000016BD E815FB                      call background
  1004                                  	
  1005                                  	
  1006                                  	
  1007 000016C0 B402                    	mov ah, 02h     
  1008 000016C2 B700                        mov bh,  0        
  1009 000016C4 B602                        mov dh, 2         
  1010 000016C6 B21B                        mov dl, 27        
  1011 000016C8 CD10                        int 10h           
  1012                                  
  1013 000016CA BA[BD0F]                    mov dx, gamename 	
  1014 000016CD B409                        mov ah, 9 		
  1015 000016CF CD21                        int 0x21 
  1016                                  	
  1017                                  	
  1018 000016D1 B402                        mov ah, 02h     
  1019 000016D3 B700                        mov bh,  0        
  1020 000016D5 B603                        mov dh, 3         
  1021 000016D7 B21B                        mov dl, 27        
  1022 000016D9 CD10                        int 10h           
  1023                                  
  1024 000016DB BA[1510]                    mov dx, smester 	
  1025 000016DE B409                        mov ah, 9 		
  1026 000016E0 CD21                        int 0x21 
  1027                                  	
  1028 000016E2 B402                    	mov ah, 02h     
  1029 000016E4 B700                        mov bh,  0        
  1030 000016E6 B604                        mov dh, 4        
  1031 000016E8 B214                        mov dl, 20        
  1032 000016EA CD10                        int 10h           
  1033                                  
  1034 000016EC BA[CD0F]                    mov dx, name1 	
  1035 000016EF B409                        mov ah, 9 		
  1036 000016F1 CD21                        int 0x21 
  1037                                  	
  1038                                  	
  1039                                  	
  1040 000016F3 B402                        mov ah, 02h       
  1041 000016F5 B700                        mov bh,  0        
  1042 000016F7 B605                        mov dh, 5        
  1043 000016F9 B214                        mov dl, 20        
  1044 000016FB CD10                        int 10h           
  1045                                  
  1046 000016FD BA[F10F]                    mov dx, name2 	
  1047 00001700 B409                        mov ah, 9 		
  1048 00001702 CD21                        int 0x21 
  1049                                  	
  1050 00001704 B520                    	mov ch, 32
  1051 00001706 B401                        mov ah, 1
  1052 00001708 CD10                        int 10h
  1053                                  	
  1054 0000170A E82DFC                  	call wait_for_key
  1055                                  	
  1056                                  	
  1057                                  	wapis:
  1058                                  	
  1059 0000170D E8C5FA                  	call background
  1060                                  	
  1061                                  	
  1062 00001710 B80C00                      mov ax, 12
  1063 00001713 50                          push ax
  1064 00001714 B81900                      mov ax, 25
  1065 00001717 50                          push ax
  1066 00001718 B87000                      mov ax, 0x70       
  1067 0000171B 50                          push ax
  1068 0000171C B8[2510]                    mov ax, message1
  1069 0000171F 50                          push ax
  1070 00001720 FF36[3B10]                  push word [length1]
  1071 00001724 E8C7FA                      call printstr
  1072 00001727 58                          pop ax
  1073                                      
  1074                                      
  1075 00001728 B80D00                      mov ax, 13
  1076 0000172B 50                          push ax
  1077 0000172C B81000                      mov ax, 16
  1078 0000172F 50                          push ax
  1079 00001730 B87000                      mov ax, 0x70       
  1080 00001733 50                          push ax
  1081 00001734 B8[3D10]                    mov ax, message2
  1082 00001737 50                          push ax
  1083 00001738 FF36[6310]                  push word [length2]
  1084 0000173C E8DFFA                      call print_message
  1085 0000173F B80E00                  	 mov ax, 14
  1086 00001742 50                          push ax
  1087 00001743 B81800                      mov ax, 24
  1088 00001746 50                          push ax
  1089 00001747 B87000                      mov ax, 0x70       
  1090 0000174A 50                          push ax
  1091 0000174B B8[6510]                    mov ax, msg
  1092 0000174E 50                          push ax
  1093 0000174F FF36[8410]                  push word [len]
  1094 00001753 E8C8FA                      call print_message
  1095                                  	
  1096                                  	
  1097                                  	
  1098                                  
  1099                                  start_game:
  1100 00001756 E8E1FB                      call wait_for_key
  1101 00001759 3C53                        cmp al, 'S'        
  1102 0000175B 741A                        je game_start
  1103 0000175D 3C73                        cmp al, 's'
  1104 0000175F 7416                        je game_start
  1105 00001761 3C45                        cmp al, 'E'
  1106 00001763 746C                        je endgame
  1107 00001765 3C65                        cmp al, 'e'
  1108 00001767 7468                        je endgame
  1109 00001769 3C49                    	CMP al,'I'
  1110 0000176B 0F849600                	je show_instructions
  1111 0000176F 3C69                    	CMP al,'i'
  1112 00001771 0F849000                	je show_instructions
  1113 00001775 EBDF                        jmp start_game    
  1114                                  
  1115                                  game_start:
  1116                                  
  1117                                  
  1118                                  
  1119                                    
  1120 00001777 E85BFA                      call background
  1121 0000177A E8D1FA                  	call uped
  1122 0000177D E8F9FA                  	call ground
  1123 00001780 A1[0300]                	mov  ax, [right]
  1124 00001783 50                          push ax
  1125                                  	
  1126 00001784 E87EFB                  	call RECTANGLE
  1127                                  	
  1128                                  	
  1129                                  	
  1130 00001787 A1[0900]                	 mov ax, [right_b] 
  1131 0000178A 50                          push ax
  1132 0000178B E877FB                  	call RECTANGLE
  1133                                  
  1134                                  	
  1135 0000178E E8BCF9                  	call draw_bird
  1136                                  	
  1137 00001791 E8A6FB                  	CALL wait_for_key
  1138                                  	
  1139                                  	
  1140                                  	
  1141 00001794 31C0                    	xor ax, ax
  1142 00001796 8EC0                    	mov es, ax
  1143 00001798 26A12400                	mov ax,[es:9*4]
  1144 0000179C A3[0F00]                	mov [oldisr],ax
  1145 0000179F 26A12600                	mov ax,[es:9*4+2]
  1146 000017A3 A3[1100]                	mov [oldisr+2],ax
  1147                                  	
  1148                                  	
  1149 000017A6 26A12000                	mov ax, [es:8*4]          ; Save INT 8 old ISR offset
  1150 000017AA A3[1300]                mov [oldisr2], ax
  1151 000017AD 26A12200                mov ax, [es:8*4+2]        ; Save INT 8 old ISR segment
  1152 000017B1 A3[1500]                mov [oldisr2+2], ax
  1153                                  
  1154                                  	
  1155 000017B4 FA                      	cli                       
  1156 000017B5 26C7062400[1915]        	mov word [es:9*4], kbisr  
  1157 000017BC 268C0E2600              	mov [es:9*4+2], cs   
  1158                                  
  1159 000017C1 26C7062000[6818]        	mov word[es:8*4],timer
  1160 000017C8 268C0E2200              	mov [es:8*4+2],cs
  1161                                  
  1162                                  
  1163                                  	
  1164 000017CD FB                      	sti 
  1165                                  	
  1166                                  	
  1167                                  	
  1168                                  	
  1169                                  	
  1170 000017CE E905FE                  	jmp game_loop
  1171                                  
  1172                                  endgame:
  1173                                  
  1174 000017D1 B020                    mov al,0x20
  1175 000017D3 E620                    out 0x20,al	
  1176 000017D5 E8E4F9                  call clear
  1177 000017D8 B506                    	mov ch, 6
  1178 000017DA B107                    	mov cl, 7
  1179 000017DC B401                    	mov ah, 1
  1180 000017DE CD10                    	int 10h
  1181                                  	
  1182 000017E0 B8004C                      mov ax, 0x4c00
  1183 000017E3 CD21                        int 0x21          
  1184                                  	
  1185                                  	
  1186                                  handle_endgame:
  1187 000017E5 E8ABFC                      call unhook_keyboard_isr  
  1188 000017E8 E8BDFC                      call unhook_timer_isr  
  1189 000017EB E8CEF9                  	call clear
  1190 000017EE EBE1                        jmp endgame
  1191                                  	
  1192                                  	
  1193                                  print_string:
  1194 000017F0 B800B8                  mov ax,0xB800
  1195 000017F3 8EC0                    mov es, ax
  1196                                      
  1197 000017F5 AC                          lodsb                     
  1198 000017F6 3C00                        cmp al, 0                 
  1199 000017F8 740A                        je end_print              
  1200 000017FA B40E                        mov ah, 0x0E              
  1201 000017FC B700                        mov bh, 0                 
  1202 000017FE B314                        mov bl, 0x14              
  1203 00001800 CD10                        int 0x10                  
  1204 00001802 EBEC                        jmp print_string          
  1205                                  
  1206                                  end_print:
  1207 00001804 C3                          ret
  1208                                  
  1209                                  show_instructions:
  1210                                      
  1211 00001805 E8CDF9                      call background
  1212                                  
  1213 00001808 E88F00                     call move_to_next_line
  1214                                     
  1215                                  
  1216                                      
  1217 0000180B BE[AC18]                    mov si, welcome_msg      
  1218 0000180E E8DFFF                      call print_string        
  1219 00001811 E88600                      call move_to_next_line   
  1220                                  
  1221                                      
  1222 00001814 BE[C918]                    mov si, line_1_msg
  1223 00001817 E8D6FF                      call print_string
  1224 0000181A E87D00                      call move_to_next_line
  1225                                  
  1226 0000181D BE[F518]                    mov si, line_2_msg
  1227 00001820 E8CDFF                      call print_string
  1228 00001823 E87400                      call move_to_next_line
  1229                                  
  1230 00001826 BE[1D19]                    mov si, line_3_msg
  1231 00001829 E8C4FF                      call print_string
  1232 0000182C E86B00                      call move_to_next_line
  1233                                  
  1234 0000182F BE[4819]                    mov si, line_4_msg
  1235 00001832 E8BBFF                      call print_string
  1236 00001835 E86200                      call move_to_next_line
  1237                                  
  1238 00001838 BE[6819]                    mov si, line_5_msg
  1239 0000183B E8B2FF                      call print_string
  1240 0000183E E85900                      call move_to_next_line
  1241                                  
  1242 00001841 BE[8F19]                    mov si, line_6_msg
  1243 00001844 E8A9FF                      call print_string
  1244 00001847 E85000                      call move_to_next_line
  1245                                  
  1246 0000184A BE[AC19]                    mov si, line_7_msg
  1247 0000184D E8A0FF                      call print_string
  1248 00001850 E84700                      call move_to_next_line
  1249                                  
  1250 00001853 BE[D019]                    mov si, line_8_msg
  1251 00001856 E897FF                      call print_string
  1252 00001859 E83E00                  	CALL move_to_next_line
  1253 0000185C BE[E819]                	mov si, line_9_msg
  1254 0000185F E88EFF                      call print_string
  1255                                  
  1256                                      
  1257 00001862 E8D5FA                      call wait_for_key
  1258                                  
  1259                                      
  1260 00001865 E9A5FE                      jmp wapis
  1261                                  	
  1262                                  
  1263                                  timer:
  1264 00001868 50                          push ax
  1265 00001869 53                          push bx
  1266 0000186A 51                          push cx
  1267 0000186B 52                          push dx
  1268                                  
  1269 0000186C 2EA0[1700]                  mov al, [cs:flag]
  1270 00001870 3C01                        cmp al, 1
  1271 00001872 741D                        je timer_done         
  1272                                     
  1273 00001874 2EFF06[041A]                inc word [cs:tick_count]
  1274                                  
  1275 00001879 2E833E[041A]12              cmp word [cs:tick_count], 18
  1276 0000187F 7510                        jne timer_done            
  1277                                      
  1278                                     
  1279 00001881 2EC706[041A]0000            mov word [cs:tick_count], 0
  1280 00001888 2EC606[031A]01              mov byte [cs:release_flag], 1
  1281 0000188E E8B7FA                      CALL update_bird_position
  1282                                  
  1283                                  timer_done:
  1284                                     
  1285 00001891 B020                        mov al, 0x20
  1286 00001893 E620                        out 0x20, al
  1287                                  
  1288                                      
  1289 00001895 5A                          pop dx
  1290 00001896 59                          pop cx
  1291 00001897 5B                          pop bx
  1292 00001898 58                          pop ax
  1293                                  
  1294 00001899 CF                          iret
  1295                                                       
  1296                                  
  1297                                  
  1298                                  
  1299                                  
  1300                                  
  1301                                  
  1302                                  move_to_next_line:
  1303                                  	
  1304 0000189A B402                        mov ah, 0x02            
  1305 0000189C B700                        mov bh, 0             
  1306 0000189E 8A36[021A]                  mov dh, [counter]       
  1307 000018A2 B214                        mov dl, 20               
  1308 000018A4 8006[021A]01            	add byte[counter],1
  1309 000018A9 CD10                        int 0x10                
  1310 000018AB C3                          ret
  1311                                  	
  1312                                  
  1313                                  
  1314                                    
  1315                                  	
  1316                                  	
  1317                                  	
  1318                                  	
  1319 000018AC 57454C434F4D452054-     welcome_msg db 'WELCOME TO FLAPPY BIRD GAME!', 0
  1319 000018B5 4F20464C4150505920-
  1319 000018BE 424952442047414D45-
  1319 000018C7 2100               
  1320 000018C9 312E20505245535320-     line_1_msg db '1. PRESS up arrow key FLAP AND GAIN HEIGHT.', 0
  1320 000018D2 7570206172726F7720-
  1320 000018DB 6B657920464C415020-
  1320 000018E4 414E44204741494E20-
  1320 000018ED 4845494748542E00   
  1321 000018F5 322E2041564F494420-     line_2_msg db '2. AVOID PIPES OR GROUND TO STAY ALIVE.', 0
  1321 000018FE 5049504553204F5220-
  1321 00001907 47524F554E4420544F-
  1321 00001910 205354415920414C49-
  1321 00001919 56452E00           
  1322 0000191D 332E20594F55522053-     line_3_msg db '3. YOUR SCORE INCREASES AS YOU PASS PIPES.', 0
  1322 00001926 434F524520494E4352-
  1322 0000192F 454153455320415320-
  1322 00001938 594F55205041535320-
  1322 00001941 50495045532E00     
  1323 00001948 342E20505245535320-     line_4_msg db '4. PRESS ESC TO PAUSE THE GAME.', 0
  1323 00001951 45534320544F205041-
  1323 0000195A 555345205448452047-
  1323 00001963 414D452E00         
  1324 00001968 352E20505245535320-     line_5_msg db '5. PRESS I TO VIEW INSTRUCTIONS AGAIN.', 0
  1324 00001971 4920544F2056494557-
  1324 0000197A 20494E535452554354-
  1324 00001983 494F4E532041474149-
  1324 0000198C 4E2E00             
  1325 0000198F 362E20505245535320-     line_6_msg db '6. PRESS E TO exit THE GAME.', 0
  1325 00001998 4520544F2065786974-
  1325 000019A1 205448452047414D45-
  1325 000019AA 2E00               
  1326 000019AC 372E2054525920544F-     line_7_msg db '7. TRY TO SCORE THE HIGHEST POINTS!', 0
  1326 000019B5 2053434F5245205448-
  1326 000019BE 452048494748455354-
  1326 000019C7 20504F494E54532100 
  1327 000019D0 474F4F44204C55434B-     line_8_msg db 'GOOD LUCK AND HAVE FUN!', 0
  1327 000019D9 20414E442048415645-
  1327 000019E2 2046554E2100       
  1328 000019E8 507265737320616E79-     line_9_msg db 'Press any key to continue', 0
  1328 000019F1 206B657920746F2063-
  1328 000019FA 6F6E74696E756500   
  1329                                  
  1330                                  
  1331 00001A02 08                      counter: db 8
  1332 00001A03 00                      release_flag : db 0
  1333 00001A04 0000                    tick_count : dw 0
  1334                                  
  1335                                  
  1336 00001A06 000000000000000000-     Save_Ground: dw 0,0,0,0,0
  1336 00001A0F 00                 
  1337                                  
  1338                                  
  1339 00001A10 00                      collision_flag: db 0;
