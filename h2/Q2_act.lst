     1                                  ;New! Keyboard shortcuts â€¦ Drive keyboard shortcuts have been updated to give you first-letters navigation
     2                                  ; Flag Register with unsigned subtraction
     3                                  
     4                                  [org 0x0100]
     5 00000000 EB14                    		jmp start
     6 00000002 020002000200030004-     Arr: dw 2,2,2,3,4,4,5,5,5,6
     6 0000000B 000400050005000500-
     6 00000014 0600               
     7                                  
     8                                  start:
     9 00000016 BB[0200]                	mov bx,Arr		;pointer
    10 00000019 89DE                    	mov si,bx		;next value container
    11 0000001B B90000                  	mov cx,0		;counter
    12                                  	
    13                                  loop:
    14 0000001E 83C101                  	add cx,1		;counter behavior
    15 00000021 83C602                  	add si,2		;moves to next address
    16 00000024 83F90A                  	cmp cx,10		;compares to full array iteration
    17 00000027 741B                    	jz outOfLoop		;end program
    18                                  	
    19 00000029 8B04                    	mov ax,[si]		;moves value for comparison
    20 0000002B 3907                    	cmp [bx],ax		;comparison
    21 0000002D 740F                    	jz noswap		;same numbers so jump to noswap loop
    22 0000002F EB00                    	jmp swap		;different so swap
    23                                  	
    24                                  swap:	
    25 00000031 8B14                    	mov dx,[si]		;takes value of number to be swapped
    26 00000033 83C302                  	add bx,2		;points to next index
    27                                  					
    28 00000036 8917                    	mov [bx],dx		;moves value to next index one step further
    29 00000038 C7040000                	mov word[si],0x00	;puts zero
    30 0000003C EBE0                    	jmp loop		;jump back to loop
    31                                  	
    32                                  noswap:
    33 0000003E C7040000                	mov word[si],0x00
    34 00000042 EBDA                    	jmp loop
    35                                  outOfLoop:
    36                                  
    37 00000044 B8004C                  	mov ax, 0x4c00		;terminate the program
    38 00000047 CD21                    	int 0x21
