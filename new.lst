     1                                  [org 0x0100]
     2                                  
     3 00000000 E9040E                  jmp start
     4                                  
     5 00000003 121212121212121212-     bird1: db 12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,12h,12h,12h,5Ch,5Ch,5Ch,5Ch,12h,12h,12h,2Ah,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ah,12h,5Ch,5Ch,5Ch,5Ch,5Ch,5Ch,12h,12h,2Ah,2Ah,2Ah,2Ah,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ah,12h,5Ch,5Ch,5Ch,0h,0h,5Ch,12h,12h,12h,12h,12h,12h,2Ah,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ah,12h,5Ch,5Ch,5Ch,0h,0h,5Ch,12h,12h,5Ch,5Ch,5Ch,42h,12h,2Ah,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,12h,5Ch,5Ch,5Ch,5Ch,5Ch,5Ch,12h,12h,5Ch,5Ch,5Ch,5Ch,42h,12h,2Ah,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ah,12h,5Ch,5Ch,5Ch,5Ch,12h,12h,12h,5Ch,5Ch,5Ch,5Ch,5Ch,42h,12h,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,12h,12h,12h,12h,12h,12h,12h,42h,5Ch,5Ch,5Ch,5Ch,5Ch,12h,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ah,12h,12h,12h,12h,12h,12h,12h,12h,12h,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,12h,12h,2Ah,2Ch,2C...
     5 0000000C 121212121212121212-
     5 00000015 12121212121212122A-
     5 0000001E 2A2A2A2A2A2A2A2A2A-
     5 00000027 2A2A2A2A2A1212125C-
     5 00000030 5C5C5C1212122A2C2C-
     5 00000039 2C2C2C2C2C2C2C2C2C-
     5 00000042 2C2C2C2A125C5C5C5C-
     5 0000004B 5C5C12122A2A2A2A2C-
     5 00000054 2C2C2C2C2C2C2C2C2C-
     5 0000005D 2C2A125C5C5C00005C-
     5 00000066 1212121212122A2C2C-
     5 0000006F 2C2C2C2C2C2C2C2C2A-
     5 00000078 125C5C5C00005C1212-
     5 00000081 5C5C5C42122A2C2C2C-
     5 0000008A 2C2C2C2C2C2C2C125C-
     5 00000093 5C5C5C5C5C12125C5C-
     5 0000009C 5C5C42122A2C2C2C2C-
     5 000000A5 2C2C2C2C2C2A125C5C-
     5 000000AE 5C5C1212125C5C5C5C-
     5 000000B7 5C42122C2C2C2C2C2C-
     5 000000C0 2C2C2C2C2C12121212-
     5 000000C9 121212425C5C5C5C5C-
     5 000000D2 122C2C2C2C2C2C2C2C-
     5 000000DB 2C2C2C2C2C2C2A1212-
     5 000000E4 121212121212122C2C-
     5 000000ED 2C2C2C2C2C2C2A2A2A-
     5 000000F6 2A2A2A2A2A2A12122A-
     5 000000FF 2C2C2C2C2C2C2C2C2C-
     5 00000108 2C2C2C2A1212121212-
     5 00000111 1212121212122A2C2C-
     5 0000011A 2C2C2C2C2C2C2C2C2C-
     5 00000123 2C1229292929292929-
     5 0000012C 292912122A2C2C2C2C-
     5 00000135 2C2C2C2C2C2C2C2A12-
     5 0000013E 292904040404041212-
     5 00000147 12122A2A2A2A2A2A2A-
     5 00000150 2A2A2A2A2A12122929-
     5 00000159 292929292929121212-
     5 00000162 121212121212121212-
     5 0000016B 121212121212121212-
     5 00000174 121212121212       
     6 0000017A 121212121212121212-     bird2: db 12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,12h,12h,12h,5Ch,5Ch,5Ch,5Ch,12h,12h,12h,2Ah,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ah,12h,5Ch,5Ch,5Ch,5Ch,5Ch,5Ch,12h,12h,2Ah,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ah,12h,5Ch,5Ch,5Ch,0h,0h,5Ch,12h,12h,2Ah,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ah,12h,5Ch,5Ch,5Ch,0h,0h,5Ch,12h,12h,2Ah,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,12h,5Ch,5Ch,5Ch,5Ch,5Ch,5Ch,12h,12h,2Ah,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ah,12h,5Ch,5Ch,5Ch,5Ch,12h,12h,12h,2Ah,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,12h,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ah,12h,12h,12h,42h,5Ch,5Ch,5Ch,5Ch,5Ch,12h,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ch,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,2Ah,12h,12h,5Ch,5Ch,5C...
     6 00000183 121212121212121212-
     6 0000018C 12121212121212122A-
     6 00000195 2A2A2A2A2A2A2A2A2A-
     6 0000019E 2A2A2A2A2A1212125C-
     6 000001A7 5C5C5C1212122A2C2C-
     6 000001B0 2C2C2C2C2C2C2C2C2C-
     6 000001B9 2C2C2C2A125C5C5C5C-
     6 000001C2 5C5C12122A2C2C2C2C-
     6 000001CB 2C2C2C2C2C2C2C2C2C-
     6 000001D4 2C2A125C5C5C00005C-
     6 000001DD 12122A2C2C2C2C2C2C-
     6 000001E6 2C2C2C2C2C2C2C2C2A-
     6 000001EF 125C5C5C00005C1212-
     6 000001F8 2A2C2C2C2C2C2C2C2C-
     6 00000201 2C2C2C2C2C2C2C125C-
     6 0000020A 5C5C5C5C5C12122A2C-
     6 00000213 2C2C2C2C2C2C2C2C2C-
     6 0000021C 2C2C2C2C2C2A125C5C-
     6 00000225 5C5C1212122A2C2C2C-
     6 0000022E 2C2C2C2C2C2C2C2C2C-
     6 00000237 2C2C2C2C2C12121212-
     6 00000240 121212121212121212-
     6 00000249 2C2C2C2C2C2C2C2C2C-
     6 00000252 2C2C2C2C2C2C2A1212-
     6 0000025B 12425C5C5C5C5C122C-
     6 00000264 2C2C2C2C2C2C2A2A2A-
     6 0000026D 2A2A2A2A2A2A12125C-
     6 00000276 5C5C5C5C42122C2C2C-
     6 0000027F 2C2C2C2A1212121212-
     6 00000288 1212121212125C5C5C-
     6 00000291 5C42122A2C2C2C2C2C-
     6 0000029A 2C1229292929292929-
     6 000002A3 292912121212121212-
     6 000002AC 2A2C2C2C2C2C2C2A12-
     6 000002B5 292904040404041212-
     6 000002BE 12122A2A2A2A2A2A2A-
     6 000002C7 2A2A2A2A2A12122929-
     6 000002D0 292929292929121212-
     6 000002D9 121212121212121212-
     6 000002E2 121212121212121212-
     6 000002EB 121212121212       
     7                                  
     8 000002F1 EE483131313131792B-     ground: db 0xEE,48h,31h,31h,31h,31h,31h,79h,2Bh,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h
     8 000002FA 434343434343434343-
     8 00000303 434343434343434343-
     8 0000030C 434343434343434343-
     8 00000315 434343434343434343-
     8 0000031E 4343434343         
     9 00000323 EEEE6049EE0AEE0A2F-     pipe: db 0xEE,0xEE,60h,49h,0xEE,0Ah,0xEE,0Ah,2Fh,60h,60h,60h,60h,2Fh,2Fh,2Fh,2Fh,2Fh,2Fh,2Fh,2Fh,2Fh,2Fh,2Fh,2Fh,2Fh,2Fh,2Fh,0xEE,2Fh,2Fh,0xEE,2Fh,02h,02h,79h,79h,0xBF,0xEE,0xEE
     9 0000032C 606060602F2F2F2F2F-
     9 00000335 2F2F2F2F2F2F2F2F2F-
     9 0000033E 2FEE2F2FEE2F020279-
     9 00000347 79BFEEEE           
    10 0000034B 434343434343434343-     scoreBoard: db 43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,36h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,36h,36h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,69h,36h,36h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,36h,36h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,36h,36h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,43h,36h,36h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,36h,36h,43h,43h,43h,43h,43h,43h,43h,4...
    10 00000354 434343434343434343-
    10 0000035D 434343434343434343-
    10 00000366 434336363636363636-
    10 0000036F 363636363636363636-
    10 00000378 363636363636363636-
    10 00000381 363636363636364343-
    10 0000038A 434343434343434343-
    10 00000393 434343434343434343-
    10 0000039C 434343434343434343-
    10 000003A5 363669696969696969-
    10 000003AE 696969696969696969-
    10 000003B7 696969696969696969-
    10 000003C0 696969363643434343-
    10 000003C9 434343434343434343-
    10 000003D2 434343434343434343-
    10 000003DB 434343434343433636-
    10 000003E4 000000000000000000-
    10 000003ED 000000000000000000-
    10 000003F6 000000000000000000-
    10 000003FF 003636434343434343-
    10 00000408 434343434343434343-
    10 00000411 434343434343434343-
    10 0000041A 434343434336360000-
    10 00000423 000000000000000000-
    10 0000042C 000000000000000000-
    10 00000435 000000000000000036-
    10 0000043E 364343434343434343-
    10 00000447 434343434343434343-
    10 00000450 434343434343434343-
    10 00000459 434343363600000000-
    10 00000462 000000000000000000-
    10 0000046B 000000000000000000-
    10 00000474 000000000000363636-
    10 0000047D 363636364336363636-
    10 00000486 433636363636433636-
    10 0000048F 363636433636363643-
    10 00000498 433636000000000000-
    10 000004A1 000000000000000000-
    10 000004AA 000000000000000000-
    10 000004B3 000000003636363669-
    10 000004BC 696943363669694336-
    10 000004C5 366936364336366936-
    10 000004CE 364336366969434336-
    10 000004D7 360000000000000000-
    10 000004E0 000000000000000000-
    10 000004E9 000000000000000000-
    10 000004F2 0000363636362B2B2B-
    10 000004FB 4336362B2B4336362B-
    10 00000504 36364336362B366943-
    10 0000050D 36362B434343363600-
    10 00000516 000000000000000000-
    10 0000051F 000000000000000000-
    10 00000528 000000000000000000-
    10 00000531 363636363636364336-
    10 0000053A 364343433636433636-
    10 00000543 43363636362B433636-
    10 0000054C 363643433636000000-
    10 00000555 000000000000000000-
    10 0000055E 000000000000000000-
    10 00000567 000000000000003636-
    10 00000570 696969363643363643-
    10 00000579 434336364336364336-
    10 00000582 366936364336366969-
    10 0000058B 434336360000000000-
    10 00000594 000000000000000000-
    10 0000059D 000000000000000000-
    10 000005A6 000000000036362B2B-
    10 000005AF 2B3636433636434343-
    10 000005B8 36364336364336362B-
    10 000005C1 36364336362B434343-
    10 000005CA 363600000000000000-
    10 000005D3 000000000000000000-
    10 000005DC 000000000000000000-
    10 000005E5 000000363636363636-
    10 000005EE 364336363636433636-
    10 000005F7 363636433636433636-
    10 00000600 433636363643433636-
    10 00000609 000000000000000000-
    10 00000612 000000000000000000-
    10 0000061B 000000000000000000-
    10 00000624 003636696969696943-
    10 0000062D 696969694369696969-
    10 00000636 694369694369694369-
    10 0000063F 696969434336360000-
    10 00000648 000000000000000000-
    10 00000651 000000000000000000-
    10 0000065A 000000000000000036-
    10 00000663 362B2B2B2B2B432B2B-
    10 0000066C 2B2B432B2B2B2B2B43-
    10 00000675 2B2B432B2B432B2B2B-
    10 0000067E 2B4343363600000000-
    10 00000687 000000000000000000-
    10 00000690 000000000000000000-
    10 00000699 000000000000363643-
    10 000006A2 434343434343434343-
    10 000006AB 434343434343434343-
    10 000006B4 434343434343434343-
    10 000006BD 433636000000000000-
    10 000006C6 000000000000000000-
    10 000006CF 000000000000000000-
    10 000006D8 000000003636434343-
    10 000006E1 434343434343434343-
    10 000006EA 434343434343434343-
    10 000006F3 434343434343434336-
    10 000006FC 363636363636363636-
    10 00000705 363636363636363636-
    10 0000070E 363636363636363636-
    10 00000717 363636364343434343-
    10 00000720 434343434343434343-
    10 00000729 434343434343434343-
    10 00000732 434343434343696969-
    10 0000073B 696969696969696969-
    10 00000744 696969696969696969-
    10 0000074D 696969696969696969-
    10 00000756 696943434343434343-
    10 0000075F 434343434343434343-
    10 00000768 434343434343434343-
    10 00000771 434343432B2B2B2B2B-
    10 0000077A 2B2B2B2B2B2B2B2B2B-
    10 00000783 2B2B2B2B2B2B2B2B2B-
    10 0000078C 2B2B2B2B2B2B2B2B2B 
    11 00000795 1E00                    birdy: dw 30
    12 00000797 3F01CB01                pipesX: dw 319,  459
    13 0000079B 32001400                pipesY: dw 50 ,   20
    14 0000079F 0000                    leftOverPipeWidth: dw 0
    15 000007A1 0000                    leftOverPipeY: dw 0
    16 000007A3 0000                    boolDrawBottomPipe: dw 0
    17 000007A5 0000                    intBottomPipeStart: dw 0
    18 000007A7 0000                    intPipeEndX: dw 0
    19 000007A9 0000                    intBirdBottomY: dw 0
    20 000007AB 0600                    velocityUp: dw 6
    21 000007AD 0000                    velocityUpCounter: dw 0
    22 000007AF 0200                    positionUpCounter: dw 2
    23 000007B1 0500                    velocityDown: dw 5
    24 000007B3 0700                    velocityDownCounter: dw 7
    25 000007B5 0500                    positionDownCounter: dw 5
    26 000007B7 1E00                    birdCounter: dw 30
    27 000007B9 0000                    boolCollided: dw 0
    28 000007BB 0000                    score: dw 0
    29 000007BD 0000                    scoreCounter: dw 0
    30 000007BF 0002                    sound: dw 0x200
    31 000007C1 0100                    isMenu: dw 1
    32 000007C3 0000                    boolGameOver: dw 0
    33 000007C5 507265737320737061-     StartText: db "Press spacebar to start"
    33 000007CE 636562617220746F20-
    33 000007D7 7374617274         
    34 000007DC 507265737320512074-     ExitText: db "Press Q to exit"
    34 000007E5 6F2065786974       
    35 000007EB 47616D65204F766572      GameOverText: db "Game Over"
    36 000007F4 507265737320522074-     GameRestartText: db "Press R to restart"
    36 000007FD 6F2072657374617274 
    37 00000806 0000                    boolFirstPipe: dw 0
    38 00000808 0000                    boolEndGame: dw 0
    39 0000080A 0000                    boolAdjusted: dw 0
    40                                  SPACE_KEY equ 20h
    41                                  Q_Key equ 71h
    42                                  ;====================================
    43                                  defSleep:
    44 0000080C 60                      pusha
    45 0000080D B90000                  mov cx, 0; keep it 0
    46 00000810 BA983A                  mov dx, 0x3A98 ; 5000 microseconds
    47 00000813 B486                    mov ah, 86h ; function 86h
    48 00000815 CD15                    int 15h ; call interrupt 15h
    49 00000817 61                      popa
    50 00000818 C3                      ret
    51                                  
    52                                  ;====================================
    53                                  defDrawMenuTexts:
    54 00000819 55                      push bp
    55 0000081A 89E5                    mov bp, sp
    56 0000081C 60                      pusha
    57                                  
    58 0000081D B001                    mov al, 1
    59 0000081F B700                    mov bh, 0
    60 00000821 B305                    mov bl, 0x05
    61 00000823 B91700                  mov cx, 23 ; calculate message size.
    62 00000826 B20A                    mov dl, 10
    63 00000828 B60A                    mov dh, 10
    64 0000082A 0E                      push cs
    65 0000082B 07                      pop es
    66 0000082C BD[C507]                mov bp, StartText
    67 0000082F B413                    mov ah, 13h
    68 00000831 CD10                    int 10h
    69                                  
    70 00000833 B20D                    mov dl, 13
    71 00000835 B60C                    mov dh, 12
    72 00000837 B90F00                  mov cx, 15 ; calculate message size.
    73 0000083A BD[DC07]                mov bp, ExitText
    74 0000083D CD10                    int 10h
    75                                  
    76 0000083F 6A35                    push 35h ; background color
    77 00000841 68FA00                  push 250 ; width
    78 00000844 6A50                    push 80 ; y Cordinate
    79 00000846 6A28                    push 40 ; x Cordinate
    80 00000848 E80F00                  call defSetTextBackground
    81 0000084B 6A35                    push 35h ; background color
    82 0000084D 68FA00                  push 250 ; width
    83 00000850 6A60                    push 96 ; y Cordinate
    84 00000852 6A32                    push 50 ; x Cordinate
    85 00000854 E80300                  call defSetTextBackground
    86                                  
    87                                  
    88 00000857 61                      popa
    89 00000858 5D                      pop bp
    90 00000859 C3                      ret
    91                                  ;====================================
    92                                  defSetTextBackground:
    93 0000085A 55                      push bp
    94 0000085B 89E5                    mov bp, sp
    95 0000085D 60                      pusha
    96                                  
    97 0000085E 8B4E04                  mov cx, [bp+4]; x Cordinate
    98 00000861 8B5606                  mov dx, [bp+6]; y Cordinate
    99 00000864 89CB                    mov bx, cx
   100 00000866 035E08                  add bx, [bp+8]; x Cordinate + width
   101                                  
   102                                  checkAndReplace:
   103 00000869 B40D                    mov ah, 0Dh
   104 0000086B CD10                    int 10h
   105 0000086D 3C00                    cmp al, 00h
   106 0000086F 7507                    jne skipReplace
   107 00000871 B40C                    mov ah, 0Ch
   108 00000873 8A460A                  mov al, [bp+10]
   109 00000876 CD10                    int 10h
   110                                  skipReplace:
   111 00000878 41                      inc cx
   112 00000879 39D9                    cmp cx, bx
   113 0000087B 72EC                    jb checkAndReplace
   114 0000087D 42                      inc dx
   115 0000087E 8B4E04                  mov cx, [bp+4]
   116 00000881 8B4606                  mov ax, [bp+6]
   117 00000884 83C008                  add ax, 8
   118 00000887 39C2                    cmp dx, ax
   119 00000889 72DE                    jb checkAndReplace
   120                                  
   121 0000088B 61                      popa
   122 0000088C 5D                      pop bp
   123 0000088D C20800                  ret 8
   124                                  ;====================================
   125                                  defDrawGameOver:
   126 00000890 55                      push bp
   127 00000891 89E5                    mov bp, sp
   128 00000893 60                      pusha
   129                                  
   130 00000894 B001                    mov al, 1
   131 00000896 B700                    mov bh, 0
   132 00000898 B328                    mov bl, 0x28
   133 0000089A B90900                  mov cx, 9 ; calculate message size.
   134 0000089D B20F                    mov dl, 15
   135 0000089F B614                    mov dh, 20
   136 000008A1 0E                      push cs
   137 000008A2 07                      pop es
   138 000008A3 BD[EB07]                mov bp, GameOverText
   139 000008A6 B413                    mov ah, 13h
   140 000008A8 CD10                    int 10h
   141                                  
   142 000008AA 6A43                    push 43h ; background color
   143 000008AC 68FA00                  push 250 ; width
   144 000008AF 68A000                  push 160 ; y Cordinate
   145 000008B2 6A78                    push 120 ; x Cordinate
   146 000008B4 E8A3FF                  call defSetTextBackground
   147                                  
   148                                  
   149 000008B7 B91200                  mov cx, 18 ; calculate message size.
   150 000008BA B20A                    mov dl, 10
   151 000008BC B618                    mov dh, 24
   152 000008BE BD[F407]                mov bp, GameRestartText
   153 000008C1 CD10                    int 10h
   154                                  
   155 000008C3 6A43                    push 43h ; background color
   156 000008C5 68FA00                  push 250 ; width
   157 000008C8 68C000                  push 192 ; y Cordinate
   158 000008CB 6A32                    push 50 ; x Cordinate
   159 000008CD E88AFF                  call defSetTextBackground
   160                                  
   161 000008D0 61                      popa
   162 000008D1 5D                      pop bp
   163 000008D2 C3                      ret
   164                                  ;====================================
   165                                  defDrawSky: ; Draw a entire row of sky
   166 000008D3 B035                    mov al,35h
   167 000008D5 B40C                    mov ah,0ch
   168 000008D7 B90000                  mov cx,0
   169                                  drawSky:
   170 000008DA CD10                    int 10h
   171 000008DC 41                      inc cx
   172 000008DD 81F94001                cmp cx,320
   173 000008E1 72F7                    jb drawSky
   174 000008E3 C3                      ret
   175                                  ;====================================
   176                                  defDrawGround: ; Draw a entire row of ground
   177 000008E4 8A07                    mov byte al, [bx]
   178 000008E6 B90000                  mov cx,0
   179                                  drawGround:
   180 000008E9 CD10                    int 10h
   181 000008EB 41                      inc cx
   182 000008EC 81F94001                cmp cx,320
   183 000008F0 72F7                    jb drawGround
   184 000008F2 C3                      ret
   185                                  ;=====================================
   186                                  drawBackground:
   187 000008F3 60                      pusha
   188 000008F4 BA0000                  mov dx, 0
   189                                  skyLoop:
   190 000008F7 E8D9FF                  call defDrawSky
   191 000008FA 42                      inc dx
   192 000008FB 81FA9600                cmp dx, 150
   193 000008FF 72F6                    jb skyLoop
   194 00000901 BB[F102]                mov bx, ground
   195                                  groundLoop:
   196 00000904 E8DDFF                  call defDrawGround
   197 00000907 43                      inc bx
   198 00000908 42                      inc dx
   199 00000909 81FAC800                cmp dx, 200
   200 0000090D 72F5                    jb groundLoop
   201 0000090F 61                      popa
   202 00000910 C3                      ret
   203                                  ;=====================================
   204                                  printnum:
   205 00000911 55                      push bp
   206 00000912 89E5                    mov bp, sp
   207 00000914 60                      pusha 
   208                                  
   209 00000915 833E[BD07]00            cmp word [scoreCounter], 0
   210 0000091A 754D                    jne skipPrint
   211 0000091C C706[BD07]1E00          mov word [scoreCounter], 30
   212 00000922 833E[C107]01            cmp word [isMenu], 1
   213 00000927 7440                    je skipPrint
   214 00000929 FF06[BB07]              inc word [score]
   215                                  
   216 0000092D A1[BB07]                mov ax, [score] ; load number in ax
   217 00000930 BB0A00                  mov bx, 10 ; use base 10 for division
   218 00000933 B90000                  mov cx, 0 ; initialize count of digits
   219                                  nextdigit:
   220 00000936 BA0000                  mov dx, 0 ; zero upper half of dividend
   221 00000939 F7F3                    div bx ; divide by 10
   222 0000093B 80C230                  add dl, 0x30 ; convert digit into ascii value
   223 0000093E 52                      push dx ; save ascii value on stack
   224 0000093F 41                      inc cx ; increment count of values
   225 00000940 83F800                  cmp ax, 0 ; is the quotient zero
   226 00000943 75F1                    jnz nextdigit ; if no divide it again
   227                                  
   228                                  checkCount:
   229 00000945 83F903                  cmp cx, 3 ; is the count 3
   230 00000948 7305                    jae print3 ; if yes print 3 digits
   231 0000094A 6A30                    push '0' ; if no print leading zero
   232 0000094C 41                      inc cx ; increment count of values
   233 0000094D EBF6                    jmp checkCount
   234                                  print3:
   235 0000094F B700                    mov bh, 0
   236 00000951 B336                    mov bl, 0x36
   237                                  nextpos:
   238 00000953 B402                    mov ah, 2
   239 00000955 B616                    mov dh, 22
   240 00000957 B217                    mov dl, 23
   241 00000959 28CA                    sub dl, cl
   242 0000095B 51                      push cx
   243 0000095C B90100                  mov cx, 1
   244 0000095F CD10                    int 10h
   245 00000961 59                      pop cx
   246 00000962 58                      pop ax
   247 00000963 B40A                    mov ah, 0Ah
   248 00000965 CD10                    int 10h
   249 00000967 E2EA                    loop nextpos ; repeat for all digits on stack
   250                                  skipPrint:
   251 00000969 FF0E[BD07]              dec word [scoreCounter]
   252 0000096D 61                      popa
   253 0000096E 5D                      pop bp
   254 0000096F C3                      ret
   255                                  ;=====================================
   256                                  ;Draw Flappy bird, Input: 1 dw element, y Cordinate
   257                                  defDrawBird:
   258 00000970 55                      push bp
   259 00000971 89E5                    mov bp, sp
   260 00000973 60                      pusha
   261                                  
   262 00000974 B92800                  mov cx, 40 ; x Cordinate
   263 00000977 8B5E04                  mov bx, [bp+4] ; y Cordinate
   264 0000097A 89DA                    mov dx, bx ; y Cordinate
   265 0000097C 83C30F                  add bx, 15 ; y Cordinate + 15
   266 0000097F 891E[A907]              mov word [intBirdBottomY], bx ; Save y Cordinate
   267                                  
   268 00000983 833E[B707]0F            cmp word [birdCounter], 15
   269 00000988 7712                    ja selectBird1
   270 0000098A BB[7A01]                mov bx, bird2 ; point bx to bird2
   271 0000098D 833E[B707]00            cmp word [birdCounter], 0
   272 00000992 770B                    ja startDrawBird
   273 00000994 C706[B707]1E00          mov word [birdCounter], 30
   274 0000099A EB03                    jmp startDrawBird
   275                                  selectBird1:
   276 0000099C BB[0300]                mov bx, bird1 ; point bx to bird1
   277                                  
   278                                  startDrawBird:
   279 0000099F FF0E[B707]              dec word [birdCounter]
   280 000009A3 83EA01                  sub dx,1
   281 000009A6 B40C                    mov ah,0ch
   282                                  
   283 000009A8 B035                    mov al,35h
   284                                  drawTopSky:
   285 000009AA CD10                    int 10h
   286 000009AC 41                      inc cx
   287 000009AD 83F941                  cmp cx,65
   288 000009B0 72F8                    jb drawTopSky
   289                                  
   290 000009B2 B92800                  mov cx, 40
   291 000009B5 42                      inc dx
   292                                  
   293                                  drawBird:
   294 000009B6 8A07                    mov byte al, [bx] ; Get pixel color
   295 000009B8 CD10                    int 10h ; Draw pixel
   296 000009BA 41                      inc cx ; x Cordinate + 1
   297 000009BB 43                      inc bx ; point bx to next pixel
   298 000009BC 83F941                  cmp cx, 65 ; Check if x Cordinate is 65
   299 000009BF 72F5                    jb drawBird ; If x Cordinate is less than 65, draw another pixel
   300 000009C1 42                      inc dx ; y Cordinate + 1
   301 000009C2 B92800                  mov cx, 40 ; x Cordinate = 40
   302 000009C5 3B16[A907]              cmp dx, [intBirdBottomY] ; Check if y Cordinate is equal to y Cordinate
   303 000009C9 72EB                    jb drawBird ; If y Cordinate is less than y Cordinate + 15, draw another pixel
   304                                  
   305 000009CB 81FA9600                cmp dx, 150
   306 000009CF 740A                    je skipBottomSky
   307 000009D1 B035                    mov al,35h
   308                                  drawBottomSky:
   309 000009D3 CD10                    int 10h
   310 000009D5 41                      inc cx
   311 000009D6 83F941                  cmp cx,65
   312 000009D9 72F8                    jb drawBottomSky
   313                                  
   314                                  skipBottomSky:
   315 000009DB 61                      popa 
   316 000009DC 5D                      pop bp
   317 000009DD C20200                  ret 2
   318                                  
   319                                  ;=====================================
   320                                  setFallDown:
   321 000009E0 C706[B107]0500          mov word [velocityDown], 5
   322 000009E6 C706[B307]0700          mov word [velocityDownCounter], 7
   323 000009EC C706[B507]0500          mov word [positionDownCounter], 5
   324 000009F2 C3                      ret
   325                                  
   326                                  moveBird:
   327 000009F3 60                      pusha; Push all registers to stack
   328 000009F4 B401                    mov ah,01h ; Get keyboard input
   329 000009F6 CD16                    int 16h ; Get keyboard input
   330 000009F8 7431                    jz moveBirdUp
   331 000009FA B400                    mov ah,00h ; Get keyboard input
   332 000009FC CD16                    int 16h ; Get keyboard input
   333 000009FE 3C20                    cmp al,SPACE_KEY ; Check if keyboard input is SPACE_KEY
   334 00000A00 7529                    jne moveBirdUp ; If keyboard input is not SPACE_KEY, jump to moveBirddown
   335 00000A02 FF36[BF07]              push word [sound]
   336 00000A06 E88603                  call playSound
   337 00000A09 C706[AB07]0000          mov word [velocityUp], 0
   338 00000A0F C706[AF07]0000          mov word [positionUpCounter], 0
   339                                  
   340 00000A15 E8C8FF                  call setFallDown
   341                                  
   342 00000A18 833E[C107]01            cmp word [isMenu], 1
   343 00000A1D 750C                    jne moveBirdUp
   344 00000A1F E8D1FE                  call drawBackground
   345 00000A22 E88200                  call defDrawScoreBoard
   346 00000A25 C706[C107]0000          mov word [isMenu], 0
   347                                  
   348                                  
   349                                  moveBirdUp:
   350 00000A2B 833E[C107]01            cmp word [isMenu], 1
   351 00000A30 7469                    je endMoveBird
   352                                  
   353 00000A32 833E[AB07]06            cmp word [velocityUp], 6
   354 00000A37 742F                    je moveBirdDown
   355 00000A39 833E[AF07]02            cmp word [positionUpCounter], 2
   356 00000A3E 770D                    ja skipMoveUp
   357 00000A40 FF0E[9507]              dec word [birdy]
   358 00000A44 8B1E[AB07]              mov bx, [velocityUp]
   359 00000A48 43                      inc bx
   360 00000A49 891E[AF07]              mov [positionUpCounter], bx
   361                                  skipMoveUp:
   362 00000A4D 833E[AD07]00            cmp word [velocityUpCounter], 0
   363 00000A52 750A                    jne endUpMove
   364 00000A54 FF06[AB07]              inc word [velocityUp]
   365 00000A58 C706[AD07]0700          mov word [velocityUpCounter], 7
   366                                  endUpMove:
   367 00000A5E FF0E[AF07]              dec word [positionUpCounter]
   368 00000A62 FF0E[AD07]              dec word [velocityUpCounter]
   369 00000A66 EB33                    jmp endMoveBird
   370                                  
   371                                  moveBirdDown:
   372 00000A68 833E[B507]00            cmp word [positionDownCounter], 0
   373 00000A6D 750C                    jne skipMoveDown
   374 00000A6F FF06[9507]              inc word [birdy]
   375 00000A73 8B1E[B107]              mov bx, [velocityDown]
   376 00000A77 891E[B507]              mov [positionDownCounter], bx
   377                                  
   378                                  skipMoveDown:
   379 00000A7B 833E[B107]00            cmp word [velocityDown], 0
   380 00000A80 7419                    je endMoveBird
   381 00000A82 833E[B307]00            cmp word [velocityDownCounter], 0
   382 00000A87 750A                    jne endDownMove
   383 00000A89 FF0E[B107]              dec word [velocityDown]
   384 00000A8D C706[B307]0700          mov word [velocityDownCounter], 7
   385                                  endDownMove:
   386 00000A93 FF0E[B307]              dec word [velocityDownCounter]
   387 00000A97 FF0E[B507]              dec word [positionDownCounter]
   388                                  
   389                                  
   390                                  
   391                                  endMoveBird:
   392 00000A9B 3C71                    cmp al,Q_Key
   393 00000A9D 7506                    jne endMoveBirdSkip
   394 00000A9F C706[0808]0100          mov word [boolEndGame],1
   395                                  endMoveBirdSkip:
   396                                  
   397 00000AA5 61                      popa ; Pop all registers from stack
   398 00000AA6 C3                      ret ; Return to mainLoop
   399                                  ;=====================================
   400                                  defDrawScoreBoard:
   401 00000AA7 55                      push bp
   402 00000AA8 89E5                    mov bp, sp
   403 00000AAA 60                      pusha
   404                                  
   405 00000AAB B97E00                  mov cx, 126 ; x Cordinate
   406 00000AAE BAAB00                  mov dx, 171 ; y Cordinate
   407 00000AB1 B40C                    mov ah, 0ch ; Function
   408 00000AB3 BB[4B03]                mov bx, scoreBoard ; Point bx to scoreBoard
   409                                  
   410                                  drawScoreBoard:
   411 00000AB6 8A07                    mov al, [bx] ; Get pixel color
   412 00000AB8 CD10                    int 10h ; Draw pixel
   413 00000ABA 41                      inc cx ; x Cordinate + 1
   414 00000ABB 43                      inc bx ; point bx to next pixel
   415 00000ABC 81F9BB00                cmp cx, 187 ; x cordinate + 61
   416 00000AC0 72F4                    jb drawScoreBoard
   417 00000AC2 42                      inc dx ; y Cordinate + 1
   418 00000AC3 B97E00                  mov cx, 126 ; x Cordinate
   419 00000AC6 81FABD00                cmp dx, 189 ; y Cordinate + 18
   420 00000ACA 72EA                    jb drawScoreBoard
   421                                  
   422 00000ACC 61                      popa
   423 00000ACD 5D                      pop bp
   424 00000ACE C3                      ret
   425                                  ;=====================================
   426                                  defDrawPipe:
   427 00000ACF 55                      push bp
   428 00000AD0 89E5                    mov bp, sp
   429 00000AD2 60                      pusha
   430                                  
   431 00000AD3 8B4E04                  mov cx, [bp+4] ; x Cordinate
   432 00000AD6 BA0000                  mov dx, 0 ; y Cordinate
   433                                  
   434                                  
   435 00000AD9 B40C                    mov ah, 0ch ; Function
   436 00000ADB 8B5E06                  mov bx, [bp+6]
   437 00000ADE 891E[A507]              mov word [intBottomPipeStart], bx ; Save y Cordinate
   438 00000AE2 8306[A507]37            add word [intBottomPipeStart], 55
   439 00000AE7 C706[A307]0000          mov word [boolDrawBottomPipe], 0 ; boolDrawBottomPipe = 0
   440 00000AED 890E[A707]              mov word [intPipeEndX], cx
   441 00000AF1 8306[A707]28            add word [intPipeEndX], 40
   442                                  
   443 00000AF6 BB[2303]                mov bx, pipe
   444                                  
   445 00000AF9 837E0801                cmp word [bp+8], 1
   446 00000AFD 741F                    je drawTopPipe
   447 00000AFF 833E[9F07]00            cmp word [leftOverPipeWidth], 0
   448 00000B04 7656                    jbe endDrawPipe
   449 00000B06 8B0E[9F07]              mov cx, [leftOverPipeWidth]
   450 00000B0A 890E[A707]              mov word [intPipeEndX], cx
   451 00000B0E B92800                  mov cx, 40
   452 00000B11 2B0E[9F07]              sub cx, [leftOverPipeWidth]
   453 00000B15 01CB                    add bx, cx
   454 00000B17 B90000                  mov cx, 0
   455 00000B1A FF0E[9F07]              dec word [leftOverPipeWidth]
   456                                  
   457                                  drawTopPipe:
   458 00000B1E 3B5606                  cmp dx, [bp+6] ; Check if y Cordinate is equal to y Cordinate + 150
   459 00000B21 740A                    je drawBorder
   460 00000B23 3B16[A507]              cmp dx, [intBottomPipeStart]
   461 00000B27 7404                    je drawBorder
   462 00000B29 8A07                    mov byte al, [bx]
   463 00000B2B EB02                    jmp colorSelected
   464                                  drawBorder:
   465 00000B2D B0EE                    mov al, 0xEE
   466                                  colorSelected:
   467 00000B2F 81F94001                cmp cx, 320
   468 00000B33 7327                    jae endDrawPipe
   469 00000B35 83F900                  cmp cx , 0
   470 00000B38 7222                    jb endDrawPipe
   471 00000B3A CD10                    int 10h ; Draw pixel
   472                                  skipPipe:
   473 00000B3C 42                      inc dx ; x Cordinate + 1
   474 00000B3D 3B5606                  cmp dx, [bp+6]
   475 00000B40 76DC                    jbe drawTopPipe
   476 00000B42 3B16[A507]              cmp dx, [intBottomPipeStart]
   477 00000B46 7703                    ja notSkip
   478 00000B48 83C236                  add dx, 54
   479                                  notSkip:
   480 00000B4B 81FA9600                cmp dx, 150
   481 00000B4F 72CD                    jb drawTopPipe
   482                                  
   483 00000B51 41                      inc cx
   484 00000B52 BA0000                  mov dx, 0
   485 00000B55 43                      inc bx
   486 00000B56 3B0E[A707]              cmp cx, [intPipeEndX]
   487 00000B5A 72C2                    jb drawTopPipe
   488                                  
   489                                  
   490                                  endDrawPipe:
   491 00000B5C 61                      popa 
   492 00000B5D 5D                      pop bp
   493 00000B5E C20600                  ret 6
   494                                  
   495                                  ;=====================================
   496                                  movePipe:
   497 00000B61 55                      push bp
   498 00000B62 89E5                    mov bp, sp
   499 00000B64 60                      pusha
   500 00000B65 8B5E04                  mov bx, [bp+4] ; Ref to Address of pipesX
   501 00000B68 FF0F                    dec word [bx] ; Decrement x Cordinate
   502 00000B6A 8B0F                    mov cx, [bx] ; x Cordinate
   503 00000B6C 83C129                  add cx,41 ; Last x Cordinate + 41
   504 00000B6F C706[0A08]0000          mov word [boolAdjusted], 0
   505 00000B75 81F94001                cmp cx, 320
   506 00000B79 7D02                    jge adjustX
   507 00000B7B EB0A                    jmp continueDrawing ; Continue drawing pipe
   508                                  adjustX:
   509 00000B7D 81E94001                sub word cx, 320
   510 00000B81 C706[0A08]0100          mov word [boolAdjusted], 1
   511                                  continueDrawing:
   512 00000B87 BA0000                  mov dx,0 ; y Cordinate
   513 00000B8A B035                    mov al,35h
   514 00000B8C B40C                    mov ah,0ch
   515 00000B8E 8B7606                  mov si,[bp+6] ; Ref to Address of pipesY
   516                                  drawLastColumnSky:
   517 00000B91 CD10                    int 10h
   518 00000B93 3B14                    cmp dx, [si] ; y Cordinate
   519 00000B95 7516                    jne continueDrawingSky
   520 00000B97 833E[0A08]00            cmp word [boolAdjusted], 0
   521 00000B9C 7405                    je notCheckForadjusted
   522 00000B9E 83F929                  cmp cx,41 ; x Cordinate
   523 00000BA1 7711                    ja skipSkyColumn
   524                                  notCheckForadjusted:
   525 00000BA3 83F929                  cmp cx,41 ; x Cordinate
   526 00000BA6 7205                    jb continueDrawingSky
   527 00000BA8 83C237                  add dx, 55
   528 00000BAB EBE4                    jmp drawLastColumnSky
   529                                  continueDrawingSky:
   530 00000BAD 42                      inc dx
   531 00000BAE 81FA9600                cmp dx,150
   532 00000BB2 72DD                    jb drawLastColumnSky
   533                                  
   534                                  skipSkyColumn:
   535                                  ;Check if pipe is out of screen
   536 00000BB4 83E929                  sub cx,41 ; Last x Cordinate
   537 00000BB7 83F900                  cmp cx,0
   538 00000BBA 7523                    jne endMovePipe
   539 00000BBC 833E[9707]00            cmp word [pipesX] , 0
   540 00000BC1 7506                    jne endMovePipeContinue
   541 00000BC3 C706[0608]0100          mov word [boolFirstPipe], 1
   542                                  endMovePipeContinue:
   543 00000BC9 C706[9F07]2800          mov word [leftOverPipeWidth], 40
   544 00000BCF 8B0C                    mov cx, [si]
   545 00000BD1 890E[A107]              mov word [leftOverPipeY], cx
   546 00000BD5 C7074001                mov word [bx], 320
   547 00000BD9 FF7606                  push word [bp+6] ; Ref to Address of pipesY
   548 00000BDC E83701                  call generateRandomNumber
   549                                  
   550                                  endMovePipe:
   551                                  
   552 00000BDF 61                      popa
   553 00000BE0 5D                      pop bp
   554 00000BE1 C20200                  ret 2
   555                                  ;=====================================
   556                                  defCollided:
   557 00000BE4 50                      push ax
   558 00000BE5 FF36[BF07]              push word [sound]
   559 00000BE9 E8A301                  call playSound
   560 00000BEC C706[C307]0100          mov word [boolGameOver], 1
   561 00000BF2 E89BFC                  call defDrawGameOver
   562                                  waitForKey:
   563 00000BF5 B400                    mov ah,00
   564 00000BF7 CD16                    int 16h
   565 00000BF9 3C72                    cmp al, 'r'
   566 00000BFB 75F8                    jne waitForKey
   567 00000BFD C706[C107]0100          mov word [isMenu], 1
   568 00000C03 C706[BB07]0000          mov word [score], 0
   569 00000C09 C706[BD07]0000          mov word [scoreCounter], 0
   570 00000C0F C706[9507]1E00          mov word [birdy], 30
   571 00000C15 C706[9707]3F01          mov word [pipesX], 319
   572 00000C1B C706[9907]CB01          mov word [pipesX+2], 459
   573 00000C21 C706[9B07]3200          mov word [pipesY], 50
   574 00000C27 C706[9D07]1400          mov word [pipesY+2], 20
   575 00000C2D C706[9F07]0000          mov word [leftOverPipeWidth], 0
   576 00000C33 C706[A107]0000          mov word [leftOverPipeY], 0
   577 00000C39 C706[A307]0000          mov word [boolDrawBottomPipe], 0
   578 00000C3F C706[A507]0000          mov word [intBottomPipeStart], 0
   579 00000C45 C706[A707]0000          mov word [intPipeEndX], 0
   580 00000C4B C706[AB07]0600          mov word [velocityUp], 6
   581 00000C51 C706[AD07]0000          mov word [velocityUpCounter], 0
   582 00000C57 C706[AF07]0200          mov word [positionUpCounter], 2
   583 00000C5D C706[B107]0500          mov word [velocityDown], 5
   584 00000C63 C706[B307]0700          mov word [velocityDownCounter], 7
   585 00000C69 C706[B507]0500          mov word [positionDownCounter], 5
   586 00000C6F C706[B707]1E00          mov word [birdCounter], 30
   587 00000C75 C706[B907]0000          mov word [boolCollided], 0
   588 00000C7B C706[BB07]0000          mov word [score], 0
   589 00000C81 C706[BD07]0000          mov word [scoreCounter], 0
   590 00000C87 C706[C307]0000          mov word [boolGameOver], 0
   591 00000C8D C706[0608]0000          mov word [boolFirstPipe], 0
   592                                  
   593 00000C93 E85DFC                  call drawBackground
   594 00000C96 E80EFE                  call defDrawScoreBoard
   595 00000C99 E87DFB                  call defDrawMenuTexts
   596                                  
   597 00000C9C 58                      pop ax
   598 00000C9D C3                      ret
   599                                  
   600                                  ;=====================================
   601                                  defCheckPipeCollisions:
   602 00000C9E 55                      push bp
   603 00000C9F 89E5                    mov bp, sp
   604 00000CA1 60                      pusha
   605                                  
   606                                  
   607                                  ; check 1, pipeX > 40 && pipeX < 65
   608 00000CA2 837E0628                cmp word [bp+6], 40
   609 00000CA6 7208                    jb checkx2
   610 00000CA8 837E0641                cmp word [bp+6], 65
   611 00000CAC 7702                    ja checkx2
   612 00000CAE EB08                    jmp checkY
   613                                  checkx2:
   614                                  ; check 2, pipeX < 40
   615 00000CB0 837E0628                cmp word [bp+6], 40
   616 00000CB4 771A                    ja clear
   617 00000CB6 EB00                    jmp checkY
   618                                  
   619                                  checkY:
   620                                  ; check Y, pipeY < birdY && pipeY + 55 > birdY
   621                                  
   622 00000CB8 8B5604                  mov dx, [bp+4]
   623 00000CBB 8B1E[9507]              mov bx, [birdy]
   624 00000CBF 39DA                    cmp dx, bx
   625 00000CC1 770A                    ja collided
   626 00000CC3 83C237                  add dx, 55
   627 00000CC6 83C30F                  add bx, 15
   628 00000CC9 39DA                    cmp dx, bx
   629 00000CCB 7303                    jae clear
   630                                  
   631                                  collided:
   632 00000CCD E814FF                  call defCollided
   633                                  
   634                                  
   635                                  clear:
   636 00000CD0 61                      popa
   637 00000CD1 5D                      pop bp
   638 00000CD2 C20400                  ret 4
   639                                  ;=====================================
   640                                  
   641                                  defCheckCollisions:
   642 00000CD5 55                      push bp
   643 00000CD6 89E5                    mov bp, sp
   644 00000CD8 60                      pusha
   645                                  
   646                                  ; check for collision with ground
   647 00000CD9 8B16[9507]              mov dx, [birdy] ; y Cordinate
   648 00000CDD 83FA00                  cmp dx, 0
   649 00000CE0 770F                    ja topCollisionClear
   650 00000CE2 C706[AB07]0600          mov word [velocityUp], 6
   651 00000CE8 E8F5FC                  call setFallDown
   652 00000CEB C706[9507]0100          mov word [birdy], 1
   653                                  
   654                                  topCollisionClear:
   655 00000CF1 83C20F                  add dx, 15
   656 00000CF4 81FA9600                cmp dx, 150
   657 00000CF8 7603                    jbe groundCollisionClear
   658 00000CFA E8E7FE                  call defCollided
   659                                  groundCollisionClear:
   660                                  
   661 00000CFD FF36[9707]              push word [pipesX]
   662 00000D01 FF36[9B07]              push word [pipesY]
   663 00000D05 E896FF                  call defCheckPipeCollisions
   664                                  
   665 00000D08 FF36[9907]              push word [pipesX+2]
   666 00000D0C FF36[9D07]              push word [pipesY+2]
   667 00000D10 E88BFF                  call defCheckPipeCollisions
   668                                  
   669 00000D13 61                      popa
   670 00000D14 5D                      pop bp
   671 00000D15 C3                      ret
   672                                  
   673                                  ;=====================================
   674                                  generateRandomNumber:
   675 00000D16 55                      push bp ; Push bp to stack
   676 00000D17 89E5                    mov bp, sp ; Move sp to bp
   677 00000D19 60                      pusha ; Push all registers to stack
   678 00000D1A B400                    mov ah,0 ; Function 0
   679 00000D1C CD1A                    int 1ah ; Get system time
   680 00000D1E 89D0                    mov ax,dx ; Move dx to ax
   681 00000D20 BB3C00                  mov bx,60 ; Move 60 to bx
   682 00000D23 BA0000                  mov dx,0 ; Move 0 to dx
   683 00000D26 F7F3                    div bx ; Divide ax by bx
   684 00000D28 8B5E04                  mov bx, [bp+4] ; Move address of variable to bx
   685 00000D2B 8917                    mov word [bx], dx ; Move dx to variable
   686 00000D2D 830714                  add word [bx], 20 ; Add 20 to variable
   687 00000D30 61                      popa ; Pop all registers from stack
   688 00000D31 5D                      pop bp ; Pop bp from stack
   689 00000D32 C20200                  ret 2 ; Return to mainLoop
   690                                  
   691                                  ;=====================================
   692                                  ChibiSound:   ;NVTTTTTT	Noise Volume Tone (N=1 highest pitch)
   693                                  	
   694 00000D35 3C00                    	cmp al,0
   695 00000D37 744F                    	je ChibiSound_Silent
   696                                  	
   697 00000D39 50                      	push ax
   698 00000D3A 88C4                    		mov ah,al
   699                                  				;   CCAAMMMS  C=Counter select,  A=counter Access
   700                                  							;M=counter Mode, S=counter Style
   701 00000D3C B0B6                    		mov al, 10110110b   ;M=3 - square wave, AA=3 Write LH Bytes to 42h
   702                                  							;C=2 - Counter 2 select
   703 00000D3E E643                    		out 43h, al     
   704                                  		
   705                                  	
   706 00000D40 80E43F                  		and ah,00111111b	;Pitch bits
   707                                  		
   708 00000D43 30C0                    		xor al,al
   709 00000D45 B102                    		mov cl,2			;shift pitch
   710 00000D47 D3C8                    		ror ax,cl
   711                                  				
   712 00000D49 E642                    		out 42h, al       	;L Byte - 0042 - counter 2
   713 00000D4B 88E0                    		mov al, ah  		;Send High Byte
   714 00000D4D E642                    		out 42h, al 		;H Byte - 0042 - counter 2
   715                                  		
   716                                  		
   717 00000D4F E461                    		in al, 61h      	;Get status of KB controller port B 
   718                                  			;  R---PPST 	 R=Reset P= parity checks S=Speaker 
   719                                  							;T=speaker Timer 
   720 00000D51 0C03                    		or al, 00000011b	;Turn on the speaker   
   721 00000D53 E661                    		out 61h, al       	;Update KB controller port B
   722 00000D55 24FD                    		and al,11111101b
   723 00000D57 88C4                    		mov ah,al			;Store 'Off' setting for later
   724 00000D59 5B                      	pop bx
   725                                  	
   726 00000D5A B90040                  	mov cx,4000h			;Quiet tone length
   727                                  	
   728 00000D5D F6C380                  	test bl,10000000b
   729 00000D60 7509                    	jnz ChibiSound_DoNoise	;Turn on noise?
   730                                  	
   731 00000D62 F6C340                  	test bl,01000000b
   732 00000D65 7527                    	jnz ChibiSound_DoLoud
   733                                  	
   734                                  ChibiSound_Quiet:		
   735                                  	
   736 00000D67 E2FE                    	loop ChibiSound_Quiet	;Wait for quiet tone
   737 00000D69 EB1D                    	jmp ChibiSound_Silent	;Turn off tone
   738                                  	
   739                                  ChibiSound_DoNoise:	
   740 00000D6B B90020                  	mov cx,2000h			;Noise lengyh (2000=loud 1000=quiet)
   741                                  		
   742 00000D6E F6C340                  	test bl,01000000b		;Volume bit
   743                                  	
   744 00000D71 BB6A20                  	mov bx,0010000001101010b	;Noise pattern
   745                                  	
   746 00000D74 7502                    	jnz ChibiSound_Noise
   747 00000D76 D1C9                    	ror cx,1				;Quiet noise (1000h)
   748                                  	
   749                                  ChibiSound_Noise:
   750 00000D78 D1CB                    	ror bx,1				;Cycle noise pattern
   751 00000D7A 88D8                    	mov al,bl
   752 00000D7C 30C8                    	xor al,cl				;add in CH/CL
   753 00000D7E 00E8                    	add al,ch
   754 00000D80 2402                    	and al,00000010b		;Get one bit
   755 00000D82 08E0                    	or al,ah				;Turn into a sound on/off toggle
   756 00000D84 E661                    	out 61h, al 
   757 00000D86 E2F0                    	loop ChibiSound_Noise
   758                                  	
   759                                  ChibiSound_Silent:	
   760 00000D88 E461                    	in al, 61h 			;Get status of KB controller port B 
   761                                  		 ;  R---PPST 	 R=Reset P= parity checks S=Speaker 
   762                                  							;T=speaker Timer 
   763 00000D8A 24FC                    	and al, 11111100b  	;Turn off the speaker 
   764 00000D8C E661                    	out 61h, al       	;Update KB controller port B
   765                                  ChibiSound_DoLoud:
   766 00000D8E C3                      	ret
   767                                  	
   768                                  ;=====================================
   769                                  
   770                                  playSound:
   771 00000D8F 55                      push bp
   772 00000D90 89E5                    mov bp, sp
   773 00000D92 60                      pusha
   774 00000D93 FF7604                  push word [bp+4]
   775 00000D96 E89CFF                  Call ChibiSound
   776 00000D99 58                      pop ax
   777 00000D9A 61                      popa
   778 00000D9B 5D                      pop bp
   779 00000D9C C20200                  ret 2
   780                                  
   781                                  ;=====================================
   782                                  mainLoop:
   783 00000D9F 833E[0808]01            cmp word [boolEndGame],1
   784 00000DA4 7472                    je endGame
   785 00000DA6 E84AFC                  call moveBird
   786 00000DA9 E829FF                  call defCheckCollisions
   787 00000DAC FF36[9507]              push word [birdy]
   788 00000DB0 E8BDFB                  call defDrawBird
   789                                  
   790 00000DB3 833E[C107]01            cmp word [isMenu], 1
   791 00000DB8 743E                    je skipCauseMenu
   792                                  
   793 00000DBA 68[9B07]                push pipesY ; y Cordinate address of pipe
   794 00000DBD 68[9707]                push pipesX; x Cordinate address of pipe    
   795 00000DC0 E89EFD                  call movePipe
   796 00000DC3 68[9D07]                push pipesY+2 ; y Cordinate address of pipe
   797 00000DC6 68[9907]                push pipesX+2 ; x Cordinate address of pipe
   798 00000DC9 E895FD                  call movePipe
   799                                  
   800 00000DCC 6A01                    push 1
   801 00000DCE FF36[9B07]              push word [pipesY] ; x Cordinate of pipe
   802 00000DD2 FF36[9707]              push word [pipesX] ; y Cordinate of pipe
   803 00000DD6 E8F6FC                  call defDrawPipe
   804 00000DD9 6A01                    push 1
   805 00000DDB FF36[9D07]              push word [pipesY+2] ; x Cordinate of pipe
   806 00000DDF FF36[9907]              push word [pipesX+2] ; y Cordinate of pipe
   807 00000DE3 E8E9FC                  call defDrawPipe
   808 00000DE6 833E[0608]01            cmp word [boolFirstPipe], 1
   809 00000DEB 750B                    jne skipCauseMenu
   810 00000DED 6A00                    push 0
   811 00000DEF FF36[A107]              push word [leftOverPipeY]
   812 00000DF3 6A00                    push 0
   813 00000DF5 E8D7FC                  call defDrawPipe
   814                                  
   815                                  skipCauseMenu:
   816                                  
   817 00000DF8 E816FB                  call printnum
   818                                  
   819 00000DFB 833E[C107]01            cmp word [isMenu], 1
   820 00000E00 759D                    jne mainLoop
   821 00000E02 E807FA                  call defSleep
   822 00000E05 EB98                    jmp mainLoop
   823                                  
   824                                  start:
   825                                  
   826 00000E07 B400                    mov ah, 0
   827 00000E09 B013                    mov al, 13h
   828 00000E0B CD10                    int 10h
   829                                  
   830 00000E0D E8E3FA                  call drawBackground
   831 00000E10 E894FC                  call defDrawScoreBoard
   832 00000E13 E803FA                  call defDrawMenuTexts
   833 00000E16 EB87                    jmp mainLoop
   834                                  endGame:
   835 00000E18 B8004C                  mov ax, 0x4c00
   836 00000E1B CD21                    int 21h
