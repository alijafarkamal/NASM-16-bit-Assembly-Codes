     1                                  [org 0x0100]
     2 00000000 EB71                    jmp start    
     3 00000002 646473646668677274-     InputString: db 'ddsdfhgrtsdfhjghjksdd'
     3 0000000B 736466686A67686A6B-
     3 00000014 736464             
     4 00000017 64                      CharToFind: db 'd'
     5 00000018 24                      CharToReplace: db '$'
     6 00000019 00                      ModifiedString: db 0
     7                                  clrscr:	
     8 0000001A 06                      	push es
     9 0000001B 50                      	push ax
    10 0000001C 51                      	push cx
    11 0000001D 57                      	push di
    12                                  
    13 0000001E B800B8                  	mov ax, 0xb800
    14 00000021 8EC0                    	mov es, ax ; point es to video base
    15 00000023 31FF                    	xor di, di ; point di to top left column
    16 00000025 B82007                  	mov ax, 0x0720 ; space char in normal attribute
    17 00000028 B9D007                  	mov cx, 2000 ; number of screen locations
    18                                  	
    19 0000002B FC                      	cld ; auto increment mode
    20 0000002C F3AB                    	rep stosw ; clear the whole screen
    21                                  
    22 0000002E 5F                      	pop di 
    23 0000002F 59                      	pop cx
    24 00000030 58                      	pop ax
    25 00000031 07                      	pop es
    26 00000032 C3                      	ret
    27                                  
    28                                  count:
    29 00000033 55                      	push bp
    30 00000034 89E5                    	mov bp,sp
    31 00000036 06                      	push es
    32 00000037 50                      	push ax
    33 00000038 51                      	push cx
    34 00000039 56                      	push si
    35 0000003A 57                      	push di
    36 0000003B 1E                      	push ds
    37 0000003C 07                      	pop es ;es = ds
    38 0000003D A0[1700]                	mov al,byte[CharToFind]
    39 00000040 BF[0200]                	mov di,InputString
    40 00000043 B93200                  	mov cx,50
    41 00000046 01F9                    	add cx,di
    42                                  loopa:
    43 00000048 F2AE                    	repne scasb
    44 0000004A 8A1E[1800]              	mov bl,byte[CharToReplace]
    45 0000004E 885DFF                  	mov [di-1],bl
    46 00000051 39CF                    	cmp di,cx
    47 00000053 7702                    	ja out
    48 00000055 EBF1                    	jmp loopa
    49                                  out:
    50 00000057 B800B8                  	mov ax,0xB800
    51 0000005A 8EC0                    	mov es,ax
    52 0000005C BE[0200]                	mov si,InputString
    53                                  
    54 0000005F BF0000                  	mov di,0
    55 00000062 B40C                    	mov ah,0x0C
    56 00000064 B91500                  	mov cx,21
    57 00000067 FC                      	cld
    58                                  loopr:
    59 00000068 AC                      	lodsb
    60 00000069 AB                      	stosw
    61 0000006A E2FC                    	loop loopr
    62                                  ;	mov di,[bp+4]
    63                                  ;	mov cx,0xffff
    64                                  ;	xor al,al
    65                                  ;	repne scasb
    66                                  ;	mov ax,0xffff
    67                                  ;	sub ax,cx
    68                                  ;	dec ax
    69                                  ;
    70                                  ;	jz exit
    71                                  ;	mov cx,ax
    72                                  ;	mov ax,0xB800
    73                                  ;	mov es,ax
    74                                  ;	
    75                                  ;	mov di,0
    76                                  ;	mov si,[bp+4]
    77                                  ;	mov ah,0x0C
    78                                  ;	mov bx,1
    79                                  ;	mov dx,1
    80                                  ;	cld
    81                                  ;next:
    82                                  ;	lodsb
    83                                  ;	cmp al,' '
    84                                  ;	jnz label 
    85                                  ;	push ax
    86                                  ;	push di	;di ki orig value
    87                                  ;	mov bx,dx; incre
    88                                  ;	mov dx,ax; 	;ax ki value
    89                                  ;	mov ax,160 ;mul 
    90                                  ;	mul bx
    91                                  ;	mov dx,bx		;dx ki orig vapis
    92                                  ;	pop bx	;di ki value
    93                                  ;	sub ax,bx	;value to add 
    94                                  ;	add di,ax	;
    95                                  ;	pop ax
    96                                  ;	inc dx
    97                                  ;label:
    98                                  ;	stosw
    99                                  ;	loop next
   100                                  ;exit:	
   101 0000006C 5F                          pop di
   102 0000006D 5E                      	pop si
   103 0000006E 59                      	pop cx
   104 0000006F 58                      	pop ax
   105 00000070 07                      	pop es
   106 00000071 5D                      	pop bp
   107 00000072 C3                      	ret
   108                                  start:
   109 00000073 E8A4FF                  	call clrscr
   110 00000076 E8BAFF                  	call count
   111 00000079 B8004C                  mov ax,0x4c00
   112 0000007C CD21                    int 0x21
