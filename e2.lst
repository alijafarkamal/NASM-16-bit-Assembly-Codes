     1                                  ;              COAL PROJECT - GRAND PRIX CIRCUIT GAME IMPLEMENTATION
     2                                  ; MEMBERS:  SYED MUHAMMAD ANAS NAUMAN    21L-5230 
     3                                  ;           SAAD ASIF                    21L-7532  
     4                                  ; SECTION:  3-B          
     5                                  [org 0x0100]
     6 00000000 E91B38                  jmp start
     7 00000003 20424C4F4F44204855-          CarName: db ' BLOOD HUNTER ',0
     7 0000000C 4E5445522000       
     8 00000012 4649524500                      Fire: db 'FIRE',0
     9 00000017 2049474E2000                Ignition: db ' IGN ',0
    10 0000001D 204655454C00                    Fuel: db ' FUEL',0
    11 00000023 4F6E00                      OnButton: db 'On',0
    12 00000026 4F666600                   OffButton: db 'Off',0
    13 0000002A 535045454400                   Speed: db 'SPEED',0
    14 00000030 4745415200                      Gear: db 'GEAR',0
    15 00000035 52504D00                         Rpm: db 'RPM',0
    16 00000039 0000                      SpeedMeter: dw 0
    17 0000003B 0000                       GearMeter: dw 0
    18 0000003D 0000                        RpmMeter: dw 0
    19 0000003F 00000000                    OldKbISR: dd 0
    20 00000043 0000                     DataSegment: dw 0
    21 00000045 204341522043524153-       CarCrashed: db ' CAR CRASHED. RESETTING CAR ON TRACK ',0
    21 0000004E 4845442E2052455345-
    21 00000057 5454494E4720434152-
    21 00000060 204F4E20545241434B-
    21 00000069 2000               
    22 0000006B 01                          isRouteA: db 1
    23 0000006C 00                          isRouteB: db 0
    24 0000006D 00                          isRouteC: db 0
    25 0000006E 00                          isRouteD: db 0
    26 0000006F 0F                          lengthAC: db 15
    27 00000070 1B                          lengthBD: db 27
    28 00000071 05                        multipleAC: db 5
    29 00000072 03                        multipleBD: db 3
    30 00000073 03                          noOfLaps: db 3
    31 00000074 00                         lencvrdAC: db 0
    32 00000075 00                         lencvrdBD: db 0
    33 00000076 00                        isMultiple: db 0
    34 00000077 00                         isCrashed: db 0
    35 00000078 00                       RaceFinised: db 0
    36 00000079 8202                     CarPosMapRA: dw 642
    37 0000007B A200                     CarPosMapRB: dw 162
    38 0000007D 5401                     CarPosMapRC: dw 340
    39 0000007F 3403                     CarPosMapRD: dw 820
    40 00000081 00                           Seconds: db 0
    41 00000082 00                           Minutes: db 0
    42 00000083 00                         TickCount: db 0
    43 00000084 00000000                 oldTimerISR: dd 0
    44 00000088 00                          isRouteS: db 0
    45 00000089 00                       isForwardRS: db 0
    46 0000008A 00                       isReverseRS: db 0
    47 0000008B 0C                           lengthS: db 12
    48 0000008C 15                          lengthBS: db 21
    49 0000008D 06                          lengthDS: db 6
    50 0000008E 04                         multipleS: db 4
    51 0000008F 00                          lencvrdS: db 0
    52 00000090 B000                    CarPosMapRSf: dw 176
    53 00000092 9002                    CarPosMapRSr: dw 656
    54 00000094 4752414E4420505249-         GameName: db 'GRAND PRIX CIRCUIT GAME',0
    54 0000009D 582043495243554954-
    54 000000A6 2047414D4500       
    55 000000AC 5155414C494659494E-      ResultSheet: db 'QUALIFYING ROUND RESULT SHEET',0
    55 000000B5 4720524F554E442052-
    55 000000BE 4553554C5420534845-
    55 000000C7 455400             
    56 000000CA 506F732E2020202020-           Header: db 'Pos.             Name                        Time  ',0
    56 000000D3 20202020202020204E-
    56 000000DC 616D65202020202020-
    56 000000E5 202020202020202020-
    56 000000EE 202020202020202020-
    56 000000F7 54696D65202000     
    57 000000FE 303120202020202020-        Position1: db '01         Don Matrelli                     04:00  ',0
    57 00000107 2020446F6E204D6174-
    57 00000110 72656C6C6920202020-
    57 00000119 202020202020202020-
    57 00000122 202020202020202030-
    57 0000012B 343A3030202000     
    58 00000132 303220202020202020-        Position2: db '02         Travis Daye                      05:00  ',0
    58 0000013B 202054726176697320-
    58 00000144 446179652020202020-
    58 0000014D 202020202020202020-
    58 00000156 202020202020202030-
    58 0000015F 353A3030202000     
    59 00000166 303320202020202020-        Position3: db '03         Cal Tyrone                       06:00  ',0
    59 0000016F 202043616C20547972-
    59 00000178 6F6E65202020202020-
    59 00000181 202020202020202020-
    59 0000018A 202020202020202030-
    59 00000193 363A3030202000     
    60 0000019A 303420202020202020-        Position4: db '04         Peter Kurtz                      07:00  ',0
    60 000001A3 20205065746572204B-
    60 000001AC 7572747A2020202020-
    60 000001B5 202020202020202020-
    60 000001BE 202020202020202030-
    60 000001C7 373A3030202000     
    61 000001CE 303520202020202020-        Position5: db '05         Tse Sakamoto                     08:00  ',0
    61 000001D7 20205473652053616B-
    61 000001E0 616D6F746F20202020-
    61 000001E9 202020202020202020-
    61 000001F2 202020202020202030-
    61 000001FB 383A3030202000     
    62 00000202 303620202020202020-        Position6: db '06         Alfonso Rodriguez                09:00  ',0
    62 0000020B 2020416C666F6E736F-
    62 00000214 20526F647269677565-
    62 0000021D 7A2020202020202020-
    62 00000226 202020202020202030-
    62 0000022F 393A3030202000     
    63 00000236 303720202020202020-        Position7: db '07         Bruno Gourdo                     10:00  ',0
    63 0000023F 20204272756E6F2047-
    63 00000248 6F7572646F20202020-
    63 00000251 202020202020202020-
    63 0000025A 202020202020202031-
    63 00000263 303A3030202000     
    64 0000026A 303820202020202020-        Position8: db '08         Toni Borlini                     11:00  ',0
    64 00000273 2020546F6E6920426F-
    64 0000027C 726C696E6920202020-
    64 00000285 202020202020202020-
    64 0000028E 202020202020202031-
    64 00000297 313A3030202000     
    65 0000029E 303920202020202020-        Position9: db '09         Vito Giuffre                     12:00  ',0
    65 000002A7 20205669746F204769-
    65 000002B0 756666726520202020-
    65 000002B9 202020202020202020-
    65 000002C2 202020202020202031-
    65 000002CB 323A3030202000     
    66 000002D2 313020202020202020-       Position10: db '10         Nigel Levins                     13:00  ',0
    66 000002DB 20204E6967656C204C-
    66 000002E4 6576696E7320202020-
    66 000002ED 202020202020202020-
    66 000002F6 202020202020202031-
    66 000002FF 333A3030202000     
    67 00000306 202020202020202020-        PositionX: db '           Player X                                ',0
    67 0000030F 2020506C6179657220-
    67 00000318 582020202020202020-
    67 00000321 202020202020202020-
    67 0000032A 202020202020202020-
    67 00000333 20202020202000     
    68 0000033A 507265737320456E74-      EnterToExit: db 'Press Enter Key To Exit!',0
    68 00000343 6572204B657920546F-
    68 0000034C 20457869742100     
    69 00000353 20454E44204F462051-       RaceEndMsg: db ' END OF QUALIFYING ROUND ',0
    69 0000035C 55414C494659494E47-
    69 00000365 20524F554E442000   
    70 0000036D 204665746368696E67-        FetchData: db ' Fetching Data ...',0
    70 00000376 2044617461202E2E2E-
    70 0000037F 00                 
    71 00000380 2043616C63756C6174-       CalcResult: db ' Calculating Results ...',0 
    71 00000389 696E6720526573756C-
    71 00000392 7473202E2E2E00     
    72 00000399 205072696E74696E67-      PrintResult: db ' Printing',0
    72 000003A2 00                 
    73 000003A3 000000000000000000-        SaveMapR1: dw 0,0,0,0,0,0,0,0,0,0,0,0
    73 000003AC 000000000000000000-
    73 000003B5 000000000000       
    74 000003BB 000000000000000000-        SaveMapR2: dw 0,0,0,0,0,0,0,0,0,0,0,0
    74 000003C4 000000000000000000-
    74 000003CD 000000000000       
    75 000003D3 000000000000000000-        SaveMapR3: dw 0,0,0,0,0,0,0,0,0,0,0,0
    75 000003DC 000000000000000000-
    75 000003E5 000000000000       
    76 000003EB 000000000000000000-        SaveMapR4: dw 0,0,0,0,0,0,0,0,0,0,0,0
    76 000003F4 000000000000000000-
    76 000003FD 000000000000       
    77 00000403 000000000000000000-        SaveMapR5: dw 0,0,0,0,0,0,0,0,0,0,0,0
    77 0000040C 000000000000000000-
    77 00000415 000000000000       
    78 0000041B 205354415254494E47-        StartRace: db ' STARTING QUALIFYING ROUND ',0
    78 00000424 205155414C49465949-
    78 0000042D 4E4720524F554E4420-
    78 00000436 00                 
    79 00000437 204C4F4144494E4720-        LoadTrack: db ' LOADING TRACK ... ',0
    79 00000440 545241434B202E2E2E-
    79 00000449 2000               
    80 0000044B 2053455454494E4720-           SetCar: db ' SETTING CAR ON TRACK ...',0
    80 00000454 434152204F4E205452-
    80 0000045D 41434B202E2E2E00   
    81 00000465 204745542052454144-         GetReady: db ' GET READY',0
    81 0000046E 5900               
    82 00000470 2052454655454C494E-        Refueling: db ' REFUELING CAR ...',0
    82 00000479 4720434152202E2E2E-
    82 00000482 00                 
    83 00000483 2049474E4954494F4E-         IgnSwtch: db ' IGNITION SWITCH ',0
    83 0000048C 205357495443482000 
    84 00000495 204F4E00                     swtchOn: db ' ON',0
    85 00000499 507265737320456E74-     EnterToStart: db 'Press Enter Key To Start!',0
    85 000004A2 6572204B657920546F-
    85 000004AB 2053746172742100   
    86                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    87                                  ;         CLEAR SCREEN        ;
    88                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    89                                  clrscrn:
    90 000004B3 06                             push es
    91 000004B4 50                             push ax
    92 000004B5 51                             push cx
    93 000004B6 57                             push di
    94                                  
    95 000004B7 B800B8                         mov ax,0xb800
    96 000004BA 8EC0                           mov es,ax 
    97 000004BC 31FF                           xor di,di        ; load di to point to top left of screen
    98 000004BE B82007                         mov ax,0x0720    ; load space character on black background
    99 000004C1 B9D007                         mov cx,2000      ; number of columns to color
   100                                  
   101 000004C4 FC                             cld              ; auto increment method 
   102 000004C5 F3AB                           rep stosw        ; repeat until  cx turns zero
   103                                     
   104 000004C7 5F                             pop di
   105 000004C8 59                             pop cx
   106 000004C9 58                             pop ax
   107 000004CA 07                             pop es
   108                                  
   109 000004CB C3                             ret
   110                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   111                                  ;       PRINTING STRINGS      ;
   112                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   113                                  prntstr:
   114 000004CC 55                             push bp
   115 000004CD 89E5                           mov  bp,sp
   116 000004CF 06                             push es
   117 000004D0 50                             push ax
   118 000004D1 51                             push cx
   119 000004D2 56                             push si
   120 000004D3 57                             push di
   121                                    
   122 000004D4 2E8E06[4300]                   mov es,[cs:DataSegment] ; load ds in es
   123                                  
   124 000004D9 8B7E04                         mov   di,[bp+4]   ; point di to string address
   125 000004DC B9FFFF                         mov   cx,0xffff   ; set cx to highest count
   126 000004DF 30C0                           xor   al,al       ; set al to zero as a terminating factor
   127 000004E1 F2AE                           repne scasb       ; compare string till terminating factor
   128 000004E3 B8FFFF                         mov   ax,0xffff   ; set ax to highest count
   129 000004E6 29C8                           sub   ax,cx       ; get length of string in ax
   130 000004E8 48                             dec   ax          ; decrement length by one
   131                                         
   132 000004E9 89C1                           mov cx,ax         ; update cx with the count
   133 000004EB B800B8                         mov ax,0xb800   
   134 000004EE 8EC0                           mov es,ax
   135 000004F0 B050                           mov al,80         ; load 80 in al
   136 000004F2 F66608                         mul byte[bp+8]    ; multiply with y position
   137 000004F5 03460A                         add ax,[bp+10]    ; add x position
   138 000004F8 D1E0                           shl ax,1          ; convert into byte offset
   139 000004FA 89C7                           mov di,ax         ; update di accordingly
   140 000004FC 8B7604                         mov si,[bp+4]     ; make si point to string address
   141 000004FF 8A6606                         mov ah,[bp+6]     ; load attribute in ah
   142                                  
   143 00000502 FC                             cld               ; auto increment method
   144                                  
   145                                  nxtchar:
   146 00000503 AC                             lodsb             ; load string byte in al
   147 00000504 AB                             stosw             ; print ax on screen
   148 00000505 E2FC                           loop nxtchar      ; continue till cx isnt zero
   149                                     
   150 00000507 5F                            pop di
   151 00000508 5E                            pop si
   152 00000509 59                            pop cx
   153 0000050A 58                            pop ax
   154 0000050B 07                            pop es
   155 0000050C 5D                            pop bp
   156                                  
   157 0000050D C20800                        ret 8 
   158                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   159                                  ;       PRINTING DIGITS       ;
   160                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   161                                  prntdgt:
   162 00000510 55                             push bp
   163 00000511 89E5                           mov  bp,sp
   164 00000513 06                             push es
   165 00000514 50                             push ax
   166 00000515 53                             push bx
   167 00000516 51                             push cx
   168 00000517 52                             push dx
   169 00000518 57                             push di
   170                                  
   171 00000519 B800B8                         mov ax,0xb800
   172 0000051C 8EC0                           mov es,ax
   173                                  
   174 0000051E 8B4604                         mov ax,[bp+4]         ; load ax with the decimal number
   175 00000521 BB0A00                         mov bx,10             ; load the base system (10 for decimal number system)
   176 00000524 B90000                         mov cx,0              ; initialize digit counter
   177                                  
   178                                  nxtdgt:
   179 00000527 BA0000                         mov  dx,0             ; reset dx to 0
   180 0000052A F7F3                           div  bx               ; perform division to its base
   181 0000052C 80C230                         add  dl,0x30          ; convert digit to its ascii
   182 0000052F 52                             push dx               ; store digit on stack
   183 00000530 41                             inc  cx               ; increment digit count
   184 00000531 83F800                         cmp  ax,0             ; check if ax is empty
   185 00000534 75F1                           jnz  nxtdgt           ; repeat until ax is empty
   186                                           
   187 00000536 83F901                          cmp  cx,1            ; check if 1 digit is present or not
   188 00000539 7505                            jne  below1          ; check if greater number of digits than 1
   189 0000053B BA3000                          mov  dx,0x0030       ; load dx with digit 0
   190 0000053E 52                              push dx              ; push the digit on stack
   191 0000053F 41                              inc  cx              ; increment digit count
   192                                  
   193 00000540 83F902                  below1: cmp cx,2             ; check if 2 digits present or not
   194 00000543 7505                            jne  below2          ; check if greater number of digits than 2
   195 00000545 BA3000                          mov  dx,0x0030       ; load dx with digit 0
   196 00000548 52                              push dx              ; push the digit on stack
   197 00000549 41                              inc  cx              ; increment digit count
   198                                  
   199                                  
   200                                  below2:
   201 0000054A 8B7E06                           mov di,[bp+6]       ; load location to print digit at
   202                                  
   203                                  nxtpos:
   204 0000054D 5A                             pop dx                ; restore the digit
   205 0000054E 8A7608                         mov dh,byte[bp+8]     ; load attribute byte              
   206 00000551 268915                         mov [es:di],dx        ; print digit on desired location
   207 00000554 83C702                         add di,2              ; update di to point to next location
   208 00000557 E2F4                           loop nxtpos           ; repeat until all digits are printed
   209                                  
   210 00000559 5F                             pop di
   211 0000055A 5A                             pop dx
   212 0000055B 59                             pop cx
   213 0000055C 5B                             pop bx
   214 0000055D 58                             pop ax
   215 0000055E 07                             pop es
   216 0000055F 5D                             pop bp
   217                                         
   218 00000560 C20600                         ret 6
   219                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   220                                  ;        PRINTING SKY         ;
   221                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   222                                  prntsky:
   223 00000563 06                             push es
   224 00000564 50                             push ax
   225 00000565 51                             push cx
   226 00000566 57                             push di
   227                                  
   228 00000567 B800B8                         mov ax,0xb800
   229 0000056A 8EC0                           mov es,ax
   230 0000056C 31FF                           xor di,di         ; move di to location 0
   231 0000056E B8DB0B                         mov ax,0x0bdb     ; color character with cyan foreground and black background
   232 00000571 B93002                         mov cx,560        ; COLOR FIRST 7 ROWS (80 * 7 = 560)
   233                                   
   234 00000574 FC                             cld               ; auto increment method 
   235 00000575 F3AB                           rep stosw         ; repeat until  cx turns zero
   236                                       
   237 00000577 5F                             pop di
   238 00000578 59                             pop cx
   239 00000579 58                             pop ax
   240 0000057A 07                             pop es
   241                                  
   242 0000057B C3                             ret
   243                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   244                                  ;PRINTING REAR VIEW MIRROR SKY;
   245                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   246                                  RMsky:
   247 0000057C 06                             push es
   248 0000057D 50                             push ax
   249 0000057E 51                             push cx
   250 0000057F 57                             push di
   251                                       
   252 00000580 B800B8                        mov ax,0xb800
   253 00000583 8EC0                          mov es,ax
   254                                  
   255 00000585 BFE00B                       mov di,3040               ; point di to starting location
   256 00000588 B90300                       mov cx,3                  ; number of rows to color
   257 0000058B B8DB0B                       mov ax,0x0bdb             ; cyan color attribute
   258                                  
   259                                  loopRMsky:
   260 0000058E 57                           push di                   ; store di for later use
   261 0000058F 51                           push cx                   ; store cx for later use
   262 00000590 B91000                       mov cx,16                 ; number of columns to color
   263 00000593 F3AB                         rep stosw                 ; color the desired columns
   264 00000595 59                           pop cx                    ; restore cx
   265 00000596 5F                           pop di                    ; restore di
   266 00000597 81C7A000                     add di,160                ; update di
   267 0000059B 83E901                       sub cx,1                  ; decrement rows counter
   268 0000059E 83F900                       cmp cx,0                  ; check if all rows colored
   269 000005A1 75EB                         jnz loopRMsky             ; keep coloring if false
   270                                  
   271 000005A3 5F                             pop di
   272 000005A4 59                             pop cx
   273 000005A5 58                             pop ax
   274 000005A6 07                             pop es
   275                                  
   276 000005A7 C3                             ret
   277                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   278                                  ;     PRINTING MOUNTAINS      ;
   279                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   280                                  mts:
   281 000005A8 55                             push bp
   282 000005A9 89E5                           mov bp,sp
   283 000005AB 06                             push es
   284 000005AC 50                             push ax
   285 000005AD 51                             push cx
   286 000005AE 57                             push di
   287 000005AF 53                             push bx
   288                                  
   289 000005B0 B800B8                         mov ax,0xb800
   290 000005B3 8EC0                           mov es,ax
   291                                  
   292 000005B5 FC                             cld             ; auto increment method
   293                                  
   294 000005B6 8B7E04                         mov di,[bp+4]   ; load di location
   295 000005B9 8B4606                         mov ax,[bp+6]   ; load attribute in ax
   296 000005BC 8B4E08                         mov cx,[bp+8]   ; load number of columns to color
   297 000005BF 8B5E0A                         mov bx,[bp+10]  ; load number of rows to color
   298                                  
   299                                  loopMts:
   300 000005C2 57                           push di           ; store di for later use
   301 000005C3 51                           push cx           ; store cx for later use
   302 000005C4 F3AB                         rep stosw         ; color desired number of columns
   303 000005C6 59                           pop cx            ; restore cx
   304 000005C7 83E902                       sub cx,2          ; decrement cx by 2
   305 000005CA 5F                           pop di            ; restore di
   306 000005CB 81EF9E00                     sub di,158        ; update di accordingly
   307 000005CF 4B                           dec bx            ; decrement bx
   308 000005D0 83FB00                       cmp bx,0          ; check if all rows colored
   309 000005D3 75ED                         jnz loopMts       ; keep coloring if false
   310                                  
   311 000005D5 5B                             pop bx
   312 000005D6 5F                             pop di
   313 000005D7 59                             pop cx
   314 000005D8 58                             pop ax
   315 000005D9 07                             pop es
   316 000005DA 5D                             pop bp
   317                                  
   318 000005DB C20800                         ret 8
   319                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   320                                  ;    PRINTING BACKGROUND A    ;
   321                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   322                                  prntbgA:
   323 000005DE 06                             push es
   324 000005DF 50                             push ax
   325 000005E0 51                             push cx
   326 000005E1 57                             push di
   327                                  
   328 000005E2 B800B8                         mov ax,0xb800
   329 000005E5 8EC0                           mov es,ax
   330                                  
   331 000005E7 FC                             cld               ; auto increment method
   332                                  
   333 000005E8 E878FF                         call prntsky      ; FUNCTION CALL:  PRINTING SKY
   334                                  
   335 000005EB BF6801                         mov di, 360       ; point di to location 
   336 000005EE B8FE50                         mov ax,0x50fe     ; magenta background on black foreground
   337 000005F1 B92800                         mov cx,40         ; number of columns to color
   338 000005F4 F3AB                           rep stosw         ; color desired number of columns
   339                                      
   340 000005F6 B8EA70                         mov ax,0x70ea     ; white background on black foreground
   341 000005F9 BF0802                         mov di, 520       ; move di to location 
   342 000005FC B92800                         mov cx,40         ; number of columns to color
   343 000005FF F3AB                           rep stosw         ; color desired number of columns
   344                                  
   345 00000601 BFA802                         mov di, 680       ; point di to location 
   346 00000604 B8FE50                         mov ax,0x50fe     ; magenta background on black foreground
   347 00000607 B92800                         mov cx,40         ; number of columns to color
   348 0000060A F3AB                           rep stosw         ; color desired number of columns
   349                                  
   350 0000060C BF9402                         mov di, 660       ; point di to location 
   351 0000060F B8FE50                         mov ax,0x50fe     ; grey background on black foreground
   352 00000612 B90200                         mov cx,2          ; number of columns to color
   353 00000615 F3AB                           rep stosw         ; color the desired columns
   354                                  
   355 00000617 BF0803                         mov di, 776       ; move di to location 
   356 0000061A B8FE50                         mov ax,0x50fe     ; grey background on black foreground
   357 0000061D B90200                         mov cx,2          ; number of columns to color
   358 00000620 F3AB                           rep stosw         ; color the desired columns
   359                                      
   360 00000622 B8EA70                         mov ax,0x70ea     ; white backround on black foreground
   361 00000625 BF3603                         mov di, 822       ; point di to location 
   362 00000628 B93A00                         mov cx,58         ; number of columns to color
   363 0000062B F3AB                           rep stosw         ; color desired number of columns    
   364                                  
   365 0000062D B8FE50                         mov ax,0x50fe     ; magenta background on black foreground
   366 00000630 BFD403                         mov di, 980       ; move di to location 
   367 00000633 B93C00                         mov cx,60         ; number of columns to color
   368 00000636 F3AB                           rep stosw         ; color desired number of columns
   369                                  
   370 00000638 B8FE50                         mov ax,0x50fe      ; magenta background on black foreground
   371 0000063B 26A3C800                       mov [es:200],ax    ; print the attribute
   372 0000063F 26A3CA00                       mov [es:202],ax    ; print the attribute
   373 00000643 26A3DC00                       mov [es:220],ax    ; print the attribute
   374 00000647 26A3DE00                       mov [es:222],ax    ; print the attribute
   375 0000064B 26A3EE00                       mov [es:238],ax    ; print the attribute
   376 0000064F 26A3F000                       mov [es:240],ax    ; print the attribute
   377 00000653 26A30201                       mov [es:258],ax    ; print the attribute
   378 00000657 26A30401                       mov [es:260],ax    ; print the attribute
   379 0000065B 26A31401                       mov [es:276],ax    ; print the attribute
   380 0000065F 26A31601                       mov [es:278],ax    ; print the attribute
   381 00000663 26A30802                       mov [es:520],ax    ; print the attribute
   382 00000667 26A35602                       mov [es:598],ax    ; print the attribute
   383 0000066B 26A39402                       mov [es:660],ax    ; print the attribute
   384 0000066F 26A39602                       mov [es:662],ax    ; print the attribute
   385 00000673 26A39E02                       mov [es:670],ax    ; print the attribute
   386 00000677 26A3A002                       mov [es:672],ax    ; print the attribute
   387 0000067B 26A3FE02                       mov [es:766],ax    ; print the attribute
   388 0000067F 26A30003                       mov [es:768],ax    ; print the attribute
   389 00000683 26A33403                       mov [es:820],ax    ; print the attribute
   390 00000687 26A3AA03                       mov [es:938],ax    ; print the attribute
   391                                  
   392 0000068B E8EEFE                       call RMsky                ; FUNCTION CALL:  PRINTING REAR VIEW MIRROR SKY
   393                                  
   394 0000068E BF800C                       mov di,3200               ; point di to starting location
   395 00000691 B8DB0F                       mov ax,0x0fdb             ; white color attribute
   396 00000694 B90200                       mov cx,2                  ; number of columns to color
   397                                      
   398                                  loopbdg1:
   399 00000697 57                           push di                   ; store di for later use
   400 00000698 51                           push cx                   ; store cx for later use
   401 00000699 B90400                       mov cx,4                  ; number of columns to color
   402 0000069C F3AB                         rep stosw                 ; color the desired number of columns
   403 0000069E 59                           pop cx                    ; restore cx
   404 0000069F 5F                           pop di                    ; restore di
   405 000006A0 81C7A000                     add di,160                ; update di
   406 000006A4 83E901                       sub cx,1                  ; decrement rows count
   407 000006A7 83F900                       cmp cx,0                  ; check if all rows colored
   408 000006AA 75EB                         jnz loopbdg1              ; keep coloring if false
   409                                  
   410 000006AC BF8A0C                       mov di,3210               ; point di to starting location
   411 000006AF B8DB01                       mov ax,0x01db             ; blue color attribute
   412 000006B2 B90200                       mov cx,2                  ; number of columns to color
   413                                      
   414                                  loopbdg2:
   415 000006B5 57                           push di                   ; store di for later use
   416 000006B6 51                           push cx                   ; store cx for later use
   417 000006B7 B90400                       mov cx,4                  ; number of columns to color
   418 000006BA F3AB                         rep stosw                 ; color the desired number of columns
   419 000006BC 59                           pop cx                    ; restore cx
   420 000006BD 5F                           pop di                    ; restore di
   421 000006BE 81C7A000                     add di,160                ; update di
   422 000006C2 83E901                       sub cx,1                  ; decrement rows count
   423 000006C5 83F900                       cmp cx,0                  ; check if all rows colored
   424 000006C8 75EB                         jnz loopbdg2              ; keep coloring if false
   425                                  
   426 000006CA BF940C                       mov di,3220               ; point di to starting location
   427 000006CD B8DB06                       mov ax,0x06db             ; brown color attribute
   428 000006D0 B90200                       mov cx,2                  ; number of columns to color
   429                                      
   430                                  loopbdg3:
   431 000006D3 57                           push di                   ; store di for later use
   432 000006D4 51                           push cx                   ; store cx for later use
   433 000006D5 B90400                       mov cx,4                  ; number of columns to color
   434 000006D8 F3AB                         rep stosw                 ; color the desired number of columns
   435 000006DA 59                           pop cx                    ; restore cx
   436 000006DB 5F                           pop di                    ; restore di
   437 000006DC 81C7A000                     add di,160                ; update di
   438 000006E0 83E901                       sub cx,1                  ; decrement rows count
   439 000006E3 83F900                       cmp cx,0                  ; check if all rows colored
   440 000006E6 75EB                         jnz loopbdg3              ; keep coloring if false
   441                                  
   442 000006E8 5F                             pop di
   443 000006E9 59                             pop cx
   444 000006EA 58                             pop ax
   445 000006EB 07                             pop es
   446                                  
   447 000006EC C3                             ret
   448                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   449                                  ;    PRINTING BACKGROUND B    ;
   450                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   451                                  prntbgB:
   452 000006ED 06                             push es
   453 000006EE 50                             push ax
   454 000006EF 51                             push cx
   455 000006F0 57                             push di
   456                                  
   457 000006F1 B800B8                         mov ax,0xb800
   458 000006F4 8EC0                           mov es,ax
   459                                  
   460 000006F6 FC                             cld               ; auto increment method
   461                                  
   462 000006F7 E869FE                         call prntsky      ; FUNCTION CALL:  PRINTING SKY
   463                                  
   464 000006FA BFCE03                         mov di,974        ; point di to location
   465 000006FD B90700                         mov cx,7          ; number of mountains to print
   466                                  
   467                                  prntMt:
   468 00000700 B80700                       mov ax,7            ; number of rows to color
   469 00000703 50                           push ax             ; push value on stack
   470 00000704 B80D00                       mov ax,13           ; number of columns to color
   471 00000707 50                           push ax             ; push value on stack
   472 00000708 B8F062                       mov ax,0x62f0       ; attribute and character
   473 0000070B 50                           push ax             ; push value on stack
   474 0000070C 57                           push di             ; push the di value on stack
   475 0000070D E898FE                       call mts            ; FUNCTION CALL:  PRINTING MOUNTAINS
   476 00000710 83C714                       add di,20           ; update di accordingly 
   477 00000713 E2EB                         loop prntMt         ; keep printing till cx is zero
   478                                  
   479 00000715 E864FE                       call RMsky          ; FUNCTION CALL:  PRINTING REAR VIEW MIRROR SKY
   480                                  
   481 00000718 BF220D                      mov di,3362          ; point di to location
   482 0000071B B90400                      mov cx,4             ; number of tree barks to print
   483 0000071E B8DB06                      mov ax,0x06db        ; brown attribute character
   484                                  
   485                                  loopBark:
   486 00000721 268905                      mov [es:di],ax       ; print attribute on screen
   487 00000724 83C708                      add di,8             ; update di accordingly
   488 00000727 E2F8                        loop loopBark        ; keep repeating till cx is zero
   489                                  
   490 00000729 BF800C                      mov di,3200          ; point di to  location
   491 0000072C B8DB0A                      mov ax,0x0adb        ; light green attribute character
   492 0000072F B91000                      mov cx,16            ; number of columns to color 
   493 00000732 F3AB                        rep stosw            ; color the desired number of columns
   494                                  
   495 00000734 BFE20B                      mov di,3042          ; point di to  location
   496 00000737 B90400                      mov cx,4             ; number of tree tops to print
   497                                  
   498                                   loopTreeTop:
   499 0000073A 51                          push cx              ; store cx for later use
   500 0000073B B90200                      mov cx,2             ; number of columns to color
   501 0000073E F3AB                        rep stosw            ; color the desired number of columns
   502 00000740 83C704                      add di,4             ; update di accordingly
   503 00000743 59                          pop cx               ; restore cx
   504 00000744 E2F4                        loop loopTreeTop     ; keep repeating till cx is zero
   505                                  
   506 00000746 5F                             pop di
   507 00000747 59                             pop cx
   508 00000748 58                             pop ax
   509 00000749 07                             pop es
   510                                  
   511 0000074A C3                             ret
   512                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   513                                  ;    PRINTING BACKGROUND C    ;
   514                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   515                                  prntbgC:
   516 0000074B 06                             push es
   517 0000074C 50                             push ax
   518 0000074D 51                             push cx
   519 0000074E 57                             push di
   520                                  
   521 0000074F B800B8                         mov ax,0xb800
   522 00000752 8EC0                           mov es,ax
   523                                  
   524 00000754 FC                             cld               ; auto increment method
   525                                  
   526 00000755 E80BFE                         call prntsky      ; FUNCTION CALL:  PRINTING SKY
   527                                  
   528 00000758 B8C413                         mov ax,0x13c4     ; line attribute on blue background
   529 0000075B B9F000                         mov cx,240        ; number of columns to color
   530 0000075E BF8002                         mov di,640        ; point di to location
   531 00000761 F3AB                           rep stosw         ; color desired number of rows
   532                                  
   533 00000763 B8DB0E                         mov ax,0x0edb     ; yellow attribute character
   534 00000766 BF3E03                         mov di,830        ; point di to location
   535 00000769 B93400                         mov cx,52         ; number of columns to color
   536 0000076C F3AB                           rep stosw         ; color desired number of rows
   537                                  
   538 0000076E BFDA03                         mov di,986        ; point di to location
   539 00000771 B93800                         mov cx,56         ; number of columns to color
   540 00000774 F3AB                           rep stosw         ; color desired number of rows
   541                                        
   542 00000776 31DB                           xor bx,bx         ; set bx to 0
   543 00000778 BF6801                         mov di,360        ; point di to location
   544 0000077B B8DB06                         mov ax,0x06db     ; brown attribute character
   545                                  
   546                                  tree1:    
   547 0000077E B90200                         mov cx,2          ; number of columns to color
   548 00000781 81C79C00                       add di,156        ; update di accordingly
   549 00000785 F3AB                           rep stosw         ; color desired number of rows
   550 00000787 43                             inc bx            ; increment bx
   551 00000788 83FB03                         cmp bx,3          ; check if desired rows colored
   552 0000078B 75F1                           jne tree1         ; keep coloring if false
   553                                  
   554 0000078D 31DB                           xor bx,bx         ; set bx to 0
   555 0000078F BF8601                         mov di,390        ; point di to location
   556                                  
   557                                  tree2: 
   558 00000792 B90200                         mov cx,2          ; number of columns to color
   559 00000795 81C79C00                       add di,156        ; update di accordingly
   560 00000799 F3AB                           rep stosw         ; color desired number of rows
   561 0000079B 43                             inc bx            ; increment bx
   562 0000079C 83FB03                         cmp bx,3          ; check if desired rows colored
   563 0000079F 75F1                           jne tree2         ; keep coloring if false
   564                                      
   565 000007A1 31DB                           xor bx,bx         ; set bx to 0
   566 000007A3 BFA401                        mov di,420
   567                                  
   568                                  tree3:
   569 000007A6 B90200                         mov cx,2          ; number of columns to color
   570 000007A9 81C79C00                       add di,156        ; update di accordingly
   571 000007AD F3AB                           rep stosw         ; color desired number of rows
   572 000007AF 43                             inc bx            ; increment bx
   573 000007B0 83FB03                         cmp bx,3          ; check if desired rows colored
   574 000007B3 75F1                           jne tree3         ; keep coloring if false
   575                                  
   576                                  
   577 000007B5 31DB                           xor bx,bx         ; set bx to 0
   578 000007B7 BFC201                         mov di,450
   579                                  
   580                                  tree4:
   581 000007BA B90200                         mov cx,2          ; number of columns to color
   582 000007BD 81C79C00                       add di,156        ; update di accordingly
   583 000007C1 F3AB                           rep stosw         ; color desired number of rows
   584 000007C3 43                             inc bx            ; increment bx
   585 000007C4 83FB03                         cmp bx,3          ; check if desired rows colored
   586 000007C7 75F1                           jne tree4         ; keep coloring if false
   587                                  
   588                                  
   589 000007C9 BF2400                       mov di,36           ; point di to location
   590 000007CC B8DB02                       mov ax,0x02db       ; green attribute character
   591 000007CF 268905                       mov [es:di],ax      ; print attribute on screen
   592 000007D2 26894502                     mov [es:di+2],ax    ; print attribute on screen
   593 000007D6 2689451E                     mov [es:di+30],ax   ; print attribute on screen
   594 000007DA 26894520                     mov [es:di+32],ax   ; print attribute on screen
   595 000007DE 2689453C                     mov [es:di+60],ax   ; print attribute on screen
   596 000007E2 2689453E                     mov [es:di+62],ax   ; print attribute on screen
   597 000007E6 2689455A                     mov [es:di+90],ax   ; print attribute on screen
   598 000007EA 2689455C                     mov [es:di+92],ax   ; print attribute on screen
   599                                  
   600 000007EE B90600                          mov cx,6         ; number of columns to color
   601 000007F1 BFC000                          mov di,192       ; point di to location
   602 000007F4 F3AB                            rep stosw        ; color desired number of columns
   603                                  
   604 000007F6 B90600                          mov cx,6         ; number of columns to color
   605 000007F9 BFDE00                          mov di,222       ; point di to location
   606 000007FC F3AB                            rep stosw        ; color desired number of columns
   607                                  
   608 000007FE B90600                          mov cx,6         ; number of columns to color
   609 00000801 BFFC00                          mov di,252       ; point di to location
   610 00000804 F3AB                            rep stosw        ; color desired number of columns
   611                                  
   612 00000806 B90600                          mov cx,6         ; number of columns to color
   613 00000809 BF1A01                          mov di,282       ; point di to location
   614 0000080C F3AB                            rep stosw        ; color desired number of columns
   615                                  
   616 0000080E B90A00                          mov cx,10        ; number of columns to color
   617 00000811 BF5C01                          mov di,348       ; point di to location
   618 00000814 F3AB                            rep stosw        ; color desired number of columns
   619                                  
   620 00000816 B90A00                          mov cx,10        ; number of columns to color
   621 00000819 BF7A01                          mov di,378       ; point di to location
   622 0000081C F3AB                            rep stosw        ; color desired number of columns
   623                                  
   624 0000081E B90A00                          mov cx,10        ; number of columns to color
   625 00000821 BF9801                          mov di,408       ; point di to location
   626 00000824 F3AB                            rep stosw        ; color desired number of columns
   627                                  
   628 00000826 B90A00                          mov cx,10        ; number of columns to color
   629 00000829 BFB601                          mov di,438       ; point di to location
   630 0000082C F3AB                            rep stosw        ; color desired number of columns
   631                                  
   632 0000082E B90E00                          mov cx,14        ; number of columns to color
   633 00000831 BFF801                          mov di,504       ; point di to location
   634 00000834 F3AB                            rep stosw        ; color desired number of columns
   635                                  
   636 00000836 B90E00                          mov cx,14        ; number of columns to color
   637 00000839 BF1602                          mov di,534       ; point di to location
   638 0000083C F3AB                            rep stosw        ; color desired number of columns
   639                                  
   640 0000083E B90E00                          mov cx,14        ; number of columns to color
   641 00000841 BF3402                          mov di,564       ; point di to location
   642 00000844 F3AB                            rep stosw        ; color desired number of columns
   643                                  
   644 00000846 B90E00                          mov cx,14        ; number of columns to color
   645 00000849 BF5202                          mov di,594       ; point di to location
   646 0000084C F3AB                            rep stosw        ; color desired number of columns
   647                                  
   648 0000084E E82BFD                       call RMsky          ; FUNCTION CALL:  PRINTING REAR VIEW MIRROR SKY
   649                                  
   650 00000851 BF220D                       mov di,3362         ; point di to location
   651 00000854 B90500                       mov cx,5            ; number of columns to color
   652 00000857 B8F062                       mov ax,0x62f0       ; green on brown attribute character
   653 0000085A F3AB                         rep stosw           ; color desired number of columns
   654 0000085C 81EFA800                     sub di,168          ; update di accordingly
   655 00000860 B90300                       mov cx,3            ; number of columns to color
   656 00000863 F3AB                         rep stosw           ; color desired number of columns
   657 00000865 81EFA400                     sub di,164          ; update di accordingly          
   658 00000869 B90100                       mov cx,1            ; number of columns to color
   659 0000086C F3AB                         rep stosw           ; color desired number of columns
   660                                  
   661 0000086E BF2C0D                       mov di,3372         ; point di to location
   662 00000871 B90500                       mov cx,5            ; number of columns to color
   663 00000874 F3AB                         rep stosw           ; color desired number of columns
   664 00000876 81EFA800                     sub di,168          ; update di accordingly
   665 0000087A B90300                       mov cx,3            ; number of columns to color
   666 0000087D F3AB                         rep stosw           ; color desired number of columns
   667 0000087F 81EFA400                     sub di,164          ; update di accordingly
   668 00000883 B90100                       mov cx,1            ; number of columns to color
   669 00000886 F3AB                         rep stosw           ; color desired number of columns
   670                                  
   671 00000888 BF360D                       mov di,3382         ; point di to location
   672 0000088B B90500                       mov cx,5            ; number of columns to color
   673 0000088E F3AB                         rep stosw           ; color desired number of columns
   674 00000890 81EFA800                     sub di,168          ; update di accordingly
   675 00000894 B90300                       mov cx,3            ; number of columns to color
   676 00000897 F3AB                         rep stosw           ; color desired number of columns
   677 00000899 81EFA400                     sub di,164          ; update di accordingly
   678 0000089D B90100                       mov cx,1            ; number of columns to color
   679 000008A0 F3AB                         rep stosw           ; color desired number of columns
   680                                  
   681 000008A2 5F                             pop di
   682 000008A3 59                             pop cx
   683 000008A4 58                             pop ax
   684 000008A5 07                             pop es
   685                                  
   686 000008A6 C3                             ret
   687                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   688                                  ;    PRINTING BACKGROUND D    ;
   689                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   690                                  prntbgD:
   691 000008A7 06                             push es
   692 000008A8 50                             push ax
   693 000008A9 51                             push cx
   694 000008AA 57                             push di
   695 000008AB 53                             push bx
   696                                  
   697 000008AC B800B8                         mov ax,0xb800
   698 000008AF 8EC0                           mov es,ax
   699                                  
   700 000008B1 FC                             cld               ; auto increment method
   701                                  
   702 000008B2 E8AEFC                         call prntsky      ; FUNCTION CALL:  PRINTING SKY
   703                                  
   704 000008B5 31DB                           xor bx,bx         ; set bx to 0
   705 000008B7 BF1600                         mov di, 22        ; point di to location 
   706 000008BA B90E00                         mov cx,14         ; number of columns to color
   707 000008BD B8DB04                         mov ax,0x04db     ; red attribute character
   708                                  
   709                                  build1:    
   710 000008C0 F3AB                           rep stosw         ; color desired number of columns
   711 000008C2 83C10E                         add cx,14         ; reset cx to 14
   712 000008C5 81C78400                       add di,132        ; update di accordingly
   713 000008C9 43                             inc bx            ; increment bx
   714 000008CA 83FB07                         cmp bx,7          ; check if desired number of rows colored
   715 000008CD 75F1                           jne build1        ; keep coloring if false
   716                                   
   717 000008CF 31DB                           xor bx,bx         ; set bx to 0
   718 000008D1 BFBA00                         mov di,186        ; point di to location
   719 000008D4 B8DB00                         mov ax,0x00db     ; black attribute character
   720                                    
   721                                  mirbuild1:
   722 000008D7 268905                         mov [es:di],ax    ; print mirror
   723 000008DA 26894506                       mov [es:di+6],ax  ; print mirror
   724 000008DE 2689450C                       mov [es:di+12],ax ; print mirror
   725 000008E2 26894512                       mov [es:di+18],ax ; print mirrorx
   726 000008E6 81C74001                       add di,320        ; update di accordingly
   727 000008EA 43                             inc bx            ; increment bx
   728 000008EB 83FB03                         cmp bx,3          ; check if rows colored
   729 000008EE 75E7                           jne mirbuild1     ; keep coloring if false
   730                                   
   731 000008F0 BF7601                         mov di,374        ; point di to location 
   732 000008F3 B90A00                         mov cx,10         ; number of columns to color
   733 000008F6 31DB                           xor bx,bx         ; set bx to 0
   734 000008F8 B8DD10                         mov ax,0x10dd     ; blue attribute character
   735                                  
   736                                  build2:
   737 000008FB F3AB                           rep stosw         ; color desired number of columns
   738 000008FD 83C10A                         add cx,10         ; reset cx to 10
   739 00000900 81C72C01                       add di,300        ; update di accordingly
   740 00000904 43                             inc bx            ; increment bx
   741 00000905 83FB03                         cmp bx,3          ; check if all rows colored
   742 00000908 75F1                           jne build2        ; keep coloring if false
   743                                  
   744 0000090A BF1602                         mov di,534        ; point di to location 
   745 0000090D B90A00                         mov cx,10         ; number of columns to color
   746 00000910 31DB                           xor bx,bx         ; set bx to 0
   747 00000912 B8DE10                         mov ax,0x10de     ; blue attribute character
   748                                  
   749                                  build21:
   750 00000915 F3AB                           rep stosw         ; color desired number of columns
   751 00000917 83C10A                         add cx,10         ; reset cx to 10
   752 0000091A 81C72C01                       add di,300        ; update di accordingly
   753 0000091E 43                             inc bx            ; increment bx
   754 0000091F 83FB02                         cmp bx,2          ; check if all rows colored
   755 00000922 75F1                           jne build21       ; keep coloring if false
   756                                  
   757 00000924 31DB                           xor bx,bx         ; set bx to 0
   758 00000926 BF9E01                         mov di, 414       ; point di to location 
   759 00000929 B90400                         mov cx,4          ; number of columns to color
   760 0000092C B8DB06                         mov ax,0x06db     ; brown attribute character
   761                                  
   762                                  build3.1.1:
   763 0000092F F3AB                           rep stosw         ; color desired number of columns
   764 00000931 83C104                         add cx,4          ; reset cx to 4
   765 00000934 81C79800                       add di,152        ; update di accordingly
   766 00000938 43                             inc bx            ; increment bx
   767 00000939 83FB05                         cmp bx,5          ; check if all rows colored
   768 0000093C 75F1                           jne build3.1.1    ; keep coloring if false
   769                                  
   770 0000093E BF2E02                         mov di, 558       ; point di to location 
   771 00000941 B90800                         mov cx,8          ; number of columns to color
   772 00000944 31DB                           xor bx,bx         ; set bx to 0
   773 00000946 B8CD6F                         mov ax,0x6fcd     ; brown attribute character
   774                                  
   775                                  build31:
   776 00000949 F3AB                           rep stosw         ; color desired number of columns
   777 0000094B 83C108                         add cx,8          ; reset cx to 8
   778 0000094E 81C79000                       add di,144        ; update di accordingly
   779 00000952 43                             inc bx            ; increment bx
   780 00000953 83FB04                         cmp bx,4          ; check if all rows colored
   781 00000956 75F1                           jne build31       ; keep coloring if false
   782                                  
   783                                  
   784 00000958 31DB                           xor bx,bx         ; set bx to 0
   785 0000095A BF4602                         mov di, 582       ; point di to location 
   786 0000095D B90800                         mov cx,8          ; number of columns to color
   787 00000960 B8CD6F                         mov ax,0x6fcd     ; brown attribute character
   788                                  build32:
   789 00000963 F3AB                           rep stosw         ; color desired number of columns
   790 00000965 83C108                         add cx,8          ; reset cx to 8
   791 00000968 81C79000                       add di,144        ; update di accordingly
   792 0000096C 43                             inc bx            ; increment bx
   793 0000096D 83FB04                         cmp bx,4          ; check if all rows colored
   794 00000970 75F1                           jne build32       ; keep coloring if false
   795                                  
   796                                         
   797 00000972 31DB                           xor bx,bx         ; set bx to 0
   798 00000974 BFA001                         mov di, 416       ; point di to location blue mirrors
   799 00000977 B90200                         mov cx,2          ; number of columns to color
   800 0000097A B8FE63                         mov ax,0x63fe     ; cyan attribute character
   801                                  
   802                                  build33:
   803 0000097D F3AB                           rep stosw          ; color desired number of columns
   804 0000097F 83C102                         add cx,2           ; reset cx to 2
   805 00000982 81C79C00                       add di,156         ; update di accordingly
   806 00000986 43                             inc bx             ; increment bx
   807 00000987 83FB05                         cmp bx,5           ; check if all rows colored
   808 0000098A 75F1                           jne build33        ; keep coloring if false
   809                                  
   810                                  
   811 0000098C BF2004                         mov di,1056        ; point di to location
   812 0000098F B8DB63                         mov ax,0x63db      ; cyan attribute character
   813 00000992 268905                         mov [es:di],ax     ; print character on screen
   814 00000995 26894502                       mov [es:di+2],ax   ; print character on screen
   815                                  
   816 00000999 BF3202                         mov di,562         ; point di to location
   817 0000099C B8CD63                         mov ax, 0x63cd     ; cyan attribute character
   818 0000099F 268905                         mov [es:di],ax     ; print character on screen
   819 000009A2 26894502                       mov [es:di+2],ax   ; print character on screen
   820 000009A6 2689451C                       mov [es:di+28],ax  ; print character on screen
   821 000009AA 2689451E                       mov [es:di+30],ax  ; print character on screen 
   822 000009AE 268985A800                     mov [es:di+168],ax ; print character on screen
   823 000009B3 268985AA00                     mov [es:di+170],ax ; print character on screen
   824 000009B8 268985B600                     mov [es:di+182],ax ; print character on screen
   825 000009BD 268985B800                     mov [es:di+184],ax ; print character on screen
   826 000009C2 2689854001                     mov [es:di+320],ax ; print character on screen
   827 000009C7 2689854201                     mov [es:di+322],ax ; print character on screen
   828 000009CC 2689855E01                     mov [es:di+350],ax ; print character on screen
   829 000009D1 2689856001                     mov [es:di+352],ax ; print character on screen
   830                                  
   831 000009D6 BF5A02                         mov di, 602        ; point di to location 
   832 000009D9 B91200                         mov cx,18          ; number of columns to color
   833 000009DC 31DB                           xor bx,bx          ; set bx to 0
   834                                  
   835                                  build4:    
   836 000009DE B8DB07                         mov ax,0x07db      ; magenta background on black foreground
   837 000009E1 F3AB                           rep stosw          ; color desired number of columns
   838 000009E3 83C112                         add cx,18          ; reset cx to 18
   839 000009E6 83C77C                         add di,124         ; update di accordingly
   840 000009E9 43                             inc bx             ; increment bx
   841 000009EA 83FB04                         cmp bx,4           ; check if all rows colored
   842 000009ED 75EF                           jne build4         ; keep coloring if false
   843                                   
   844 000009EF 31DB                           xor bx,bx          ; set bx to 0
   845 000009F1 BF5E02                         mov di, 606        ; point di to location 
   846 000009F4 B8BA70                         mov ax,0x70ba      ; grey and black attribute character
   847                                  
   848                                  mirbuild4:
   849 000009F7 268905                     	mov [es:di],ax    ; print attribute
   850 000009FA 26894502                        mov [es:di+2],ax  ; print attribute
   851 000009FE 26894506                        mov [es:di+6],ax  ; print attribute
   852 00000A02 26894508                	mov [es:di+8],ax  ; print attribute
   853 00000A06 2689450C                       	mov [es:di+12],ax ; print attribute
   854 00000A0A 2689450E                        mov [es:di+14],ax ; print attribute
   855 00000A0E 26894512                  	mov [es:di+18],ax ; print attribute
   856 00000A12 26894514                        mov [es:di+20],ax ; print attribute
   857 00000A16 26894518                  	mov [es:di+24],ax ; print attribute
   858 00000A1A 2689451A                        mov [es:di+26],ax ; print attribute
   859 00000A1E 81C7A000                        add di,160        ; update di accordingly
   860 00000A22 43                              inc bx            ; increment bx
   861 00000A23 83FB04                          cmp bx,4          ; check if all rows colored
   862 00000A26 75CF                            jne mirbuild4     ; keep coloring if false
   863                                  
   864 00000A28 E851FB                         call RMsky         ; FUNCTION CALL:  PRINTING REAR VIEW MIRROR SKY
   865                                  
   866                                        
   867 00000A2B B82D13                        mov ax,0x132D       ; blue attribute with cyan line character
   868 00000A2E BF800C                        mov di,3200         ; point di to location
   869 00000A31 B91000                        mov cx,16           ; number of columns to color
   870 00000A34 F3AB                          rep stosw           ; color desired number of columns
   871                                  
   872 00000A36 BF200D                        mov di,3360         ; point di to location
   873 00000A39 B91000                        mov cx,16           ; number of columns to color
   874 00000A3C F3AB                          rep stosw           ; color desired number of columns
   875                                  
   876 00000A3E B8DC1E                        mov ax,0x1edc       ; blue attribute with yellow bar character
   877 00000A41 BF860C                        mov di,3206         ; point di to location  
   878 00000A44 B90A00                        mov cx,10           ; number of columns to color
   879 00000A47 F3AB                          rep stosw           ; color desired number of columns
   880                                  
   881 00000A49 B8DF1E                        mov ax,0x1edf       ; blue attribute with yellow bar character
   882 00000A4C BF260D                        mov di,3366         ; point di to location 
   883 00000A4F B90A00                        mov cx,10           ; number of columns to color
   884 00000A52 F3AB                          rep stosw           ; color desired number of columns
   885                                  
   886 00000A54 26C7068A0CDB06                mov word[es:3210],0x06db ; print tree bark at location
   887 00000A5B 26C706E80BDB02                mov word[es:3048],0x02db ; print tree leaves
   888 00000A62 26C706EA0BDB02                mov word[es:3050],0x02db ; print tree leaves
   889 00000A69 26C706EC0BDB02                mov word[es:3052],0x02db ; print tree leaves
   890                                  
   891 00000A70 26C706940CDB06                mov word[es:3220],0x06db ; print tree bark at location
   892 00000A77 26C706F20BDB02                mov word[es:3058],0x02db ; print tree leaves
   893 00000A7E 26C706F40BDB02                mov word[es:3060],0x02db ; print tree leaves
   894 00000A85 26C706F60BDB02                mov word[es:3062],0x02db ; print tree leaves
   895                                  
   896 00000A8C 5B                             pop bx
   897 00000A8D 5F                             pop di
   898 00000A8E 59                             pop cx
   899 00000A8F 58                             pop ax
   900 00000A90 07                             pop es
   901                                  
   902 00000A91 C3                             ret
   903                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   904                                  ; PRINTING BACKGROUND CRASHED ;
   905                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   906                                  prntbgCrash:
   907 00000A92 55                             push bp
   908 00000A93 89E5                           mov  bp,sp
   909 00000A95 83ED02                         sub  bp,2
   910 00000A98 56                             push si
   911 00000A99 06                             push es
   912 00000A9A 50                             push ax
   913 00000A9B 53                             push bx
   914 00000A9C 51                             push cx
   915 00000A9D 52                             push dx
   916 00000A9E 57                             push di
   917                                  
   918 00000A9F B800B8                         mov ax,0xb800
   919 00000AA2 8EC0                           mov es,ax
   920                                  
   921 00000AA4 FC                             cld
   922                                  
   923 00000AA5 31FF                           xor di,di
   924 00000AA7 B8DB0B                         mov ax,0x0bdb
   925 00000AAA B93002                         mov cx,560
   926 00000AAD F3AB                           rep stosw
   927                                  
   928 00000AAF BF6004                         mov di,1120
   929 00000AB2 B8DB02                         mov ax,0x02db
   930 00000AB5 B92003                         mov cx,800
   931 00000AB8 F3AB                           rep stosw
   932                                  
   933 00000ABA BB0000                     mov bx,0
   934 00000ABD BF0005                     mov di,1280
   935 00000AC0 B8B208                     mov ax,0x08b2
   936                                  
   937                                  rocks1.1:	
   938 00000AC3 43                           inc bx
   939 00000AC4 268905                       mov [es:di],ax
   940 00000AC7 26894502                     mov [es:di+2],ax
   941 00000ACB 26894504                     mov [es:di+4],ax
   942 00000ACF 26894506                     mov [es:di+6],ax
   943 00000AD3 26898560FF                   mov [es:di-160],ax
   944 00000AD8 26898562FF                   mov [es:di-158],ax
   945 00000ADD 26898564FF                   mov [es:di-156],ax
   946 00000AE2 26898566FF                   mov [es:di-154],ax
   947 00000AE7 83C714                       add di,20
   948 00000AEA 83FB08                       cmp bx,8
   949 00000AED 75D4                         jne rocks1.1
   950                                  
   951 00000AEF BB0000                     mov bx,0
   952 00000AF2 BF0A05                     mov di,1290
   953 00000AF5 B8B108                     mov ax,0x08b1
   954                                  
   955                                  rocks1.2:
   956 00000AF8 43                           inc bx
   957 00000AF9 268905                       mov [es:di],ax
   958 00000AFC 26894502                     mov [es:di+2],ax
   959 00000B00 26894504                     mov [es:di+4],ax
   960 00000B04 26894506                     mov [es:di+6],ax
   961 00000B08 26898560FF                   mov [es:di-160],ax
   962 00000B0D 26898562FF                   mov [es:di-158],ax
   963 00000B12 26898564FF                   mov [es:di-156],ax
   964 00000B17 26898566FF                   mov [es:di-154],ax
   965 00000B1C 83C714                       add di,20
   966 00000B1F 83FB08                       cmp bx,8
   967 00000B22 75D4                         jne rocks1.2
   968                                  
   969                                  
   970 00000B24 BB0000                     mov bx,0
   971 00000B27 BF000A                     mov di,2560
   972 00000B2A B8B208                     mov ax,0x08b2
   973                                  
   974                                  rocks1.3:	
   975 00000B2D 43                           inc bx
   976 00000B2E 268905                       mov [es:di],ax
   977 00000B31 26894502                     mov [es:di+2],ax
   978 00000B35 26894504                     mov [es:di+4],ax
   979 00000B39 26894506                     mov [es:di+6],ax
   980 00000B3D 26898560FF                   mov [es:di-160],ax
   981 00000B42 26898562FF                   mov [es:di-158],ax
   982 00000B47 26898564FF                   mov [es:di-156],ax
   983 00000B4C 26898566FF                   mov [es:di-154],ax
   984 00000B51 83C714                       add di,20
   985 00000B54 83FB08                       cmp bx,8
   986 00000B57 75D4                         jne rocks1.3
   987                                  
   988 00000B59 BB0000                     mov bx,0
   989 00000B5C BF0A0A                     mov di,2570
   990 00000B5F B8B108                     mov ax,0x08b1
   991                                  
   992                                  rocks1.4:
   993 00000B62 43                           inc bx
   994 00000B63 268905                       mov [es:di],ax
   995 00000B66 26894502                     mov [es:di+2],ax
   996 00000B6A 26894504                     mov [es:di+4],ax
   997 00000B6E 26894506                     mov [es:di+6],ax
   998 00000B72 26898560FF                   mov [es:di-160],ax
   999 00000B77 26898562FF                   mov [es:di-158],ax
  1000 00000B7C 26898564FF                   mov [es:di-156],ax
  1001 00000B81 26898566FF                   mov [es:di-154],ax
  1002 00000B86 83C714                       add di,20
  1003 00000B89 83FB08                       cmp bx,8
  1004 00000B8C 75D4                         jne rocks1.4
  1005                                  
  1006 00000B8E 31DB                           xor bx,bx 
  1007 00000B90 BF3403                         mov di,820
  1008 00000B93 B8DB06                         mov ax,0x06db
  1009                                  
  1010                                  tree1.1:    
  1011 00000B96 B90200                         mov cx,2
  1012 00000B99 81C79C00                       add di,156
  1013 00000B9D F3AB                           rep stosw
  1014 00000B9F 43                             inc bx
  1015 00000BA0 83FB07                         cmp bx,7
  1016 00000BA3 75F1                           jne tree1.1
  1017                                  
  1018 00000BA5 31DB                           xor bx,bx
  1019 00000BA7 BFAE02                         mov di,686
  1020                                  
  1021                                  tree2.2:
  1022 00000BAA B90200                         mov cx,2 
  1023 00000BAD 81C79C00                       add di,156
  1024 00000BB1 F3AB                           rep stosw
  1025 00000BB3 43                             inc bx
  1026 00000BB4 83FB06                         cmp bx,6
  1027 00000BB7 75F1                           jne tree2.2
  1028                                  
  1029 00000BB9 31DB                           xor bx,bx
  1030 00000BBB BF6803                         mov di,872
  1031                                  
  1032                                  tree3.3:
  1033 00000BBE B90200                         mov cx,2
  1034 00000BC1 81C79C00                       add di,156
  1035 00000BC5 F3AB                           rep stosw 
  1036 00000BC7 43                             inc bx
  1037 00000BC8 83FB07                         cmp bx,7
  1038 00000BCB 75F1                           jne tree3.3
  1039                                  
  1040 00000BCD 31DB                           xor bx,bx
  1041 00000BCF BF8203                         mov di,898
  1042                                  
  1043                                  tree4.4:
  1044 00000BD2 B90200                         mov cx,2
  1045 00000BD5 81C79C00                       add di,156
  1046 00000BD9 F3AB                           rep stosw
  1047 00000BDB 43                             inc bx
  1048 00000BDC 83FB07                         cmp bx,7
  1049 00000BDF 75F1                           jne tree4.4
  1050                                  
  1051 00000BE1 31DB                           xor bx,bx
  1052 00000BE3 BFFC02                         mov di,764
  1053                                  
  1054                                  tree5.5:
  1055 00000BE6 B90200                         mov cx,2
  1056 00000BE9 81C79C00                       add di,156
  1057 00000BED F3AB                           rep stosw
  1058 00000BEF 43                             inc bx
  1059 00000BF0 83FB07                         cmp bx,7
  1060 00000BF3 75F1                           jne tree5.5
  1061                                  
  1062 00000BF5 31DB                           xor bx,bx
  1063 00000BF7 BFB603                         mov di,950
  1064                                  
  1065                                  tree6.6:
  1066 00000BFA B90200                         mov cx,2
  1067 00000BFD 81C79C00                       add di,156
  1068 00000C01 F3AB                           rep stosw
  1069 00000C03 43                             inc bx
  1070 00000C04 83FB07                         cmp bx,7
  1071 00000C07 75F1                           jne tree6.6
  1072                                  
  1073 00000C09 BF5001                         mov di,336
  1074 00000C0C B8DB02                         mov ax,0x02db
  1075 00000C0F 268905                         mov[es:di],ax
  1076 00000C12 26894502                       mov[es:di+2],ax
  1077 00000C16 26894534                       mov[es:di+52],ax
  1078 00000C1A 26894536                       mov[es:di+54],ax
  1079 00000C1E 2689454E                       mov[es:di+78],ax
  1080 00000C22 26894550                       mov[es:di+80],ax
  1081                                  
  1082 00000C26 2689858200                     mov[es:di+130],ax
  1083 00000C2B 2689858400                     mov[es:di+132],ax
  1084                                  
  1085 00000C30 BFEE01                         mov di,494
  1086 00000C33 B8DB02                         mov ax,0x02db
  1087 00000C36 B90400                         mov cx,4
  1088 00000C39 F3AB                           rep stosw
  1089                                  
  1090 00000C3B BF2202                         mov di,546
  1091 00000C3E B90400                         mov cx,4
  1092 00000C41 F3AB                           rep stosw
  1093                                  
  1094 00000C43 BF3C02                         mov di,572  
  1095 00000C46 B90400                         mov cx,4
  1096 00000C49 F3AB                           rep stosw
  1097                                  
  1098 00000C4B BF7002                         mov di,624
  1099 00000C4E B90400                         mov cx,4
  1100 00000C51 F3AB                           rep stosw
  1101                                  
  1102 00000C53 BF8A02                         mov di,650
  1103 00000C56 B90800                         mov cx,8 
  1104 00000C59 F3AB                           rep stosw
  1105                                  
  1106 00000C5B BFBE02                         mov di,702
  1107 00000C5E B90800                         mov cx,8
  1108 00000C61 F3AB                           rep stosw
  1109                                  
  1110 00000C63 BFD802                         mov di,728
  1111 00000C66 B90800                         mov cx,8
  1112 00000C69 F3AB                           rep stosw
  1113                                  
  1114 00000C6B BF0C03                         mov di,780
  1115 00000C6E B90800                         mov cx,8
  1116 00000C71 F3AB                           rep stosw
  1117                                  
  1118 00000C73 BF2603                         mov di,806
  1119 00000C76 B90C00                         mov cx,12
  1120 00000C79 F3AB                           rep stosw
  1121                                  
  1122 00000C7B BF5A03                         mov di,858
  1123 00000C7E B90C00                         mov cx,12
  1124 00000C81 F3AB                           rep stosw
  1125                                  
  1126 00000C83 BF7403                         mov di,884
  1127 00000C86 B90C00                         mov cx,12
  1128 00000C89 F3AB                           rep stosw
  1129                                  
  1130 00000C8B BFA803                         mov di,936
  1131 00000C8E B90C00                         mov cx,12
  1132 00000C91 F3AB                           rep stosw
  1133                                  
  1134 00000C93 BFCA00                         mov di,202
  1135 00000C96 B8DB02                         mov ax,0x02db
  1136 00000C99 268905                         mov[es:di],ax
  1137 00000C9C 26894502                       mov[es:di+2],ax
  1138                                  
  1139 00000CA0 2689454E                       mov[es:di+78],ax
  1140 00000CA4 26894550                       mov[es:di+80],ax
  1141                                  
  1142 00000CA8 BF6801                         mov di,360
  1143 00000CAB B90400                         mov cx,4
  1144 00000CAE F3AB                           rep stosw
  1145                                  
  1146 00000CB0 BFB601                         mov di,438
  1147 00000CB3 B90400                         mov cx,4  
  1148 00000CB6 F3AB                           rep stosw
  1149                                    
  1150 00000CB8 BF0402                         mov di,516
  1151 00000CBB B90800                         mov cx,8
  1152 00000CBE F3AB                           rep stosw
  1153                                  
  1154 00000CC0 BF5202                         mov di,594
  1155 00000CC3 B90800                         mov cx,8
  1156 00000CC6 F3AB                           rep stosw
  1157                                  
  1158 00000CC8 BFA002                         mov di,672
  1159 00000CCB B90C00                         mov cx,12
  1160 00000CCE F3AB                           rep stosw
  1161                                  
  1162 00000CD0 BFEE02                         mov di,750
  1163 00000CD3 B90800                         mov cx,8
  1164 00000CD6 F3AB                           rep stosw
  1165                                  
  1166 00000CD8 C746FE2800                     mov word[bp-2],40
  1167 00000CDD BE4600                         mov si,70
  1168 00000CE0 BF6009                         mov di,2400
  1169                                  
  1170                                  
  1171 00000CE3 BF4408                       mov di,2116
  1172 00000CE6 B8B202                       mov ax,0x02b2
  1173                                  
  1174 00000CE9 268945FE                     mov [es:di-2],ax
  1175 00000CED 268945FC                     mov [es:di-4],ax
  1176 00000CF1 268905                       mov [es:di],ax
  1177 00000CF4 26894502                     mov [es:di+2],ax
  1178 00000CF8 26894504                     mov [es:di+4],ax
  1179 00000CFC 26894506                     mov [es:di+6],ax
  1180 00000D00 26894508                     mov [es:di+8],ax
  1181 00000D04 2689450A                     mov [es:di+10],ax
  1182 00000D08 26898560FF                   mov [es:di-160],ax
  1183 00000D0D 26898562FF                   mov [es:di-158],ax
  1184 00000D12 26898564FF                   mov [es:di-156],ax
  1185 00000D17 26898566FF                   mov [es:di-154],ax
  1186                                  
  1187 00000D1C BFD007                       mov di,2000
  1188                                  
  1189 00000D1F 268945FE                     mov [es:di-2],ax
  1190 00000D23 268945FC                     mov [es:di-4],ax     
  1191 00000D27 268905                       mov [es:di],ax
  1192 00000D2A 26894502                     mov [es:di+2],ax
  1193 00000D2E 26894504                     mov [es:di+4],ax
  1194 00000D32 26894506                     mov [es:di+6],ax
  1195 00000D36 26894508                     mov [es:di+8],ax
  1196 00000D3A 2689450A                     mov [es:di+10],ax
  1197 00000D3E 26898560FF                   mov [es:di-160],ax
  1198 00000D43 26898562FF                   mov [es:di-158],ax
  1199 00000D48 26898564FF                   mov [es:di-156],ax
  1200 00000D4D 26898566FF                   mov [es:di-154],ax
  1201                                  
  1202 00000D52 BF8E08                       mov di,2190
  1203                                  
  1204 00000D55 268945FE                     mov [es:di-2],ax
  1205 00000D59 268945FC                     mov [es:di-4],ax     
  1206 00000D5D 268905                       mov [es:di],ax
  1207 00000D60 26894502                     mov [es:di+2],ax
  1208 00000D64 26894504                     mov [es:di+4],ax
  1209 00000D68 26894506                     mov [es:di+6],ax
  1210 00000D6C 26894508                     mov [es:di+8],ax
  1211 00000D70 2689450A                     mov [es:di+10],ax
  1212 00000D74 26898560FF                   mov [es:di-160],ax
  1213 00000D79 26898562FF                   mov [es:di-158],ax
  1214 00000D7E 26898564FF                   mov [es:di-156],ax
  1215 00000D83 26898566FF                   mov [es:di-154],ax
  1216                                  
  1217 00000D88 BF6207                       mov di,1890
  1218                                  
  1219 00000D8B 268945FE                     mov [es:di-2],ax
  1220 00000D8F 268945FC                     mov [es:di-4],ax     
  1221 00000D93 268905                       mov [es:di],ax
  1222 00000D96 26894502                     mov [es:di+2],ax
  1223 00000D9A 26894504                     mov [es:di+4],ax
  1224 00000D9E 26894506                     mov [es:di+6],ax
  1225 00000DA2 26894508                     mov [es:di+8],ax
  1226 00000DA6 2689450A                     mov [es:di+10],ax
  1227 00000DAA 26898560FF                   mov [es:di-160],ax
  1228 00000DAF 26898562FF                   mov [es:di-158],ax
  1229 00000DB4 26898564FF                   mov [es:di-156],ax
  1230 00000DB9 26898566FF                   mov [es:di-154],ax
  1231                                  
  1232 00000DBE 5F                             pop di
  1233 00000DBF 5A                             pop dx
  1234 00000DC0 59                             pop cx
  1235 00000DC1 5B                             pop bx
  1236 00000DC2 58                             pop ax
  1237 00000DC3 07                             pop es
  1238 00000DC4 5E                             pop si
  1239 00000DC5 83C502                         add bp,2                 ; free local variable space
  1240 00000DC8 5D                             pop bp
  1241                                  
  1242 00000DC9 C3                             ret
  1243                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1244                                  ; PRINTING BOUNDARY SKIRTINGS ;
  1245                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1246                                  prntbndskrt:
  1247 00000DCA 55                             push bp
  1248 00000DCB 89E5                           mov  bp,sp
  1249 00000DCD 83EC02                         sub  sp,2           ; create space for local variable
  1250 00000DD0 06                             push es
  1251 00000DD1 50                             push ax
  1252 00000DD2 53                             push bx
  1253 00000DD3 51                             push cx
  1254 00000DD4 57                             push di
  1255                                  
  1256 00000DD5 B800B8                         mov ax,0xb800
  1257 00000DD8 8EC0                           mov es,ax
  1258                                  
  1259 00000DDA FC                             cld                 ; auto increment method 
  1260                                  
  1261 00000DDB BF6004                         mov di,1120         ; point to bottom of stadium to print skirtings   
  1262 00000DDE C746FE0000                     mov word[bp-2],0    ; initialize local variable to zero
  1263 00000DE3 B95000                         mov cx,80           ; number of columns to color in the row 
  1264 00000DE6 B8AF4F                         mov ax,0x4faf       ; load red background with '>>' on white foreground
  1265                                  
  1266                                  loopPBS:
  1267 00000DE9 51                              push cx            ; store cx column counter
  1268 00000DEA B90200                          mov  cx,2          ; number of columns to color for rep instruction
  1269 00000DED F3AB                            rep  stosw         ; color desired columns
  1270 00000DEF B44F                            mov  ah,0x4f       ; load red background with '>>' on white foreground
  1271 00000DF1 8346FE01                        add  word[bp-2],1  ; increment local variable
  1272 00000DF5 8B5EFE                          mov  bx,word[bp-2] ; copy the count of local variable in bx
  1273 00000DF8 D1EB                            shr  bx,1          ; check if count is odd
  1274 00000DFA 7302                            jnc  endPBS        ; if not odd, print red background skirting
  1275 00000DFC B41F                            mov  ah,0x1f       ; load blue background with '>>' on white foreground
  1276                                  endPBS: 
  1277 00000DFE 59                              pop cx             ; restore column count
  1278 00000DFF 83E902                          sub cx,2           ; decrement cx counter of columns
  1279 00000E02 83F900                          cmp cx,0           ; check if row is colored entirely
  1280 00000E05 75E2                            jnz loopPBS        ; keep coloring if false
  1281                                  
  1282 00000E07 5F                             pop di
  1283 00000E08 59                             pop cx
  1284 00000E09 5B                             pop bx
  1285 00000E0A 58                             pop ax
  1286 00000E0B 07                             pop es
  1287 00000E0C 83C402                         add sp,2
  1288 00000E0F 5D                             pop bp
  1289                                  
  1290 00000E10 C3                             ret
  1291                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1292                                  ;       PRINTING  GRASS        ;
  1293                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1294                                  prntgrs:    
  1295 00000E11 55                             push bp
  1296 00000E12 89E5                           mov  bp,sp
  1297 00000E14 83EC02                         sub  sp,2                 ; create space for local variable
  1298 00000E17 06                             push es
  1299 00000E18 50                             push ax
  1300 00000E19 53                             push bx
  1301 00000E1A 51                             push cx
  1302 00000E1B 52                             push dx
  1303 00000E1C 57                             push di
  1304                                  
  1305 00000E1D B800B8                         mov ax,0xb800
  1306 00000E20 8EC0                           mov es,ax
  1307                                  
  1308 00000E22 FC                             cld                       ; auto increment method 
  1309                                  
  1310 00000E23 B91800                         mov cx,24                 ; number of columns to color
  1311 00000E26 BF0005                         mov di,1280               ; place di to start of grass print position
  1312 00000E29 C746FE0000                     mov word[bp-2],0          ; initialize local variable to zero
  1313 00000E2E B8DB02                         mov ax,0x02db             ; green foreground and black background
  1314 00000E31 BB0900                         mov bx,9                  ; number of rows to print grass on
  1315                                  
  1316                                  loopPGrgt:
  1317 00000E34 57                             push di                   ; store di for next loop iteration
  1318 00000E35 51                             push cx                   ; store cx for next loop iteration
  1319 00000E36 F3AB                           rep stosw                 ; color the desired row green
  1320 00000E38 59                             pop cx                    ; restore cx value of columns to color
  1321 00000E39 83E902                         sub cx,2                  ; subtract by 2 for next iterations color
  1322 00000E3C 5F                             pop di                    ; restore dx value of starting point in row
  1323 00000E3D 81C7A000                       add di,160                ; add 160 to move to next row (below)
  1324 00000E41 FF46FE                         inc word[bp-2]            ; increment local variable count   
  1325 00000E44 395EFE                         cmp word[bp-2], bx        ; check if desired rows are colored yet or no 
  1326 00000E47 75EB                           jnz loopPGrgt             ; keep coloring if false
  1327                                   
  1328 00000E49 BF3005                         mov di,1328         ; update di to correct location
  1329 00000E4C C746FE0000                     mov word[bp-2],0    ; initialize local variable
  1330 00000E51 B90900                         mov cx,9            ; number of rows to color
  1331 00000E54 B8DB0C                         mov ax,0x0cdb       ; load light red foreground attribute
  1332 00000E57 BB0000                         mov bx,0            ; intialize local variable
  1333                                  
  1334                                  loopGbdryrt:
  1335 00000E5A 51                              push cx            ; store cx row counter
  1336 00000E5B B90200                          mov  cx,2          ; number of columns to color for rep instruction
  1337 00000E5E F3AB                            rep  stosw         ; color desired columns
  1338 00000E60 81C79800                        add  di,152        ; update di position
  1339 00000E64 B40C                            mov  ah,0x0c       ; load light red foreground attribute
  1340 00000E66 8346FE01                        add  word[bp-2],1  ; increment local variable
  1341 00000E6A 8B5EFE                          mov  bx,word[bp-2] ; copy the count of local variable in bx
  1342 00000E6D D1EB                            shr  bx,1          ; check if count is odd
  1343 00000E6F 7302                            jnc  endGbdryrt    ; if not odd, print red background skirting
  1344 00000E71 B40F                            mov  ah,0x0f       ; load white foreground attribute
  1345                                   endGbdryrt:
  1346 00000E73 59                              pop cx             ; restore column count
  1347 00000E74 83E901                          sub cx,1           ; decrement cx counter of columns
  1348 00000E77 83F900                          cmp cx,0           ; check if row is colored entirely
  1349 00000E7A 75DE                            jnz loopGbdryrt    ; keep coloring if false
  1350                                      
  1351 00000E7C FD                             std                       ; auto decrement method 
  1352                                  
  1353 00000E7D B91800                         mov cx,24                 ; number of columns to color
  1354 00000E80 BF9E05                         mov di,1438               ; place di to start of grass print position
  1355 00000E83 C746FE0000                     mov word[bp-2],0          ; initialize local variable to zero
  1356 00000E88 B8DB02                         mov ax,0x02db             ; green color foreground on black background
  1357 00000E8B BB0900                         mov bx,9                  ; number of rows to print grass on     
  1358                                  
  1359                                  loopPGlft:
  1360 00000E8E 57                             push di                   ; store di for next loop iteration
  1361 00000E8F 51                             push cx                   ; store cx for next loop iteration
  1362 00000E90 F3AB                           rep stosw                 ; color the desired row green
  1363 00000E92 59                             pop cx                    ; restore cx value of columns to color
  1364 00000E93 83E902                         sub cx,2                  ; subtract by 2 for next iterations color
  1365 00000E96 5F                             pop di                    ; restore dx value of starting point in row
  1366 00000E97 81C7A000                       add di,160                ; add 160 to move to next row (below)
  1367 00000E9B FF46FE                         inc word[bp-2]            ; increment local variable count   
  1368 00000E9E 395EFE                         cmp word[bp-2], bx        ; check if desired rows are colored yet or no 
  1369 00000EA1 75EB                           jnz loopPGlft             ; keep coloring if false
  1370                                  
  1371 00000EA3 BF6E05                         mov di,1390         ; update di to correct location
  1372 00000EA6 C746FE0000                     mov word[bp-2],0    ; initialize local variable
  1373 00000EAB B90900                         mov cx,9            ; number of rows to color
  1374 00000EAE B8DB0F                         mov ax,0x0fdb       ; load white foreground attribute
  1375 00000EB1 BB0000                         mov bx,0            ; intialize local variable
  1376                                  
  1377                                  loopGbdrylt:
  1378 00000EB4 51                              push cx            ; store cx row counter
  1379 00000EB5 B90200                          mov  cx,2          ; number of columns to color for rep instruction
  1380 00000EB8 F3AB                            rep  stosw         ; color desired columns
  1381 00000EBA 81C7A800                        add  di,168        ; update di position
  1382 00000EBE B40F                            mov  ah,0x0f       ; load white foreground attribute
  1383 00000EC0 8346FE01                        add  word[bp-2],1  ; increment local variable
  1384 00000EC4 8B5EFE                          mov  bx,word[bp-2] ; copy the count of local variable in bx
  1385 00000EC7 D1EB                            shr  bx,1          ; check if count is odd
  1386 00000EC9 7302                            jnc  endGbdrylt    ; if not odd, print red background skirting
  1387 00000ECB B40C                            mov  ah,0x0c       ; load light red foreground attribute
  1388                                   endGbdrylt:
  1389 00000ECD 59                              pop cx             ; restore column count
  1390 00000ECE 83E901                          sub cx,1           ; decrement cx counter of columns
  1391 00000ED1 83F900                          cmp cx,0           ; check if row is colored entirely
  1392 00000ED4 75DE                            jnz loopGbdrylt    ; keep coloring if false
  1393                                  
  1394 00000ED6 5F                             pop di
  1395 00000ED7 5A                             pop dx
  1396 00000ED8 59                             pop cx
  1397 00000ED9 5B                             pop bx
  1398 00000EDA 58                             pop ax
  1399 00000EDB 07                             pop es
  1400 00000EDC 83C402                         add sp,2
  1401 00000EDF 5D                             pop bp
  1402                                  
  1403 00000EE0 C3                             ret
  1404                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1405                                  ;        PRINTING ROAD         ;
  1406                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1407                                  prntrd:    
  1408 00000EE1 55                             push bp
  1409 00000EE2 89E5                           mov  bp,sp
  1410 00000EE4 83EC02                         sub  sp,2                 ; create space for local variable
  1411 00000EE7 06                             push es
  1412 00000EE8 50                             push ax
  1413 00000EE9 53                             push bx 
  1414 00000EEA 51                             push cx
  1415 00000EEB 52                             push dx
  1416 00000EEC 57                             push di
  1417 00000EED 56                             push si
  1418                                  
  1419 00000EEE B800B8                         mov ax,0xb800
  1420 00000EF1 8EC0                           mov es,ax   
  1421                                        
  1422 00000EF3 FC                             cld                       ; auto increment method 
  1423                                        
  1424 00000EF4 B91C00                         mov cx,28                 ; number of columns to color
  1425 00000EF7 BF3405                         mov di,1332               ; place di to start of grass print position
  1426 00000EFA C746FE0000                     mov word[bp-2],0          ; initialize local variable to zero
  1427 00000EFF B8DB08                         mov ax,0x08db             ; dark grey foreground and black background
  1428 00000F02 BB0900                         mov bx,9                  ; number of rows to print road on
  1429                                         
  1430                                  loopPR:
  1431 00000F05 57                             push di                   ; store di for next loop iteration
  1432 00000F06 51                             push cx                   ; store cx for next loop iteration
  1433 00000F07 F3AB                           rep stosw                 ; color the desired row grey
  1434 00000F09 59                             pop cx                    ; restore cx value of columns to color
  1435 00000F0A 83C104                         add cx,4                  ; addition by 4 for next iterations color
  1436 00000F0D 5F                             pop di                    ; restore dx value of starting point in row
  1437 00000F0E 81C79C00                       add di,156                ; add 156 to move to next row (below)
  1438 00000F12 FF46FE                         inc word[bp-2]            ; increment local variable count   
  1439 00000F15 395EFE                         cmp word[bp-2], bx        ; check if desired rows are colored yet or no 
  1440 00000F18 75EB                           jnz loopPR                ; keep coloring if false
  1441                                  
  1442 00000F1A B8DB7F                         mov ax,0x7fdb   
  1443 00000F1D B90100                         mov cx,1                  ; number of columns to color
  1444 00000F20 BFF005                         mov di,1520               ; place di to start of grass print position
  1445 00000F23 C746FE0000                     mov word[bp-2],0          ; initialize local variable to zero
  1446 00000F28 BB0600                         mov bx,6                  ; put 6 in bx to print 6 white dashes
  1447 00000F2B BE0000                         mov si,0               
  1448                                  
  1449                                  loopline:
  1450 00000F2E 57                             push di                   ; store di for next loop iteration
  1451 00000F2F 51                             push cx                   ; store cx for next loop iteration
  1452 00000F30 F3AB                           rep stosw                 ; color the desired row grey
  1453 00000F32 59                             pop cx                    ; restore cx value of columns to color
  1454 00000F33 5F                             pop di                    ; restore dx value of starting point in row
  1455 00000F34 81C7A000                       add di,160                ; add 160 to move to next row (below)
  1456 00000F38 FF46FE                         inc word[bp-2]            ; increment local variable count
  1457 00000F3B 8B56FE                         mov dx,word[bp-2]         ; copy the counter in dx 
  1458 00000F3E D1EA                           shr dx,1                  ; shift right to check if odd or even
  1459 00000F40 7209                           jc loopline2              ; if odd, dont increment di again
  1460 00000F42 81C7A000                       add di,160                ; add 160 in di to print space between lines
  1461 00000F46 C746FE0000                     mov word[bp-2],0          ; reset the local variable
  1462                                  loopline2: 
  1463 00000F4B 46                             inc si                    ; si to control the executions of loop
  1464 00000F4C 39DE                           cmp si, bx                ; check if desired rows are colored yet or no 
  1465 00000F4E 75DE                           jnz loopline              ; keep printing line
  1466                                  
  1467 00000F50 5E                             pop si
  1468 00000F51 5F                             pop di
  1469 00000F52 5A                             pop dx
  1470 00000F53 59                             pop cx
  1471 00000F54 5B                             pop bx
  1472 00000F55 58                             pop ax
  1473 00000F56 07                             pop es
  1474 00000F57 83C402                         add sp,2
  1475 00000F5A 5D                             pop bp
  1476                                  
  1477 00000F5B C3                             ret
  1478                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1479                                  ;   PRINTING CHECKERED FLAG   ;
  1480                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1481                                  chqrdflg:
  1482 00000F5C 55                             push bp
  1483 00000F5D 89E5                           mov  bp,sp
  1484 00000F5F 83ED02                         sub  bp,2                    ; create local variable space
  1485 00000F62 56                             push si
  1486 00000F63 06                             push es
  1487 00000F64 50                             push ax
  1488 00000F65 53                             push bx 
  1489 00000F66 51                             push cx
  1490 00000F67 52                             push dx
  1491 00000F68 57                             push di
  1492                                  
  1493 00000F69 B800B8                         mov ax,0xb800
  1494 00000F6C 8EC0                           mov es,ax   
  1495                                        
  1496 00000F6E FC                             cld                          ; auto increment method 
  1497                                  
  1498 00000F6F C746FE1C00                     mov word[bp-2],28            ; number of columns to color in first  row
  1499 00000F74 BE3A00                         mov si,58                    ; number of columns to color in second row
  1500 00000F77 BF7809                         mov di,2424                  ; place di to start of flag print position
  1501                                      
  1502                                  loopCF:   
  1503 00000F7A B8DB70                          mov ax,0x70db               ; load white foreground color
  1504 00000F7D B90200                          mov cx,2                    ; number of columns to color
  1505 00000F80 F3AB                            rep stosw                   ; color desired number of columns
  1506 00000F82 B8DB7F                          mov ax,0x7fdb               ; load black foreground color
  1507 00000F85 B90200                          mov cx,2                    ; number of columns to color
  1508 00000F88 F3AB                            rep stosw                   ; color desired number of columns
  1509 00000F8A 836EFE02                        sub word[bp-2],2            ; decrement count of columns to color
  1510 00000F8E 83EE02                          sub si,2                    ; decrement si for count of lower row
  1511 00000F91 837EFE00                        cmp word[bp-2],0            ; check if first row is colored
  1512 00000F95 75E3                            jnz loopCF                  ; keep coloring row if false
  1513 00000F97 8976FE                          mov word[bp-2],si           ; load number of columns to color in second row
  1514 00000F9A BF140A                          mov di,2580                 ; place di to start of flag print position
  1515 00000F9D 837EFE00                        cmp word[bp-2],0            ; check if second row is colored
  1516 00000FA1 75D7                            jnz loopCF                  ; keep coloring row if false
  1517                                   
  1518 00000FA3 5F                             pop di
  1519 00000FA4 5A                             pop dx
  1520 00000FA5 59                             pop cx
  1521 00000FA6 5B                             pop bx
  1522 00000FA7 58                             pop ax
  1523 00000FA8 07                             pop es
  1524 00000FA9 5E                             pop si
  1525 00000FAA 83C502                         add bp,2                     ; free local variable space
  1526 00000FAD 5D                             pop bp
  1527                                  
  1528 00000FAE C3                             ret
  1529                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1530                                  ;      PRINTING DASHBOARD     ;
  1531                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1532                                  prntdbrd:
  1533 00000FAF 56                             push si
  1534 00000FB0 06                             push es
  1535 00000FB1 50                             push ax
  1536 00000FB2 53                             push bx
  1537 00000FB3 51                             push cx
  1538 00000FB4 52                             push dx
  1539 00000FB5 57                             push di
  1540                                  
  1541 00000FB6 B800B8                         mov ax,0xb800
  1542 00000FB9 8EC0                           mov es,ax
  1543                                  
  1544 00000FBB FC                             cld                    ; auto increment method
  1545                                      
  1546 00000FBC BFA00A                         mov di, 2720           ; load di with starting location
  1547 00000FBF B8DB08                         mov ax,0x08db          ; grey foreground on black background
  1548 00000FC2 B98002                         mov cx,640             ; number of columns to color grey
  1549 00000FC5 F3AB                           rep stosw              ; color the desired columns grey
  1550                                  
  1551 00000FC7 BFA00A                         mov di, 2720           ; load di with starting location
  1552 00000FCA B8DD04                         mov ax,0x04dd          ; red and black stripe attirbute
  1553 00000FCD B91800                         mov cx,24              ; number of columns to color in stripes
  1554 00000FD0 F3AB                           rep stosw              ; color the desired columns
  1555 00000FD2 BF100B                         mov di,2832            ; load di with starting location
  1556 00000FD5 B91800                         mov cx,24              ; number of columns to color in stripes
  1557 00000FD8 F3AB                           rep stosw              ; color the desired columns
  1558                                  
  1559 00000FDA BF300B                         mov di,2864            ; load di with starting location
  1560 00000FDD B90800                         mov cx,8               ; number of columns to color
  1561 00000FE0 F3AB                           rep stosw              ; color the desired columns
  1562                                  
  1563 00000FE2 BFCE0A                         mov di, 2766           ; load di with starting location
  1564 00000FE5 B8DC74                         mov ax,0x74dc          ; red and grey attribute
  1565 00000FE8 B92400                         mov cx,36              ; number of columns to color in stripes
  1566 00000FEB F3AB                           rep stosw              ; color the desired columns grey
  1567                                  
  1568 00000FED BF160B                         mov di, 2838           ; load di with starting location 
  1569 00000FF0 B8DB02                         mov ax,0x02db          ; green foreground on black background
  1570 00000FF3 B90200                         mov cx,2               ; number of columns to color 
  1571 00000FF6 F3AB                           rep stosw              ; color the desired columns
  1572                                  
  1573 00000FF8 BFB60B                         mov di,2998            ; load di with starting location 
  1574 00000FFB B8DB04                         mov ax,0x04db          ; red foreground on black background
  1575 00000FFE B90200                         mov cx,2               ; number of columns to color
  1576 00001001 F3AB                           rep stosw              ; color desired number of columns
  1577                                  
  1578 00001003 B8DB01                         mov ax,0x01db          ; blue foreground on black background
  1579 00001006 B90200                         mov cx,2               ; number of columns to color
  1580 00001009 F3AB                           rep stosw              ; color desired number of columns
  1581                                     
  1582 0000100B BFE20D                         mov di,3554            ; load di with starting location  
  1583 0000100E B8B274                         mov ax,0x74b2          ; red foreground colored Fire Button
  1584 00001011 B90400                         mov cx,4               ; number of columns to color
  1585 00001014 F3AB                           rep stosw              ; color desired number of columns
  1586                                   
  1587 00001016 BF860E                         mov di,3718              ; load di with starting location
  1588 00001019 B8DB02                         mov ax,0x02db            ; green foreground for button
  1589 0000101C B90200                         mov cx,2                 ; number of columns to color
  1590 0000101F F3AB                           rep stosw                ; color desired number of columns
  1591 00001021 26C706260FAE4E                 mov word[es:3878],0x4eae ; print left indicator signal
  1592 00001028 26C706280FAE4E                 mov word[es:3880],0x4eae ; print left indicator signal
  1593                                  
  1594 0000102F BFDA0E                         mov di,3802
  1595 00001032 B8E040                         mov ax,0x40e0
  1596 00001035 26894506                       mov [es:di+6],ax            
  1597 00001039 26894508                       mov [es:di+8],ax
  1598 0000103D B8E3E0                         mov ax,0xe0e3
  1599 00001040 2689450C                       mov [es:di+12],ax    
  1600 00001044 2689450E                       mov [es:di+14],ax 
  1601 00001048 B8E490                         mov ax,0x90e4
  1602 0000104B 26894512                       mov [es:di+18],ax
  1603 0000104F 26894514                       mov [es:di+20],ax 
  1604 00001053 B89C50                         mov ax,0x509c
  1605 00001056 26894518                       mov [es:di+24],ax
  1606 0000105A 2689451A                       mov [es:di+26],ax
  1607 0000105E B8A830                         mov ax,0x30a8
  1608 00001061 2689451E                       mov [es:di+30],ax
  1609 00001065 26894520                       mov [es:di+32],ax
  1610                                  
  1611 00001069 B81100                      mov  ax,17                ; load x position         
  1612 0000106C 50                          push ax                   ; push x position
  1613 0000106D B81500                      mov  ax,21                ; load y position
  1614 00001070 50                          push ax                   ; push y position
  1615 00001071 B87F00                      mov  ax,0x0007f           ; white on grey attribute
  1616 00001074 50                          push ax                   ; push attribute
  1617 00001075 B8[1200]                    mov  ax,Fire              ; load string address
  1618 00001078 50                          push ax                   ; push string address
  1619 00001079 E850F4                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  1620                                  
  1621 0000107C B84100                      mov  ax,65                ; load x position
  1622 0000107F 50                          push ax                   ; push x position
  1623 00001080 B81300                      mov  ax,19                ; load y position
  1624 00001083 50                          push ax                   ; push y position
  1625 00001084 B87F00                      mov  ax,0x0007f           ; white on grey attribute
  1626 00001087 50                          push ax                   ; push attribute
  1627 00001088 B8[2600]                    mov  ax,OffButton         ; load string address
  1628 0000108B 50                          push ax                   ; push string address
  1629 0000108C E83DF4                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  1630                                  
  1631 0000108F B83F00                      mov  ax,63                ; load x position         
  1632 00001092 50                          push ax                   ; push x position
  1633 00001093 B81400                      mov  ax,20                ; load y position
  1634 00001096 50                          push ax                   ; push y position
  1635 00001097 B87F00                      mov  ax,0x0007f           ; white on grey attribute
  1636 0000109A 50                          push ax                   ; push attribute
  1637 0000109B B8[2300]                    mov  ax,OnButton          ; load string address
  1638 0000109E 50                          push ax                   ; push string address
  1639 0000109F E82AF4                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  1640                                  
  1641 000010A2 BF040D                      mov di,3332
  1642 000010A5 B8CD0F                      mov ax,0x0fcd
  1643 000010A8 B90200                      mov cx,2
  1644 000010AB F3AB                        rep stosw
  1645                                   
  1646 000010AD B84100                      mov  ax,65                ; load x position         
  1647 000010B0 50                          push ax                   ; push x position
  1648 000010B1 B81500                      mov  ax,21                ; load y position
  1649 000010B4 50                          push ax                   ; push y position
  1650 000010B5 B84F00                      mov  ax,0x0004f           ; white on red attribute
  1651 000010B8 50                          push ax                   ; push attribute
  1652 000010B9 B8[1700]                    mov  ax,Ignition          ; load string address
  1653 000010BC 50                          push ax                   ; push string address
  1654 000010BD E80CF4                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  1655                                  
  1656 000010C0 B84900                      mov  ax,73                ; load x position
  1657 000010C3 50                          push ax                   ; push x position
  1658 000010C4 B81300                      mov  ax,19                ; load y position
  1659 000010C7 50                          push ax                   ; push y position
  1660 000010C8 B87F00                      mov  ax,0x0007f           ; white on grey attribute
  1661 000010CB 50                          push ax                   ; push attribute
  1662 000010CC B8[2600]                    mov  ax,OffButton         ; load string address
  1663 000010CF 50                          push ax                   ; push string address
  1664 000010D0 E8F9F3                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  1665                                  
  1666 000010D3 B84700                      mov  ax,71                ; load x position         
  1667 000010D6 50                          push ax                   ; push x position
  1668 000010D7 B81400                      mov  ax,20                ; load y position
  1669 000010DA 50                          push ax                   ; push y position
  1670 000010DB B87F00                      mov  ax,0x0007f           ; white on grey attribute
  1671 000010DE 50                          push ax                   ; push attribute
  1672 000010DF B8[2300]                    mov  ax,OnButton          ; load string address
  1673 000010E2 50                          push ax                   ; push string address
  1674 000010E3 E8E6F3                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  1675                                  
  1676 000010E6 BF140D                      mov di,3348
  1677 000010E9 B8CD0F                      mov ax,0x0fcd             
  1678 000010EC B90200                      mov cx,2 
  1679 000010EF F3AB                        rep stosw
  1680                                  
  1681 000010F1 B84900                      mov  ax,73                ; load x position         
  1682 000010F4 50                          push ax                   ; push x position
  1683 000010F5 B81500                      mov  ax,21                ; load y position
  1684 000010F8 50                          push ax                   ; push y position
  1685 000010F9 B84F00                      mov  ax,0x0004f           ; white on red attribute
  1686 000010FC 50                          push ax                   ; push attribute
  1687 000010FD B8[1D00]                    mov  ax,Fuel              ; load string address
  1688 00001100 50                          push ax                   ; push string address
  1689 00001101 E8C8F3                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  1690                                  
  1691 00001104 B81100                      mov  ax,17                ; load x position
  1692 00001107 50                          push ax                   ; push x position
  1693 00001108 B81300                      mov  ax,19                ; load y position
  1694 0000110B 50                          push ax                   ; push y position
  1695 0000110C B87F00                      mov  ax,0x0007f           ; white on grey attribute
  1696 0000110F 50                          push ax                   ; push attribute
  1697 00001110 B8[3000]                    mov  ax,Gear              ; load string address
  1698 00001113 50                          push ax                   ; push string address
  1699 00001114 E8B5F3                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  1700                                  
  1701 00001117 B82B00                      mov  ax,43                ; load x position
  1702 0000111A 50                          push ax                   ; push x position
  1703 0000111B B81500                      mov  ax,21                ; load y position
  1704 0000111E 50                          push ax                   ; push y position
  1705 0000111F B87F00                      mov  ax,0x0007f           ; white on grey attribute
  1706 00001122 50                          push ax                   ; push attribute
  1707 00001123 B8[2A00]                    mov  ax,Speed             ; load string address
  1708 00001126 50                          push ax                   ; push string address
  1709 00001127 E8A2F3                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  1710                                  
  1711 0000112A B82100                      mov  ax,33                ; load x position
  1712 0000112D 50                          push ax                   ; push x position
  1713 0000112E B81500                      mov  ax,21                ; load y position
  1714 00001131 50                          push ax                   ; push y position
  1715 00001132 B87F00                      mov  ax,0x0007f           ; white on grey attribute
  1716 00001135 50                          push ax                   ; push attribute
  1717 00001136 B8[3500]                    mov  ax,Rpm               ; load string address
  1718 00001139 50                          push ax                   ; push string address
  1719 0000113A E88FF3                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  1720                                  
  1721 0000113D 5F                             pop di
  1722 0000113E 5A                             pop dx
  1723 0000113F 59                             pop cx
  1724 00001140 5B                             pop bx
  1725 00001141 58                             pop ax
  1726 00001142 07                             pop es
  1727 00001143 5E                             pop si
  1728                                  
  1729 00001144 C3                             ret
  1730                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1731                                  ;  PRINTING REAR VIEW MIRROR  ;
  1732                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1733                                  rvmirror:
  1734 00001145 56                             push si
  1735 00001146 06                             push es
  1736 00001147 50                             push ax
  1737 00001148 53                             push bx
  1738 00001149 51                             push cx
  1739 0000114A 52                             push dx
  1740 0000114B 57                             push di
  1741                                  
  1742 0000114C B800B8                      mov ax,0xb800
  1743 0000114F 8EC0                        mov es,ax   
  1744                                       
  1745 00001151 FC                          cld                        ; auto increment method
  1746                                  
  1747 00001152 BF400B                      mov di,2880                ; point di to starting location
  1748 00001155 B8C404                      mov ax,0x04c4              ; red horizontal line on black background
  1749 00001158 B91100                      mov cx,17                  ; number of columns to color
  1750 0000115B F3AB                        rep stosw                  ; color desired columns
  1751                                  
  1752 0000115D B8B304                      mov ax,0x04b3              ; red vertical line on black background
  1753 00001160 B90800                      mov cx,8                   ; number of rows to color
  1754 00001163 81C79E00                    add di,158                 ; point di to starting location
  1755                                  
  1756                                  loopRMbdry:
  1757 00001167 268905                      mov word[es:di],ax         ; print rearview mirror boundry on screen
  1758 0000116A 81C7A000                    add di,160                 ; update di
  1759 0000116E E2F7                        loop loopRMbdry            ; color until cx is zero
  1760                                  
  1761 00001170 BFE00B                      mov di,3040                ; point di to starting location
  1762 00001173 B90600                      mov cx, 6                  ; number of rows to color
  1763 00001176 B8DB08                      mov ax,0x08db              ; grey color attribute
  1764                                  
  1765                                  loopRMrd: 
  1766 00001179 57                           push di                   ; store di for later use
  1767 0000117A 51                           push cx                   ; store cx for later use
  1768 0000117B B91000                       mov cx,16                 ; number of columns to color
  1769 0000117E F3AB                         rep stosw                 ; color desired columns
  1770 00001180 59                           pop cx                    ; restore cx
  1771 00001181 5F                           pop di                    ; restore di
  1772 00001182 81C7A000                     add di,160                ; update di
  1773 00001186 49                           dec cx                    ; decrement row count
  1774 00001187 83F900                       cmp cx,0                  ; check if all rows colored
  1775 0000118A 75ED                         jnz loopRMrd              ; keep coloring if false
  1776                                  
  1777 0000118C 26C706D80DDB0F               mov word[es:3544],0x0fdb  ; print white road line
  1778 00001193 26C706180FDB0F               mov word[es:3864],0x0fdb  ; print white road line
  1779                                  
  1780 0000119A BFC00D                       mov di,3520               ; point di to starting location
  1781 0000119D B8DB02                       mov ax,0x02db             ; green color attribute
  1782 000011A0 B90600                       mov cx,6                  ; number of columns to color
  1783 000011A3 BB0300                       mov bx,3                  ; number of rows to color
  1784                                  
  1785                                  loopRMgrs:
  1786 000011A6 57                           push di                   ; store di for later use
  1787 000011A7 51                           push cx                   ; store cx for later use
  1788 000011A8 F3AB                         rep stosw                 ; color desired columns
  1789 000011AA 26C705DB0F                   mov word[es:di],0x0fdb    ; print white boundry of grass
  1790 000011AF 59                           pop cx                    ; restore cx
  1791 000011B0 5F                           pop di                    ; restore di
  1792 000011B1 81C7A000                     add di,160                ; update di
  1793 000011B5 83E902                       sub cx,2                  ; decrement columns to color
  1794 000011B8 83EB01                       sub bx,1                  ; decrement rows counter
  1795 000011BB 83FB00                       cmp bx,0                  ; check if all rows colored
  1796 000011BE 75E6                         jnz loopRMgrs             ; keep coloring if false
  1797                                  
  1798 000011C0 5F                             pop di
  1799 000011C1 5A                             pop dx
  1800 000011C2 59                             pop cx
  1801 000011C3 5B                             pop bx
  1802 000011C4 58                             pop ax
  1803 000011C5 07                             pop es
  1804 000011C6 5E                             pop si
  1805                                  
  1806 000011C7 C3                             ret
  1807                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1808                                  ;   PRINTING STEERING WHEEL   ;
  1809                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1810                                  prntstrwhl:
  1811 000011C8 55                          push bp
  1812 000011C9 89E5                        mov  bp,sp
  1813 000011CB 83EC02                      sub  sp,2                 ; create local variable space
  1814 000011CE 56                          push si  
  1815 000011CF 06                          push es
  1816 000011D0 1E                          push ds
  1817 000011D1 50                          push ax
  1818 000011D2 53                          push bx
  1819                                     
  1820 000011D3 51                          push cx
  1821                                     
  1822 000011D4 57                          push di
  1823                                  
  1824 000011D5 B800B8                      mov ax,0xb800
  1825 000011D8 8EC0                        mov es,ax 
  1826                                   
  1827 000011DA B8DB00                      mov ax,0x00db             ; black attribute of steering wheel
  1828 000011DD C746FE0700                  mov word[bp-2],7          ; number of rows to color
  1829 000011E2 BF720B                      mov di,2930               ; starting point of di
  1830                                  
  1831                                  leftline:                
  1832 000011E5 B90200                     mov cx,2                   ; number of columns to color 
  1833 000011E8 F3AB                       rep stosw                  ; color the desired number of columns
  1834 000011EA 81C79C00                   add di,156                 ; mov di to lower row desired position
  1835 000011EE FF4EFE                     dec word[bp-2]             ; decrement rows counter
  1836 000011F1 837EFE00                   cmp word[bp-2],0           ; check if all rows colored
  1837 000011F5 75EE                       jnz leftline               ; keep coloring if false
  1838                                  
  1839 000011F7 BF720B                     mov di,2930                ; starting point of di
  1840 000011FA B91E00                     mov cx,30                  ; number of columns to color 
  1841 000011FD F3AB                       rep stosw                  ; color the desired number of columns(top line)  
  1842                                     
  1843 000011FF C746FE0700                 mov word[bp-2],7           ; number of rows to color
  1844                                  
  1845                                  rightline: 
  1846 00001204 B90200                     mov cx,2                   ; number of columns to color 
  1847 00001207 F3AB                       rep stosw                  ; color the desired number of columns
  1848 00001209 81C79C00                   add di,156                 ; mov di to lower row desired position
  1849 0000120D FF4EFE                     dec word[bp-2]             ; decrement rows counter
  1850 00001210 837EFE00                   cmp word[bp-2],0           ; check if all rows colored
  1851 00001214 75EE                       jnz rightline              ; keep coloring if false
  1852                                  
  1853 00001216 FD                         std                        ; auto decrement method
  1854                                  
  1855 00001217 81EFA000                   sub di,160                 ; bring di back in video memory (moved out in last loop)
  1856 0000121B B91E00                     mov cx,30                  ; number of columns to color 
  1857 0000121E F3AB                       rep stosw                  ; color the desired number of columns(top line) 
  1858                                  
  1859 00001220 FC                         cld                        ; auto increment method
  1860                                  
  1861 00001221 BFFC0D                     mov di,3580                ; starting point of di
  1862 00001224 C746FE0300                 mov word[bp-2],3           ; number of rows to color
  1863 00001229 B8DB0E                     mov ax,0x0edb              ; load yellow foreground attribute
  1864                                  
  1865                                  strwhlCntr: 
  1866 0000122C 57                         push di                    ; store di value for later use in loop
  1867 0000122D B91600                     mov cx,22                  ; number of columns to color 
  1868 00001230 F3AB                       rep stosw                  ; color the desired number of columns(bottom line)           
  1869 00001232 5F                         pop di                     ; restore previous di value
  1870 00001233 81C7A000                   add di,160                 ; point towards lower row
  1871 00001237 FF4EFE                     dec word[bp-2]             ; decrement rows counter
  1872 0000123A 837EFE00                   cmp word[bp-2],0           ; check if all rows colored
  1873 0000123E 75EC                       jnz strwhlCntr             ; keep coloring if false
  1874                                  
  1875 00001240 26C706900BDC8C              mov word[es:2960],0x8cdc  ; load red dot on steering wheel
  1876                                  
  1877 00001247 B82200                      mov  ax,34                ; load x position
  1878 0000124A 50                          push ax                   ; push x position
  1879 0000124B B81700                      mov  ax,23                ; load y position
  1880 0000124E 50                          push ax                   ; push y position
  1881 0000124F B80C00                      mov  ax,0x000c            ; red on black attribute
  1882 00001252 50                          push ax                   ; push attribute
  1883 00001253 B8[0300]                    mov  ax,CarName           ; load string address
  1884 00001256 50                          push ax                   ; push string address
  1885 00001257 E872F2                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  1886                                  
  1887 0000125A BF860E                      mov di,3718               ; load di with starting location
  1888 0000125D B8DB02                      mov ax,0x02db             ; green foreground for button
  1889 00001260 B90200                      mov cx,2                  ; number of columns to color
  1890 00001263 F3AB                        rep stosw                 ; color desired number of columns
  1891 00001265 26C706260FAE4E              mov word[es:3878],0x4eae  ; print left indicator signal
  1892 0000126C 26C706280FAE4E              mov word[es:3880],0x4eae  ; print left indicator signal
  1893                                  
  1894 00001273 BFDA0E                      mov di,3802               ; load di with starting location
  1895 00001276 B90200                      mov cx,2                  ; number of columns to color
  1896 00001279 F3AB                        rep stosw                 ; color desired number of columns
  1897 0000127B 26C7067A0FAF4E              mov word[es:3962],0x4eaf  ; print right indicator signal 
  1898 00001282 26C7067C0FAF4E              mov word[es:3964],0x4eaf  ; print right indicator signal
  1899                                  
  1900 00001289 BFA00A                      mov di,2720               ; load di with starting location
  1901 0000128C B8FEFE                      mov ax,0xfefe             ; block with blinking yellow attribute
  1902 0000128F B90800                      mov cx,8                  ; number of columns to color
  1903 00001292 F3AB                        rep stosw                 ; color the desired columns
  1904                                  
  1905 00001294 BF300B                      mov di,2864               ; load di with starting location
  1906 00001297 B90800                      mov cx,8                  ; number of columns to color
  1907 0000129A F3AB                        rep stosw                 ; color the desired columns
  1908                                  
  1909 0000129C 5F                          pop di
  1910 0000129D 59                          pop cx
  1911 0000129E 5B                          pop bx
  1912 0000129F 58                          pop ax
  1913 000012A0 1F                          pop ds
  1914 000012A1 07                          pop es
  1915 000012A2 5E                          pop si
  1916 000012A3 83C402                      add sp,2                  ; free local variable space
  1917 000012A6 5D                          pop bp
  1918                                  
  1919 000012A7 C3                          ret
  1920                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1921                                  ;   CLEARING STEERING WHEEL   ;
  1922                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1923                                  clrstrwhl:
  1924 000012A8 55                          push bp
  1925 000012A9 89E5                        mov  bp,sp
  1926 000012AB 83EC02                      sub  sp,2                 ; create local variable space
  1927 000012AE 56                          push si  
  1928 000012AF 06                          push es
  1929 000012B0 1E                          push ds
  1930 000012B1 50                          push ax
  1931 000012B2 53                          push bx
  1932                                     
  1933 000012B3 51                          push cx
  1934                                     
  1935 000012B4 57                          push di
  1936                                  
  1937 000012B5 B800B8                      mov ax,0xb800
  1938 000012B8 8EC0                        mov es,ax 
  1939                                  
  1940 000012BA FC                          cld                       ; auto increment method
  1941                                  
  1942 000012BB B8DB08                      mov ax,0x08db             ; black on black attribute of steering wheel
  1943 000012BE C746FE0700                  mov word[bp-2],7          ; number of rows to color
  1944                                  
  1945 000012C3 BF720B                      mov di,2930               ; starting point of di
  1946 000012C6 037E04                      add di,[bp+4]             ; check type of parameter
  1947                                  
  1948 000012C9 57                          push di                   ; store di for later use
  1949 000012CA B92000                      mov cx,32                 ; number of columns to color
  1950 000012CD F3AB                        rep stosw                 ; color the desired number of columns
  1951 000012CF 5F                          pop di                    ; restore di value
  1952 000012D0 81C7A000                    add di,160                ; update di accordingly
  1953 000012D4 B92000                      mov cx,32                 ; number of columns to color
  1954 000012D7 F3AB                        rep stosw                 ; color the desired number of columns
  1955                                  
  1956 000012D9 BFB20C                      mov di,3250               ; starting point of di
  1957 000012DC 037E04                      add di,[bp+4]             ; check type of parameter
  1958                                  
  1959 000012DF 57                          push di                   ; store di for later use
  1960 000012E0 B90200                      mov cx,2                  ; number of columns to color
  1961 000012E3 F3AB                        rep stosw                 ; color the desired number of columns
  1962 000012E5 5F                          pop di                    ; restore di value
  1963 000012E6 81C7A000                    add di,160                ; update di accordingly
  1964 000012EA B90200                      mov cx,2                  ; number of columns to color
  1965 000012ED F3AB                        rep stosw                 ; color the desired number of columns
  1966                                  
  1967 000012EF BFEE0C                      mov di,3310               ; starting point of di
  1968 000012F2 037E04                      add di,[bp+4]             ; check type of parameter        
  1969                                  
  1970 000012F5 57                          push di                   ; store di for later use
  1971 000012F6 B90200                      mov cx,2                  ; number of columns to color
  1972 000012F9 F3AB                        rep stosw                 ; color the desired number of columns
  1973 000012FB 5F                          pop di                    ; restore di value
  1974 000012FC 81C7A000                    add di,160                ; update di accordingly
  1975 00001300 B90200                      mov cx,2                  ; number of columns to color
  1976 00001303 F3AB                        rep stosw                 ; color the desired number of columns
  1977                                  
  1978 00001305 BFF20D                      mov di,3570               ; starting point of di
  1979 00001308 037E04                      add di,[bp+4]             ; check type of parameter
  1980 0000130B C746FE0300                  mov word[bp-2],3          ; number of rows to color
  1981                                  
  1982                                  clrstrwhlcentr:
  1983 00001310 57                         push di                   ; store di for later use
  1984 00001311 B92000                     mov cx,32                 ; number of columns to color
  1985 00001314 F3AB                       rep stosw                 ; color the desired number of columns
  1986 00001316 5F                         pop di                    ; restore di value
  1987 00001317 81C7A000                   add di,160                ; update di accordingly
  1988 0000131B FF4EFE                     dec word[bp-2]            ; decrement row counter
  1989 0000131E 837EFE00                   cmp word[bp-2],0          ; check if all rows colored
  1990 00001322 75EC                       jnz clrstrwhlcentr        ; keep coloring if false
  1991                                  
  1992 00001324 5F                          pop di
  1993 00001325 59                          pop cx
  1994 00001326 5B                          pop bx
  1995 00001327 58                          pop ax
  1996 00001328 1F                          pop ds
  1997 00001329 07                          pop es
  1998 0000132A 5E                          pop si
  1999 0000132B 83C402                      add sp,2                  ; free local variable space
  2000 0000132E 5D                          pop bp
  2001                                  
  2002 0000132F C20200                      ret 2
  2003                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2004                                  ;PRINTING STEERING WHEEL RIGHT;
  2005                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2006                                  strwhlrght:
  2007 00001332 55                          push bp
  2008 00001333 89E5                        mov  bp,sp
  2009 00001335 83EC02                      sub  sp,2                 ; create local variable space
  2010 00001338 56                          push si  
  2011 00001339 06                          push es
  2012 0000133A 1E                          push ds
  2013 0000133B 50                          push ax
  2014 0000133C 53                          push bx
  2015                                     
  2016 0000133D 51                          push cx
  2017                                     
  2018 0000133E 57                          push di
  2019                                  
  2020 0000133F B800B8                      mov ax,0xb800
  2021 00001342 8EC0                        mov es,ax 
  2022                                     
  2023 00001344 B80000                      mov ax,0                  ; parameter of starting point
  2024 00001347 50                          push ax                   ; push it on stack
  2025 00001348 E85DFF                      call clrstrwhl            ; FUNCTION CALL: CLEARING STEERING WHEEL
  2026                                  
  2027 0000134B B8DB00                      mov ax,0x00db             ; black on black attribute of steering wheel
  2028 0000134E C746FE0700                  mov word[bp-2],7          ; number of rows to color
  2029 00001353 BF760B                      mov di,2934               ; starting point of di
  2030                                   
  2031                                  leftline2:                
  2032 00001356 B90200                     mov cx,2                   ; number of columns to color 
  2033 00001359 F3AB                       rep stosw                  ; color the desired number of columns
  2034 0000135B 81C79C00                   add di,156                 ; mov di to lower row desired position
  2035 0000135F FF4EFE                     dec word[bp-2]             ; decrement rows counter
  2036 00001362 837EFE00                   cmp word[bp-2],0           ; check if all rows colored
  2037 00001366 75EE                       jnz leftline2               ; keep coloring if false
  2038                                  
  2039 00001368 BF760B                     mov di,2934                ; starting point of di
  2040 0000136B B91E00                     mov cx,30                  ; number of columns to color 
  2041 0000136E F3AB                       rep stosw                  ; color the desired number of columns(top line)  
  2042                                     
  2043 00001370 C746FE0700                 mov word[bp-2],7           ; number of rows to color
  2044                                  
  2045                                  rightline2: 
  2046 00001375 B90200                     mov cx,2                   ; number of columns to color 
  2047 00001378 F3AB                       rep stosw                  ; color the desired number of columns
  2048 0000137A 81C79C00                   add di,156                 ; mov di to lower row desired position
  2049 0000137E FF4EFE                     dec word[bp-2]             ; decrement rows counter
  2050 00001381 837EFE00                   cmp word[bp-2],0           ; check if all rows colored
  2051 00001385 75EE                       jnz rightline2              ; keep coloring if false
  2052                                  
  2053 00001387 FD                         std                        ; auto decrement method
  2054                                  
  2055 00001388 81EFA000                   sub di,160                 ; bring di back in video memory (moved out in last loop)
  2056 0000138C B91E00                     mov cx,30                  ; number of columns to color 
  2057 0000138F F3AB                       rep stosw                  ; color the desired number of columns(top line) 
  2058                                  
  2059 00001391 FC                         cld                        ; auto increment method
  2060                                   
  2061 00001392 BF000E                     mov di,3584                ; starting point of di
  2062 00001395 C746FE0300                 mov word[bp-2],3           ; number of rows to color
  2063 0000139A B8DB0E                     mov ax,0x0edb              ; load yellow foreground attribute
  2064                                    
  2065                                  strwhlCntr2: 
  2066 0000139D 57                         push di                    ; store di value for later use in loop
  2067 0000139E B91600                     mov cx,22                  ; number of columns to color 
  2068 000013A1 F3AB                       rep stosw                  ; color the desired number of columns(bottom line)           
  2069 000013A3 5F                         pop di                     ; restore previous di value
  2070 000013A4 81C7A000                   add di,160                 ; point towards lower row
  2071 000013A8 FF4EFE                     dec word[bp-2]             ; decrement rows counter
  2072 000013AB 837EFE00                   cmp word[bp-2],0           ; check if all rows colored
  2073 000013AF 75EC                       jnz strwhlCntr2            ; keep coloring if false
  2074                                  
  2075 000013B1 26C706940BDC8C              mov word[es:2964],0x8cdc  ; load red dot on steering wheel
  2076                                  
  2077 000013B8 B82400                      mov  ax,36                ; load x position
  2078 000013BB 50                          push ax                   ; push x position
  2079 000013BC B81700                      mov  ax,23                ; load y position
  2080 000013BF 50                          push ax                   ; push y position
  2081 000013C0 B80C00                      mov  ax,0x000c            ; red on black attribute
  2082 000013C3 50                          push ax                   ; push attribute
  2083 000013C4 B8[0300]                    mov  ax,CarName           ; load string address
  2084 000013C7 50                          push ax                   ; push string address
  2085 000013C8 E801F1                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  2086                                      
  2087 000013CB B8DB0E                      mov ax,0x0edb             ; yellow attribute character
  2088 000013CE BFDA0E                      mov di,3802               ; load di with starting location
  2089 000013D1 B90200                      mov cx,2                  ; number of columns to color
  2090 000013D4 F3AB                        rep stosw                 ; color desired number of columns
  2091 000013D6 26C7067A0FAFCE              mov word[es:3962],0xCeaf  ; print BLINKING right indicator signal 
  2092 000013DD 26C7067C0FAFCE              mov word[es:3964],0xCeaf  ; print BLINKING right indicator signal
  2093                                  
  2094 000013E4 BFA00A                      mov di,2720               ; load di with starting location
  2095 000013E7 B8DB07                      mov ax,0x07db             ; block with grey attribute
  2096 000013EA B90800                      mov cx,8                  ; number of columns to color
  2097 000013ED F3AB                        rep stosw                 ; color the desired columns
  2098                                  
  2099 000013EF E8C60A                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2100 000013F2 E8C30A                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2101 000013F5 E8C00A                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2102 000013F8 E8BD0A                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2103 000013FB E8BA0A                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2104 000013FE E8B70A                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2105 00001401 E8B40A                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2106 00001404 E8B10A                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2107 00001407 E8AE0A                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2108 0000140A E8AB0A                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2109 0000140D E8A80A                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2110 00001410 E8A50A                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2111                                  
  2112 00001413 B80400                      mov ax,4                  ; parameter of starting point
  2113 00001416 50                          push ax                   ; push it on stack
  2114 00001417 E88EFE                      call clrstrwhl            ; FUNCTION CALL: CLEARING STEERING WHEEL
  2115                                    
  2116 0000141A E8ABFD                      call prntstrwhl           ; FUNCTION CALL:  PRINTING STEERING WHEEL
  2117                                  
  2118 0000141D 5F                          pop di
  2119 0000141E 59                          pop cx
  2120 0000141F 5B                          pop bx
  2121 00001420 58                          pop ax
  2122 00001421 1F                          pop ds
  2123 00001422 07                          pop es
  2124 00001423 5E                          pop si
  2125 00001424 83C402                      add sp,2                  ; free local variable space
  2126 00001427 5D                          pop bp
  2127                                  
  2128 00001428 C3                          ret
  2129                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2130                                  ;PRINTING STEERING WHEEL LEFT ;
  2131                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2132                                  strwhllft:
  2133 00001429 55                          push bp
  2134 0000142A 89E5                        mov  bp,sp
  2135 0000142C 83EC02                      sub  sp,2                 ; create local variable space
  2136 0000142F 56                          push si  
  2137 00001430 06                          push es
  2138 00001431 1E                          push ds
  2139 00001432 50                          push ax
  2140 00001433 53                          push bx
  2141                                     
  2142 00001434 51                          push cx
  2143                                     
  2144 00001435 57                          push di
  2145                                  
  2146 00001436 B800B8                      mov ax,0xb800
  2147 00001439 8EC0                        mov es,ax 
  2148                                     
  2149 0000143B B80000                      mov ax,0                  ; parameter of starting point
  2150 0000143E 50                          push ax                   ; push it on stack
  2151 0000143F E866FE                      call clrstrwhl            ; FUNCTION CALL: CLEARING STEERING WHEEL
  2152                                  
  2153 00001442 B8DB00                      mov ax,0x00db             ; black on black attribute of steering wheel
  2154 00001445 C746FE0700                  mov word[bp-2],7          ; number of rows to color
  2155 0000144A BF6E0B                      mov di,2926               ; starting point of di
  2156                                   
  2157                                  leftline3:                
  2158 0000144D B90200                     mov cx,2                   ; number of columns to color 
  2159 00001450 F3AB                       rep stosw                  ; color the desired number of columns
  2160 00001452 81C79C00                   add di,156                 ; mov di to lower row desired position
  2161 00001456 FF4EFE                     dec word[bp-2]             ; decrement rows counter
  2162 00001459 837EFE00                   cmp word[bp-2],0           ; check if all rows colored
  2163 0000145D 75EE                       jnz leftline3               ; keep coloring if false
  2164                                  
  2165 0000145F BF6E0B                     mov di,2926                ; starting point of di
  2166 00001462 B91E00                     mov cx,30                  ; number of columns to color 
  2167 00001465 F3AB                       rep stosw                  ; color the desired number of columns(top line)  
  2168                                     
  2169 00001467 C746FE0700                 mov word[bp-2],7           ; number of rows to color
  2170                                  
  2171                                  rightline3: 
  2172 0000146C B90200                     mov cx,2                   ; number of columns to color 
  2173 0000146F F3AB                       rep stosw                  ; color the desired number of columns
  2174 00001471 81C79C00                   add di,156                 ; mov di to lower row desired position
  2175 00001475 FF4EFE                     dec word[bp-2]             ; decrement rows counter
  2176 00001478 837EFE00                   cmp word[bp-2],0           ; check if all rows colored
  2177 0000147C 75EE                       jnz rightline3              ; keep coloring if false
  2178                                  
  2179 0000147E FD                         std                        ; auto decrement method
  2180                                  
  2181 0000147F 81EFA000                   sub di,160                 ; bring di back in video memory (moved out in last loop)
  2182 00001483 B91E00                     mov cx,30                  ; number of columns to color 
  2183 00001486 F3AB                       rep stosw                  ; color the desired number of columns(top line) 
  2184                                  
  2185 00001488 FC                         cld                        ; auto increment method
  2186                                   
  2187 00001489 BFF80D                     mov di,3576                ; starting point of di
  2188 0000148C C746FE0300                 mov word[bp-2],3           ; number of rows to color
  2189 00001491 B8DB0E                     mov ax,0x0edb              ; load yellow foreground attribute
  2190                                    
  2191                                  strwhlCntr3: 
  2192 00001494 57                         push di                    ; store di value for later use in loop
  2193 00001495 B91600                     mov cx,22                  ; number of columns to color 
  2194 00001498 F3AB                       rep stosw                  ; color the desired number of columns(bottom line)           
  2195 0000149A 5F                         pop di                     ; restore previous di value
  2196 0000149B 81C7A000                   add di,160                 ; point towards lower row
  2197 0000149F FF4EFE                     dec word[bp-2]             ; decrement rows counter
  2198 000014A2 837EFE00                   cmp word[bp-2],0           ; check if all rows colored
  2199 000014A6 75EC                       jnz strwhlCntr3            ; keep coloring if false
  2200                                  
  2201 000014A8 26C7068C0BDC8C             mov word[es:2956],0x8cdc  ; load red dot on steering wheel
  2202                                  
  2203 000014AF B82000                      mov  ax,32                ; load x position
  2204 000014B2 50                          push ax                   ; push x position
  2205 000014B3 B81700                      mov  ax,23                ; load y position
  2206 000014B6 50                          push ax                   ; push y position
  2207 000014B7 B80C00                      mov  ax,0x000c            ; red on black attribute
  2208 000014BA 50                          push ax                   ; push attribute
  2209 000014BB B8[0300]                    mov  ax,CarName           ; load string address
  2210 000014BE 50                          push ax                   ; push string address
  2211 000014BF E80AF0                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  2212                                  
  2213 000014C2 B8DB0E                      mov ax,0x0edb             ; yellow attribute character
  2214 000014C5 BF860E                      mov di,3718               ; load di with starting location
  2215 000014C8 B90200                      mov cx,2                  ; number of columns to color
  2216 000014CB F3AB                        rep stosw                 ; color desired number of columns
  2217 000014CD 26C706260FAECE              mov word[es:3878],0xCeae  ; print BLINKING left indicator signal
  2218 000014D4 26C706280FAECE              mov word[es:3880],0xCeae  ; print BLINKING left indicator signal
  2219                                   
  2220 000014DB B8DB07                      mov ax,0x07db             ; block with grey attribute
  2221 000014DE BF300B                      mov di,2864               ; load di with starting location
  2222 000014E1 B90800                      mov cx,8                  ; number of columns to color
  2223 000014E4 F3AB                        rep stosw                 ; color the desired columns
  2224                                  
  2225 000014E6 E8CF09                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2226 000014E9 E8CC09                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2227 000014EC E8C909                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2228 000014EF E8C609                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2229 000014F2 E8C309                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2230 000014F5 E8C009                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2231 000014F8 E8BD09                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2232 000014FB E8BA09                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2233 000014FE E8B709                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2234 00001501 E8B409                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2235 00001504 E8B109                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2236 00001507 E8AE09                      call movement             ; FUNCTION CALL:  MOVING SCREEN
  2237                                  
  2238 0000150A B8FCFF                      mov ax,-4                 ; parameter of starting point
  2239 0000150D 50                          push ax                   ; push it on stack
  2240 0000150E E897FD                      call clrstrwhl            ; FUNCTION CALL: CLEARING STEERING WHEEL
  2241                                    
  2242 00001511 E8B4FC                      call prntstrwhl           ; FUNCTION CALL:  PRINTING STEERING WHEEL
  2243                                  
  2244 00001514 5F                          pop di
  2245 00001515 59                          pop cx
  2246 00001516 5B                          pop bx
  2247 00001517 58                          pop ax
  2248 00001518 1F                          pop ds
  2249 00001519 07                          pop es
  2250 0000151A 5E                          pop si
  2251 0000151B 83C402                      add sp,2                  ; free local variable space
  2252 0000151E 5D                          pop bp
  2253                                  
  2254 0000151F C3                          ret
  2255                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2256                                  ;        STARTING RACE        ;
  2257                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2258                                  
  2259                                  rcstrt:      
  2260                                   
  2261 00001520 56                          push si
  2262 00001521 06                          push es
  2263 00001522 1E                          push ds
  2264 00001523 50                          push ax
  2265 00001524 53                          push bx
  2266                                  
  2267 00001525 51                          push cx
  2268                                  
  2269 00001526 57                          push di
  2270                                  
  2271 00001527 B800B8                      mov ax,0xb800
  2272 0000152A 8EC0                        mov es,ax   
  2273                                  
  2274 0000152C 8ED8                        mov ds,ax
  2275                                  
  2276 0000152E 31FF                        xor di,di                    ; point di to starting location
  2277 00001530 B8DB00                      mov ax,0x00db                ; character with black foreground and black background
  2278 00001533 B90A00                      mov cx,10                    ; number of columns to color black
  2279 00001536 BB0600                      mov bx,6                     ; number of rows to color black
  2280                                  
  2281                                  signal:
  2282 00001539 57                         push di                       ; store value of di for later use
  2283 0000153A F3AB                       rep stosw                     ; color black the desired column
  2284 0000153C 5F                         pop di                        ; restore di value 
  2285 0000153D 81C7A000                   add di,160                    ; point di to lower row
  2286 00001541 B90A00                     mov cx,10                     ; restore cx back
  2287 00001544 4B                         dec bx                        ; one row done, decrement it
  2288 00001545 83FB00                     cmp bx,0                      ; check if all desired rows colored black
  2289 00001548 75EF                       jnz signal                    ; keep coloring if false
  2290                                  
  2291 0000154A BF0400                      mov di,4                     ; point di to desired location
  2292 0000154D B90200                      mov cx,2                     ; number of light blocks to color
  2293 00001550 B8DB04                      mov ax,0x04db                ; character with red foreground and black background 
  2294                                  
  2295                                  redlight: 
  2296 00001553 268905                      mov [es:di],ax               ; color first  column
  2297 00001556 26894502                    mov [es:di+2],ax             ; color second column
  2298 0000155A 83C708                      add di,8                     ; increment di to point to next light block
  2299 0000155D E2F4                        loop redlight                ; color two blocks of light
  2300                                  
  2301 0000155F B90200                      mov  cx,2
  2302 00001562 51                          push cx
  2303 00001563 E8E212                      call soundsig1
  2304                                  
  2305 00001566 E8270B                      call delay
  2306 00001569 E8240B                      call delay
  2307 0000156C E8210B                      call delay
  2308                                  
  2309 0000156F BF4401                      mov di,324                   ; point di to desired location
  2310 00001572 B90200                      mov cx,2                     ; number of light blocks to color
  2311 00001575 B8DB0E                      mov ax,0x0edb                ; character with yellow foreground and black background 
  2312                                  
  2313                                  yellowlight: 
  2314 00001578 268905                      mov [es:di],ax               ; color first  column
  2315 0000157B 26894502                    mov [es:di+2],ax             ; color second column
  2316 0000157F 83C708                      add di,8                     ; increment di to point to next light block
  2317 00001582 E2F4                        loop yellowlight             ; color two blocks of light
  2318                                  
  2319 00001584 B90200                      mov  cx,2
  2320 00001587 51                          push cx
  2321 00001588 E8BD12                      call soundsig1
  2322                                  
  2323 0000158B E8020B                      call delay
  2324 0000158E E8FF0A                      call delay
  2325 00001591 E8FC0A                      call delay
  2326                                  
  2327 00001594 BF8402                      mov di,644                   ; point di to desired location
  2328 00001597 B90200                      mov cx,2                     ; number of light blocks to color
  2329 0000159A B8DB02                      mov ax,0x02db                ; character with green foreground and black background 
  2330                                  
  2331                                  greenlight: 
  2332 0000159D 268905                      mov [es:di],ax               ; color first  column
  2333 000015A0 26894502                    mov [es:di+2],ax             ; color second column
  2334 000015A4 83C708                      add di,8                     ; increment di to point to next light block
  2335 000015A7 E2F4                        loop greenlight              ; color two blocks of light
  2336                                  
  2337 000015A9 B90300                      mov  cx,3
  2338 000015AC 51                          push cx
  2339 000015AD E89812                      call soundsig1
  2340                                  
  2341 000015B0 E8DD0A                      call delay                   
  2342 000015B3 E8DA0A                      call delay
  2343 000015B6 E8D70A                      call delay
  2344                                  
  2345 000015B9 31FF                        xor di,di                    ; point di to starting location
  2346 000015BB B8DB0B                      mov ax,0x0bdb                ; character with cyan foreground and black background
  2347 000015BE B90A00                      mov cx,10                    ; number of columns to color black
  2348 000015C1 BB0600                      mov bx,6                     ; number of rows to color black
  2349                                  
  2350                                  skyy:                            ; reprinting sky portion to save time
  2351 000015C4 57                         push di                       ; store value of di for later use
  2352 000015C5 F3AB                       rep stosw                     ; color black the desired column
  2353 000015C7 5F                         pop di                        ; restore di value 
  2354 000015C8 81C7A000                   add di,160                    ; point di to lower row
  2355 000015CC B90A00                     mov cx,10                     ; restore cx back
  2356 000015CF 4B                         dec bx                        ; one row done, decrement it
  2357 000015D0 83FB00                     cmp bx,0                      ; check if all desired rows colored black
  2358 000015D3 75EF                       jnz skyy                      ; keep coloring if false
  2359                                    
  2360 000015D5 B8DB08                     mov ax,0x08db                 ; dark grey foreground and black background
  2361 000015D8 BF7809                     mov di,2424                   ; point di to starting location
  2362 000015DB B93800                     mov cx,56                     ; number of columns to color dark grey
  2363 000015DE F3AB                       rep stosw                     ; color desired columns grey
  2364                                    
  2365 000015E0 E8AD0A                     call delay
  2366                                            
  2367 000015E3 B90700                      mov cx,7                     ; number of rows to use movs on
  2368 000015E6 BFB009                      mov di,2480                  ; destination index loaded
  2369 000015E9 BE1009                      mov si,2320                  ; source index loaded (directly above di)
  2370                                     
  2371                                  lineMov:
  2372 000015EC A5                          movsw                        ; execute movs on word data
  2373 000015ED 81EFA200                    sub di,162                   ; update di accordingly to move upwards 
  2374 000015F1 81EEA200                    sub si,162                   ; update si accordingly to move upwards
  2375                                  
  2376 000015F5 E8980A                      call delay 
  2377                                  
  2378 000015F8 49                          dec cx                       ; decrement when movsw executed once
  2379 000015F9 83F900                      cmp cx,0                     ; check if all required rows are movsw
  2380 000015FC 75EE                        jnz lineMov                  ; keep executing if not false
  2381                                      
  2382 000015FE B8DB08                      mov ax,0x08db                ; dark grey foreground and black background
  2383 00001601 BF140A                      mov di,2580                  ; point di to starting location
  2384 00001604 B93C00                      mov cx,60                    ; number of columns to color dark grey
  2385 00001607 F3AB                        rep stosw                    ; color desired columns grey
  2386                                  
  2387 00001609 26C7065005DB0F              mov word[es:1360],0x0fdb     ; color white at top of road
  2388 00001610 26C706500ADB0F              mov word[es:2640],0x0fdb     ; color white at bottom of road
  2389                                  
  2390 00001617 5F                          pop di
  2391 00001618 59                          pop cx
  2392 00001619 5B                          pop bx
  2393 0000161A 58                          pop ax
  2394 0000161B 1F                          pop ds
  2395 0000161C 07                          pop es
  2396 0000161D 5E                          pop si
  2397                                  
  2398 0000161E C3                          ret
  2399                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2400                                  ;         SPEED DIALS         ;
  2401                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2402                                  speeddials:
  2403                                  
  2404 0000161F 50                          push ax
  2405                                  
  2406 00001620 B80C00                      mov  ax,0x000c            ; load attribute
  2407 00001623 50                          push ax                   ; push attribute
  2408 00001624 B8620B                      mov  ax,2914              ; load position
  2409 00001627 50                          push ax                   ; push position
  2410 00001628 2EFF36[3B00]                push word[cs:GearMeter]   ; push decimal value
  2411 0000162D E8E0EE                      call prntdgt              ; FUNCTION CALL:  PRINTING DIGIT
  2412                                  
  2413 00001630 B80300                      mov  ax,0x0003            ; load attribute
  2414 00001633 50                          push ax                   ; push attribute
  2415 00001634 B8D80C                      mov  ax,3288              ; load position
  2416 00001637 50                          push ax                   ; push position
  2417 00001638 2EFF36[3900]                push  word[cs:SpeedMeter] ; push decimal value
  2418 0000163D E8D0EE                      call prntdgt              ; FUNCTION CALL:  PRINTING DIGIT
  2419                                  
  2420 00001640 B80300                      mov  ax,0x0003            ; load attribute
  2421 00001643 50                          push ax                   ; push attribute
  2422 00001644 B8C20C                      mov  ax,3266              ; load position
  2423 00001647 50                          push ax                   ; push position
  2424 00001648 2EFF36[3D00]                push word[cs:RpmMeter]    ; push decimal value
  2425 0000164D E8C0EE                      call prntdgt              ; FUNCTION CALL:  PRINTING DIGIT
  2426                                  
  2427 00001650 58                          pop ax
  2428                                  
  2429 00001651 C3                          ret
  2430                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2431                                  ;         SAVING MAP          ;
  2432                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2433                                  savemap:
  2434 00001652 55                             push bp
  2435 00001653 89E5                           mov  bp,sp
  2436 00001655 06                             push es
  2437 00001656 50                             push ax
  2438 00001657 53                             push bx
  2439 00001658 51                             push cx
  2440 00001659 52                             push dx
  2441 0000165A 57                             push di
  2442 0000165B 56                             push si
  2443 0000165C 1E                             push ds
  2444                                  
  2445 0000165D B800B8                         mov ax,0xb800
  2446 00001660 8EC0                           mov es,ax
  2447                                  
  2448 00001662 FC                             cld
  2449                                       
  2450 00001663 31DB                         xor bx,bx
  2451 00001665 BFA000                       mov di,160
  2452                                  
  2453                                  loopSaveR1:
  2454 00001668 268B01                       mov ax,[es:di+bx]
  2455 0000166B 2E8987[A303]                 mov [cs:SaveMapR1+bx],ax
  2456 00001670 83C302                       add bx,2
  2457 00001673 83FB18                       cmp bx,24
  2458 00001676 75F0                         jne loopSaveR1
  2459                                  
  2460 00001678 31DB                         xor bx,bx
  2461 0000167A 81C7A000                     add di,160
  2462                                  
  2463                                  loopSaveR2:
  2464 0000167E 268B01                       mov ax,[es:di+bx]
  2465 00001681 2E8987[BB03]                 mov [cs:SaveMapR2+bx],ax
  2466 00001686 83C302                       add bx,2
  2467 00001689 83FB18                       cmp bx,24
  2468 0000168C 75F0                         jne loopSaveR2
  2469                                  
  2470 0000168E 31DB                         xor bx,bx
  2471 00001690 81C7A000                     add di,160
  2472                                  
  2473                                  loopSaveR3:
  2474 00001694 268B01                       mov ax,[es:di+bx]
  2475 00001697 2E8987[D303]                 mov [cs:SaveMapR3+bx],ax
  2476 0000169C 83C302                       add bx,2
  2477 0000169F 83FB18                       cmp bx,24
  2478 000016A2 75F0                         jne loopSaveR3
  2479                                  
  2480 000016A4 31DB                         xor bx,bx
  2481 000016A6 81C7A000                     add di,160
  2482                                  
  2483                                  loopSaveR4:
  2484 000016AA 268B01                       mov ax,[es:di+bx]
  2485 000016AD 2E8987[EB03]                 mov [cs:SaveMapR4+bx],ax
  2486 000016B2 83C302                       add bx,2
  2487 000016B5 83FB18                       cmp bx,24
  2488 000016B8 75F0                         jne loopSaveR4
  2489                                  
  2490 000016BA 31DB                         xor bx,bx
  2491 000016BC 81C7A000                     add di,160
  2492                                  
  2493                                  loopSaveR5:
  2494 000016C0 268B01                       mov ax,[es:di+bx]
  2495 000016C3 2E8987[0304]                 mov [cs:SaveMapR5+bx],ax
  2496 000016C8 83C302                       add bx,2
  2497 000016CB 83FB18                       cmp bx,24
  2498 000016CE 75F0                         jne loopSaveR5
  2499                                  
  2500 000016D0 1F                          pop ds
  2501 000016D1 5E                          pop si
  2502 000016D2 5F                          pop di
  2503 000016D3 5A                          pop dx
  2504 000016D4 59                          pop cx
  2505 000016D5 5B                          pop bx
  2506 000016D6 58                          pop ax
  2507 000016D7 07                          pop es
  2508 000016D8 5D                          pop bp
  2509                                  
  2510 000016D9 C3                          ret
  2511                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2512                                  ;     PRINTING SAVED MAP      ;
  2513                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2514                                  prntsavedmap:
  2515 000016DA 55                             push bp
  2516 000016DB 89E5                           mov  bp,sp
  2517 000016DD 06                             push es
  2518 000016DE 50                             push ax
  2519 000016DF 53                             push bx
  2520 000016E0 51                             push cx
  2521 000016E1 52                             push dx
  2522 000016E2 57                             push di
  2523 000016E3 56                             push si
  2524 000016E4 1E                             push ds
  2525                                  
  2526 000016E5 B800B8                         mov ax,0xb800
  2527 000016E8 8EC0                           mov es,ax
  2528                                  
  2529 000016EA FC                             cld
  2530                                  
  2531 000016EB 31DB                         xor bx,bx
  2532 000016ED BFA000                       mov di,160
  2533                                  
  2534                                  loopprntSaveR1:
  2535 000016F0 2E8B87[A303]                 mov ax,[cs:SaveMapR1+bx]
  2536 000016F5 268901                       mov [es:di+bx],ax
  2537 000016F8 83C302                       add bx,2
  2538 000016FB 83FB18                       cmp bx,24
  2539 000016FE 75F0                         jne loopprntSaveR1
  2540                                  
  2541 00001700 31DB                         xor bx,bx
  2542 00001702 81C7A000                     add di,160
  2543                                  
  2544                                  loopprntSaveR2:
  2545 00001706 2E8B87[BB03]                 mov ax,[cs:SaveMapR2+bx]
  2546 0000170B 268901                       mov [es:di+bx],ax
  2547 0000170E 83C302                       add bx,2
  2548 00001711 83FB18                       cmp bx,24
  2549 00001714 75F0                         jne loopprntSaveR2
  2550                                  
  2551 00001716 31DB                         xor bx,bx
  2552 00001718 81C7A000                     add di,160
  2553                                  
  2554                                  loopprntSaveR3:
  2555 0000171C 2E8B87[D303]                 mov ax,[cs:SaveMapR3+bx]
  2556 00001721 268901                       mov [es:di+bx],ax
  2557 00001724 83C302                       add bx,2
  2558 00001727 83FB18                       cmp bx,24
  2559 0000172A 75F0                         jne loopprntSaveR3
  2560                                  
  2561 0000172C 31DB                         xor bx,bx
  2562 0000172E 81C7A000                     add di,160
  2563                                  
  2564                                  loopprntSaveR4:
  2565 00001732 2E8B87[EB03]                 mov ax,[cs:SaveMapR4+bx]
  2566 00001737 268901                       mov [es:di+bx],ax
  2567 0000173A 83C302                       add bx,2
  2568 0000173D 83FB18                       cmp bx,24
  2569 00001740 75F0                         jne loopprntSaveR4
  2570                                  
  2571 00001742 31DB                         xor bx,bx
  2572 00001744 81C7A000                     add di,160
  2573                                  
  2574                                  loopprntSaveR5:
  2575 00001748 2E8B87[0304]                 mov ax,[cs:SaveMapR5+bx]
  2576 0000174D 268901                       mov [es:di+bx],ax
  2577 00001750 83C302                       add bx,2
  2578 00001753 83FB18                       cmp bx,24
  2579 00001756 75F0                         jne loopprntSaveR5
  2580                                  
  2581 00001758 1F                          pop ds
  2582 00001759 5E                          pop si
  2583 0000175A 5F                          pop di
  2584 0000175B 5A                          pop dx
  2585 0000175C 59                          pop cx
  2586 0000175D 5B                          pop bx
  2587 0000175E 58                          pop ax
  2588 0000175F 07                          pop es
  2589 00001760 5D                          pop bp
  2590                                  
  2591 00001761 C3                          ret
  2592                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2593                                  ;        PRINTING MAP         ;
  2594                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2595                                  prntmap:
  2596 00001762 06                             push es
  2597 00001763 50                             push ax
  2598 00001764 51                             push cx
  2599 00001765 57                             push di
  2600 00001766 53                             push bx
  2601                                  
  2602 00001767 B800B8                        mov ax,0xb800   
  2603 0000176A 8EC0                          mov es,ax
  2604                                   
  2605 0000176C FC                            cld                ; auto increment method
  2606                                  
  2607 0000176D 31DB                          xor bx,bx          ; set dx to 0
  2608 0000176F BFA000                        mov di,160         ; move di to location
  2609 00001772 B8DB00                        mov ax,0x00db      ; black attribute character
  2610                                   
  2611                                  loopblck:  
  2612 00001775 B90C00                        mov cx,12          ; number of columns to color
  2613 00001778 F3AB                          rep stosw          ; color desired number of columns
  2614 0000177A 81C78800                      add di,136         ; update di accordingly  
  2615 0000177E 43                            inc bx             ; increment bx
  2616 0000177F 83FB05                        cmp bx,5           ; check if all rows colored
  2617 00001782 75F1                          jne loopblck       ; keep coloring if false
  2618                                  
  2619                                  
  2620 00001784 BFA400                         mov di,164        ; move di to to location
  2621 00001787 B8CD0F                         mov ax,0x0fcd     ; white attribute character
  2622 0000178A B90800                         mov cx,8          ; number of columns to color
  2623 0000178D F3AB                           rep stosw         ; color desired number of columns
  2624                                   
  2625 0000178F 31DB                           xor bx,bx         ; set dx to 0
  2626 00001791 BF4201                         mov di,322        ; move di to location
  2627 00001794 B8BA0F                         mov ax,0x0fba     ; white attribute character
  2628                                  
  2629                                  loopmapline1:
  2630 00001797 B90100                           mov cx,1         ; number of columns to color
  2631 0000179A F3AB                             rep stosw        ; color desired columns
  2632 0000179C 81C79E00                         add di,158       ; update di accordingly
  2633 000017A0 43                               inc bx           ; increment bx
  2634 000017A1 83FB03                           cmp bx,3         ; check if all rows colored
  2635 000017A4 75F1                             jne loopmapline1 ; keep coloring if false
  2636                                  
  2637 000017A6 BF2403                         mov di,804         ; move di to location
  2638 000017A9 B8CD0F                         mov ax,0x0fcd      ; white attribute character
  2639 000017AC B90800                         mov cx,8           ; number of columns to color
  2640 000017AF F3AB                           rep stosw          ; color desired columns
  2641                                  
  2642 000017B1 31DB                           xor bx,bx         ; set dx to 0
  2643 000017B3 BF5401                         mov di,340        ; move di to location
  2644 000017B6 B8BA0F                         mov ax,0x0fba     ; white attribute character
  2645                                  
  2646                                  loopmapline2:
  2647 000017B9 B90100                           mov cx,1         ; number of columns to color
  2648 000017BC F3AB                             rep stosw        ; color desired columns
  2649 000017BE 81C79E00                         add di,158       ; update di accordingly
  2650 000017C2 43                               inc bx           ; increment bx
  2651 000017C3 83FB03                           cmp bx,3         ; check if all rows colored
  2652 000017C6 75F1                             jne loopmapline2 ; keep coloring if false
  2653                                  
  2654 000017C8 BFA200                      mov di,162            ; move di to location
  2655 000017CB B8C90F                      mov ax,0x0fc9         ; white attribute character
  2656 000017CE 268905                      mov [es:di],ax        ; print attribute on screen
  2657 000017D1 B8BB0F                      mov ax,0x0fbb         ; white attribute character
  2658 000017D4 26894512                    mov [es:di+18],ax     ; print attribute on screen
  2659 000017D8 B8C80F                      mov ax,0x0fc8         ; white attribute character
  2660 000017DB 2689858002                  mov [es:di+640],ax    ; print attribute on screen
  2661 000017E0 B8BC0F                      mov ax,0x0fbc         ; white attribute character
  2662 000017E3 2689859202                  mov [es:di+658],ax    ; print attribute on screen
  2663                                  
  2664 000017E8 26C706B000CB0F              mov word[es:176],0x0fcb    ; print attribute on screen
  2665 000017EF 26C7065001BA0F              mov word[es:336],0x0fba    ; print attribute on screen
  2666 000017F6 26C706F001BA0F              mov word[es:496],0x0fba    ; print attribute on screen
  2667 000017FD 26C7069002BA0F              mov word[es:656],0x0fba    ; print attribute on screen
  2668 00001804 26C7063003CA0F              mov word[es:816],0x0fca    ; print attribute on screen
  2669                                  
  2670 0000180B 26C7068202DB02              mov word[es:642],0x02db ; print starting point of race
  2671                                  
  2672 00001812 5B                             pop bx
  2673 00001813 5F                             pop di
  2674 00001814 59                             pop cx
  2675 00001815 58                             pop ax
  2676 00001816 07                             pop es
  2677                                  
  2678 00001817 C3                             ret
  2679                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2680                                  ;    PRINTING BACKGROUND S    ;
  2681                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2682                                  prntbgS:
  2683 00001818 55                             push bp
  2684 00001819 89E5                           mov  bp,sp
  2685 0000181B 83EC02                         sub  sp,2                 ; create space for local variable
  2686 0000181E 06                             push es
  2687 0000181F 50                             push ax
  2688 00001820 53                             push bx
  2689 00001821 51                             push cx
  2690 00001822 52                             push dx
  2691 00001823 57                             push di
  2692 00001824 56                             push si
  2693 00001825 1E                             push ds
  2694                                  
  2695 00001826 B800B8                         mov ax,0xb800
  2696 00001829 8EC0                           mov es,ax
  2697 0000182B 8ED8                           mov ds,ax
  2698                                  
  2699 0000182D FC                             cld                       ; auto increment method 
  2700                                  
  2701 0000182E B82007                        mov ax,0x0720
  2702 00001831 31FF                          xor di,di
  2703 00001833 B95005                        mov cx,1360
  2704 00001836 F3AB                          rep stosw
  2705                                  
  2706 00001838 B8DB08                         mov ax,0x08db             ; dark grey foreground and black background
  2707                                  
  2708 0000183B B92A00                         mov cx,42                 ; number of columns to color
  2709 0000183E BF2605                         mov di,1318               ; place di to start of grass print position
  2710 00001841 F3AB                           rep stosw                 ; color desired number of cloumns
  2711                                  
  2712 00001843 B92E00                         mov cx,46                 ; number of columns to color
  2713 00001846 BFC205                         mov di,1474               ; place di to start of grass print position
  2714 00001849 F3AB                           rep stosw                 ; color desired number of cloumns
  2715                                  
  2716 0000184B B93200                         mov cx,50                 ; number of columns to color
  2717 0000184E BF5E06                         mov di,1630               ; place di to start of grass print position
  2718 00001851 F3AB                           rep stosw                 ; color desired number of cloumns
  2719                                  
  2720 00001853 B93600                         mov cx,54                 ; number of columns to color
  2721 00001856 BFFA06                         mov di,1786               ; place di to start of grass print position
  2722 00001859 F3AB                           rep stosw                 ; color desired number of cloumns
  2723                                  
  2724 0000185B B93A00                         mov cx,58                 ; number of columns to color
  2725 0000185E BF9607                         mov di,1942               ; place di to start of grass print position
  2726 00001861 F3AB                           rep stosw                 ; color desired number of cloumns
  2727                                  
  2728 00001863 B93E00                         mov cx,62                 ; number of columns to color
  2729 00001866 BF3208                         mov di,2098               ; place di to start of grass print position
  2730 00001869 F3AB                           rep stosw                 ; color desired number of cloumns
  2731                                  
  2732 0000186B B94200                         mov cx,66                 ; number of columns to color
  2733 0000186E BFCE08                         mov di,2254               ; place di to start of grass print position
  2734 00001871 F3AB                           rep stosw                 ; color desired number of cloumns
  2735                                  
  2736 00001873 B94600                         mov cx,70                 ; number of columns to color
  2737 00001876 BF6A09                         mov di,2410               ; place di to start of grass print position
  2738 00001879 F3AB                           rep stosw                 ; color desired number of cloumns
  2739                                  
  2740 0000187B B94A00                         mov cx,74                 ; number of columns to color
  2741 0000187E BF060A                         mov di,2566               ; place di to start of grass print position
  2742 00001881 F3AB                           rep stosw                 ; color desired number of cloumns
  2743                                  
  2744 00001883 B8DB7F                         mov ax,0x7fdb
  2745 00001886 B90100                         mov cx,1                  ; number of columns to color
  2746 00001889 BFF005                         mov di,1520               ; place di to start of grass print position
  2747 0000188C C746FE0000                     mov word[bp-2],0          ; initialize local variable to zero
  2748 00001891 BB0600                         mov bx,6                  ; put 6 in bx to print 6 white dashes
  2749 00001894 BE0000                         mov si,0
  2750                                  
  2751                                  looplineT1:
  2752 00001897 57                             push di                   ; store di for next loop iteration
  2753 00001898 51                             push cx                   ; store cx for next loop iteration
  2754 00001899 F3AB                           rep stosw                 ; color the desired row grey
  2755 0000189B 59                             pop cx                    ; restore cx value of columns to color
  2756 0000189C 5F                             pop di                    ; restore dx value of starting point in row
  2757 0000189D 81C7A000                       add di,160                ; add 160 to move to next row (below)
  2758 000018A1 FF46FE                         inc word[bp-2]            ; increment local variable count
  2759 000018A4 8B56FE                         mov dx,word[bp-2]         ; copy the counter in dx 
  2760 000018A7 D1EA                           shr dx,1                  ; shift right to check if odd or even
  2761 000018A9 7209                           jc looplineT2             ; if odd, dont increment di again
  2762 000018AB 81C7A000                       add di,160                ; add 160 in di to print space between lines
  2763 000018AF C746FE0000                     mov word[bp-2],0          ; reset the local variable
  2764                                  looplineT2: 
  2765 000018B4 46                             inc si                    ; si to control the executions of loop
  2766 000018B5 39DE                           cmp si, bx                ; check if desired rows are colored yet or no 
  2767 000018B7 75DE                           jnz looplineT1            ; keep printing line
  2768                                  
  2769 000018B9 BB0000                         mov bx,0
  2770 000018BC BF2205                         mov di,1314
  2771                                  ysl:
  2772 000018BF 83C301                         add bx,1 
  2773 000018C2 B8DB0E                         mov ax,0x0edb
  2774 000018C5 268905                         mov [es:di],ax
  2775 000018C8 26894502                       mov [es:di+2],ax
  2776 000018CC 81C79C00                       add di,156
  2777 000018D0 83FB09                         cmp bx,9
  2778 000018D3 75EA                           jne ysl
  2779                                  
  2780 000018D5 BB0000                         mov bx,0
  2781 000018D8 BF7A05                         mov di,1402
  2782                                  ysl2:
  2783 000018DB 83C301                         add bx,1 
  2784 000018DE B8DB0E                         mov ax,0x0edb
  2785 000018E1 268905                         mov [es:di],ax
  2786 000018E4 26894502                       mov [es:di+2],ax
  2787 000018E8 81C7A400                       add di,164
  2788 000018EC 83FB09                         cmp bx,9
  2789 000018EF 75EA                           jne ysl2
  2790                                  
  2791 000018F1 BFE00B                      mov di,3040                ; point di to starting location
  2792 000018F4 B90600                      mov cx, 6                  ; number of rows to color
  2793 000018F7 B8DB08                      mov ax,0x08db              ; grey color attribute
  2794                                  
  2795                                  loopRMrdT1: 
  2796 000018FA 57                           push di                   ; store di for later use
  2797 000018FB 51                           push cx                   ; store cx for later use
  2798 000018FC B91000                       mov cx,16                 ; number of columns to color
  2799 000018FF F3AB                         rep stosw                 ; color desired columns
  2800 00001901 59                           pop cx                    ; restore cx
  2801 00001902 5F                           pop di                    ; restore di
  2802 00001903 81C7A000                     add di,160                ; update di
  2803 00001907 49                           dec cx                    ; decrement row count
  2804 00001908 83F900                       cmp cx,0                  ; check if all rows colored
  2805 0000190B 75ED                         jnz loopRMrdT1            ; keep coloring if false
  2806                                  
  2807 0000190D 26C706D80DDB0F               mov word[es:3544],0x0fdb  ; print white road line
  2808 00001914 26C706180FDB0F               mov word[es:3864],0x0fdb  ; print white road line
  2809                                  
  2810 0000191B BFC00D                       mov di,3520               ; point di to starting location
  2811 0000191E B8DB00                       mov ax,0x00db             ; green color attribute
  2812 00001921 B90600                       mov cx,6                  ; number of columns to color
  2813 00001924 BB0300                       mov bx,3                  ; number of rows to color
  2814                                  
  2815                                  loopRMT2:
  2816 00001927 57                           push di                   ; store di for later use
  2817 00001928 51                           push cx                   ; store cx for later use
  2818 00001929 F3AB                         rep stosw                 ; color desired columns
  2819 0000192B 26C705DB0E                   mov word[es:di],0x0edb    ; print white boundry of grass
  2820 00001930 59                           pop cx                    ; restore cx
  2821 00001931 5F                           pop di                    ; restore di
  2822 00001932 81C7A000                     add di,160                ; update di
  2823 00001936 83E902                       sub cx,2                  ; decrement columns to color
  2824 00001939 83EB01                       sub bx,1                  ; decrement rows counter
  2825 0000193C 83FB00                       cmp bx,0                  ; check if all rows colored
  2826 0000193F 75E6                         jnz loopRMT2              ; keep coloring if false
  2827                                  
  2828 00001941 BFE00B                      mov di,3040                ; point di to starting location
  2829 00001944 B91000                      mov cx,16                  ; number of rows to color
  2830 00001947 B8DB00                      mov ax,0x00db              ; grey color attribute
  2831 0000194A F3AB                        rep stosw                  ; color desired columns
  2832                                  
  2833 0000194C BF800C                      mov di,3200                ; point di to starting location
  2834 0000194F B91000                      mov cx,16                  ; number of rows to color
  2835 00001952 B8DB00                      mov ax,0x00db              ; grey color attribute
  2836 00001955 F3AB                        rep stosw                  ; color desired columns
  2837                                  
  2838 00001957 BF200D                      mov di,3360                ; point di to starting location
  2839 0000195A B91000                      mov cx,16                  ; number of rows to color
  2840 0000195D B8DB00                      mov ax,0x00db              ; grey color attribute
  2841 00001960 F3AB                        rep stosw                  ; color desired columns
  2842                                  
  2843 00001962 BFE40B                      mov di,3044                ; point di to starting location
  2844 00001965 B90E00                      mov cx,14                  ; number of rows to color
  2845 00001968 B8C40F                      mov ax,0x0fc4              ; grey color attribute
  2846 0000196B F3AB                        rep stosw                  ; color desired columns
  2847                                  
  2848 0000196D BF2C0D                      mov di,3372                ; point di to starting location
  2849 00001970 B90A00                      mov cx,10                  ; number of rows to color
  2850 00001973 B8C40F                      mov ax,0x0fc4              ; grey color attribute
  2851 00001976 F3AB                        rep stosw                  ; color desired columns
  2852                                  
  2853 00001978 BF2C0D                      mov di,3372
  2854 0000197B B8DA0F                      mov ax,0x0fda
  2855 0000197E 268905                      mov [es:di],ax
  2856 00001981 BFE40B                      mov di,3044
  2857 00001984 B8DA0F                      mov ax,0x0fda
  2858 00001987 268905                      mov [es:di],ax
  2859                                  
  2860 0000198A BB0000                      mov bx,0
  2861 0000198D BF840C                      mov di,3204
  2862                                  
  2863                                  trl2:
  2864 00001990 83C301                       add bx,1
  2865 00001993 B8B30F                       mov ax,0x0fb3
  2866 00001996 268905                       mov [es:di],ax
  2867 00001999 81C7A000                     add di,160
  2868 0000199D 83FB04                       cmp bx,4
  2869 000019A0 75EE                         jne trl2
  2870                                  
  2871 000019A2 1F                             pop ds
  2872 000019A3 5E                             pop si
  2873 000019A4 5F                             pop di
  2874 000019A5 5A                             pop dx
  2875 000019A6 59                             pop cx
  2876 000019A7 5B                             pop bx
  2877 000019A8 58                             pop ax
  2878 000019A9 07                             pop es
  2879 000019AA 83C402                         add sp,2
  2880 000019AD 5D                             pop bp
  2881                                  
  2882 000019AE C3                             ret
  2883                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2884                                  ;    CLEARING SCREEN TUNNEL   ;
  2885                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  2886                                  clrscrnTunnel:
  2887 000019AF 06                             push es
  2888 000019B0 50                             push ax
  2889 000019B1 51                             push cx
  2890 000019B2 57                             push di
  2891 000019B3 53                             push bx
  2892                                  
  2893 000019B4 B800B8                         mov ax,0xb800
  2894 000019B7 8EC0                           mov es,ax
  2895                                  
  2896 000019B9 FC                             cld              ; auto increment method
  2897                                  
  2898 000019BA 31FF                           xor di,di        ; load di to point to top left of screen
  2899 000019BC B82007                         mov ax,0x0720    ; load space character on black background
  2900 000019BF B98002                         mov cx,640       ; number of columns to color
  2901 000019C2 F3AB                           rep stosw        ; repeat until  cx turns zero
  2902                                  
  2903 000019C4 B91000                        mov cx,16  
  2904 000019C7 BF0005                        mov di,1280 
  2905 000019CA F3AB                          rep stosw         ; repeat until  cx turns zero
  2906                                  
  2907 000019CC B90E00                        mov cx,14
  2908 000019CF BFA005                        mov di,1440
  2909 000019D2 F3AB                          rep stosw
  2910                                  
  2911 000019D4 B90C00                        mov cx,12
  2912 000019D7 BF4006                        mov di,1600
  2913 000019DA F3AB                          rep stosw
  2914                                  
  2915 000019DC B90A00                        mov cx,10
  2916 000019DF BFE006                        mov di,1760
  2917 000019E2 F3AB                          rep stosw
  2918                                       
  2919 000019E4 B90800                        mov cx,8
  2920 000019E7 BF8007                        mov di,1920
  2921 000019EA F3AB                          rep stosw
  2922                                  
  2923 000019EC B90600                        mov cx,6
  2924 000019EF BF2008                        mov di,2080
  2925 000019F2 F3AB                          rep stosw
  2926                                  
  2927 000019F4 B90400                        mov cx,4
  2928 000019F7 BFC008                        mov di,2240
  2929 000019FA F3AB                          rep stosw
  2930                                  
  2931 000019FC B90300                        mov cx,3
  2932 000019FF BF6009                        mov di,2400
  2933 00001A02 F3AB                          rep stosw
  2934                                  
  2935 00001A04 B91000                        mov cx,16  
  2936 00001A07 BF7E05                        mov di, 1406
  2937 00001A0A F3AB                          rep stosw
  2938                                    
  2939 00001A0C B90E00                        mov cx,14
  2940 00001A0F BF2206                        mov di,1570
  2941 00001A12 F3AB                          rep stosw
  2942                                  
  2943 00001A14 B90C00                        mov cx,12
  2944 00001A17 BFC606                        mov di,1734
  2945 00001A1A F3AB                          rep stosw
  2946                                  
  2947 00001A1C B90A00                        mov cx,10
  2948 00001A1F BF6A07                        mov di,1898
  2949 00001A22 F3AB                          rep stosw
  2950                                  
  2951 00001A24 B90800                        mov cx,8
  2952 00001A27 BF0E08                        mov di,2062
  2953 00001A2A F3AB                          rep stosw
  2954                                  
  2955 00001A2C B90600                        mov cx,6
  2956 00001A2F BFB208                        mov di,2226
  2957 00001A32 F3AB                          rep stosw
  2958                                  
  2959 00001A34 B90400                        mov cx,4
  2960 00001A37 BF5609                        mov di,2390
  2961 00001A3A F3AB                          rep stosw
  2962                                  
  2963 00001A3C B90300                        mov cx,3
  2964 00001A3F BFFA09                        mov di,2554
  2965 00001A42 F3AB                          rep stosw
  2966                                  
  2967 00001A44 B90800                        mov cx,8
  2968 00001A47 BF8E0C                        mov di,3214
  2969 00001A4A F3AB                          rep stosw
  2970                                    
  2971 00001A4C BB0000                      mov bx,0
  2972 00001A4F BF860C                      mov di,3206
  2973                                  
  2974                                   ctrl3:
  2975 00001A52 83C301                         add bx,1
  2976 00001A55 B82007                         mov ax,0x0720
  2977 00001A58 268905                         mov [es:di],ax
  2978 00001A5B 81C7A000                       add di,160
  2979 00001A5F 83FB04                         cmp bx,4
  2980 00001A62 75EE                           jne ctrl3
  2981                                  
  2982 00001A64 BB0000                       mov bx,0
  2983                                       ;mov di,3208
  2984 00001A67 BF280D                       mov di,3368
  2985                                  
  2986                                  ctrl4:
  2987 00001A6A 83C301                         add bx,1
  2988 00001A6D B82007                         mov ax,0x0720
  2989 00001A70 268905                         mov [es:di],ax
  2990 00001A73 81C7A000                       add di,160
  2991 00001A77 83FB02                         cmp bx,2
  2992 00001A7A 75EE                           jne ctrl4
  2993                                  
  2994 00001A7C BB0000                       mov bx,0
  2995                                       ;mov di,3208
  2996 00001A7F BF2A0D                       mov di,3370
  2997                                  
  2998                                  ctrl5:
  2999 00001A82 83C301                         add bx,1
  3000 00001A85 B82007                         mov ax,0x0720
  3001 00001A88 268905                         mov [es:di],ax
  3002 00001A8B 81C7A000                       add di,160
  3003 00001A8F 83FB02                         cmp bx,2
  3004 00001A92 75EE                           jne ctrl5
  3005                                  
  3006 00001A94 5B                             pop bx
  3007 00001A95 5F                             pop di
  3008 00001A96 59                             pop cx
  3009 00001A97 58                             pop ax
  3010 00001A98 07                             pop es
  3011                                  
  3012 00001A99 C3                             ret
  3013                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3014                                  ;     MOVEMENT ROAD TUNNEL    ;
  3015                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3016                                  movrdTunnel:    
  3017 00001A9A 55                             push bp
  3018 00001A9B 89E5                           mov  bp,sp
  3019 00001A9D 83EC02                         sub  sp,2                 ; create space for local variable
  3020 00001AA0 06                             push es
  3021 00001AA1 50                             push ax
  3022 00001AA2 53                             push bx
  3023 00001AA3 51                             push cx
  3024 00001AA4 52                             push dx
  3025 00001AA5 57                             push di
  3026 00001AA6 56                             push si
  3027 00001AA7 1E                             push ds
  3028                                  
  3029 00001AA8 B800B8                         mov ax,0xb800
  3030 00001AAB 8EC0                           mov es,ax
  3031 00001AAD 8ED8                           mov ds,ax
  3032                                  
  3033 00001AAF FC                             cld                       ; auto increment method 
  3034                                  
  3035 00001AB0 B90700                      mov cx,7                     ; number of rows to use movs on
  3036 00001AB3 BFB009                      mov di,2480                  ; destination index loaded
  3037 00001AB6 BE1009                      mov si,2320                  ; source index loaded (directly above di)
  3038 00001AB9 268B05                      mov ax,[es:di]               ; store the memory location in ax
  3039                                  
  3040                                  TunnelroadMov:
  3041 00001ABC A5                          movsw                        ; execute movs on word data
  3042 00001ABD 81EFA200                    sub di,162                   ; update di accordingly to move upwards 
  3043 00001AC1 81EEA200                    sub si,162                   ; update si accordingly to move upwards
  3044 00001AC5 49                          dec cx                       ; decrement when movsw executed once
  3045 00001AC6 83F900                      cmp cx,0                     ; check if all required rows are movsw
  3046 00001AC9 75F1                        jnz TunnelroadMov            ; keep executing if not false
  3047 00001ACB 268905                      mov [es:di],ax               ; replace the stored memory location
  3048                                  
  3049 00001ACE BF180F                      mov di,3864                  ; destination index loaded
  3050 00001AD1 BE780E                      mov si,3704                  ; source index loaded (directly above di)
  3051 00001AD4 268B05                      mov ax,[es:di]               ; store the memory location in ax
  3052 00001AD7 B90200                      mov cx,2                     ; number of rows to use movs on
  3053                                  
  3054                                  TunnelrearmirMov:
  3055 00001ADA A5                          movsw                        ; execute movs on word data
  3056 00001ADB 81EFA200                    sub di,162                   ; update di accordingly to move upwards 
  3057 00001ADF 81EEA200                    sub si,162                   ; update si accordingly to move upwards
  3058 00001AE3 49                          dec cx                       ; decrement when movsw executed once
  3059 00001AE4 83F900                      cmp cx,0                     ; check if all required rows are movsw
  3060 00001AE7 75F1                        jnz TunnelrearmirMov         ; keep executing if not false
  3061 00001AE9 268905                      mov [es:di],ax               ; replace the stored memory location
  3062                                  
  3063 00001AEC 1F                             pop ds
  3064 00001AED 5E                             pop si
  3065 00001AEE 5F                             pop di
  3066 00001AEF 5A                             pop dx
  3067 00001AF0 59                             pop cx
  3068 00001AF1 5B                             pop bx
  3069 00001AF2 58                             pop ax
  3070 00001AF3 07                             pop es
  3071 00001AF4 83C402                         add sp,2
  3072 00001AF7 5D                             pop bp
  3073                                  
  3074 00001AF8 C3                             ret
  3075                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3076                                  ; PRINTING ROAD TUNNEL TYPE I ;
  3077                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3078                                  prntrdTunnel1:    
  3079 00001AF9 55                             push bp
  3080 00001AFA 89E5                           mov  bp,sp
  3081 00001AFC 83EC02                         sub  sp,2                 ; create space for local variable
  3082 00001AFF 06                             push es
  3083 00001B00 50                             push ax
  3084 00001B01 53                             push bx
  3085 00001B02 51                             push cx
  3086 00001B03 52                             push dx
  3087 00001B04 57                             push di
  3088 00001B05 56                             push si
  3089                                  
  3090 00001B06 B800B8                         mov ax,0xb800
  3091 00001B09 8EC0                           mov es,ax
  3092                                  
  3093 00001B0B FC                             cld                       ; auto increment method 
  3094                                        
  3095 00001B0C B8C40F                         mov ax,0x0fc4             ; white on black background
  3096 00001B0F B92A00                         mov cx,42                 ; number of columns to color
  3097 00001B12 BFE603                         mov di,998                ; place di to start of grass print position
  3098 00001B15 F3AB                           rep stosw                 ; color desired number of cloumns
  3099                                  
  3100 00001B17 B8B30F                         mov ax,0x0fb3
  3101 00001B1A 2689454C                       mov [es:di+76],ax      
  3102 00001B1E 2689859E00                     mov [es:di+158],ax  
  3103                                       
  3104 00001B23 BFE603                        mov di,998 
  3105 00001B26 B8DA0F                        mov ax,0x0fda
  3106 00001B29 268905                        mov [es:di],ax
  3107 00001B2C BF3804                        mov di,1080 
  3108 00001B2F B8BF0F                        mov ax,0x0fbf
  3109 00001B32 268905                        mov [es:di],ax
  3110                                        
  3111 00001B35 B8C40F                         mov ax,0x0fc4             ; dark grey foreground and black background
  3112 00001B38 B93200                         mov cx,50                 ; number of columns to color
  3113 00001B3B BF3E03                         mov di,830                ; place di to start of grass print position
  3114 00001B3E F3AB                           rep stosw                 ; color desired number of cloumns
  3115                                  
  3116 00001B40 BB0000                        mov bx,0
  3117                                  
  3118                                   tl2:
  3119 00001B43 83C301                         add bx,1
  3120 00001B46 B8B30F                         mov ax,0x0fb3
  3121 00001B49 2689453C                       mov [es:di+60],ax
  3122 00001B4D 2689859E00                     mov [es:di+158],ax
  3123 00001B52 81C7A000                       add di,160
  3124 00001B56 83FB03                         cmp bx,3
  3125 00001B59 75E8                           jne tl2
  3126                                  
  3127 00001B5B BF3E03                       mov di,830 
  3128 00001B5E B8DA0F                       mov ax,0x0fda
  3129 00001B61 268905                       mov [es:di],ax
  3130 00001B64 BFA003                       mov di,928 
  3131 00001B67 B8BF0F                       mov ax,0x0fbf
  3132 00001B6A 268905                       mov [es:di],ax
  3133                                        
  3134 00001B6D B8C40F                        mov ax,0x0fc4             ; dark grey foreground and black background
  3135 00001B70 B94200                        mov cx,66                 ; number of columns to color
  3136 00001B73 BFEE01                        mov di,494                ; place di to start of grass print position
  3137 00001B76 F3AB                          rep stosw                 ; color desired number of cloumns
  3138                                  
  3139 00001B78 BB0000                       mov bx,0
  3140                                  
  3141                                   tl4:
  3142 00001B7B 83C301                       add bx,1
  3143 00001B7E B8B30F                       mov ax,0x0fb3
  3144 00001B81 2689451C                     mov [es:di+28],ax
  3145 00001B85 2689859E00                   mov [es:di+158],ax
  3146 00001B8A 81C7A000                     add di,160
  3147 00001B8E 83FB09                       cmp bx,9
  3148 00001B91 75E8                         jne tl4
  3149                                  
  3150 00001B93 BFEE01                        mov di,494 
  3151 00001B96 B8DA0F                        mov ax,0x0fda
  3152 00001B99 268905                        mov [es:di],ax
  3153 00001B9C BF7002                        mov di,624 
  3154 00001B9F B8BF0F                        mov ax,0x0fbf
  3155 00001BA2 268905                        mov [es:di],ax
  3156                                  
  3157 00001BA5 B8C40F                        mov ax,0x0fc4             ; dark grey foreground and black background
  3158 00001BA8 B94A00                        mov cx,74                 ; number of columns to color
  3159 00001BAB BF4601                        mov di,326                ; place di to start of grass print position
  3160 00001BAE F3AB                          rep stosw                 ; color desired number of cloumns
  3161                                  
  3162 00001BB0 BB0000                        mov bx,0
  3163                                   tl5:
  3164 00001BB3 83C301                         add bx,1
  3165 00001BB6 B8B30F                         mov ax,0x0fb3
  3166 00001BB9 2689450C                       mov [es:di+12],ax
  3167 00001BBD 2689859E00                     mov [es:di+158],ax
  3168 00001BC2 81C7A000                       add di,160
  3169 00001BC6 83FB0C                         cmp bx,12
  3170 00001BC9 75E8                           jne tl5
  3171                                  
  3172 00001BCB BF4601                        mov di,326 
  3173 00001BCE B8DA0F                        mov ax,0x0fda
  3174 00001BD1 268905                        mov [es:di],ax
  3175 00001BD4 BFD801                        mov di,472 
  3176 00001BD7 B8BF0F                        mov ax,0x0fbf
  3177 00001BDA 268905                        mov [es:di],ax
  3178                                  
  3179 00001BDD B8B20F                         mov ax,0x0fb2            ; dark grey foreground and black background
  3180 00001BE0 B90800                         mov cx,8                 ; number of columns to color
  3181 00001BE3 BFC802                         mov di,712               ; place di to start of grass print position
  3182 00001BE6 F3AB                           rep stosw
  3183                                  
  3184 00001BE8 B8DC0F                         mov ax,0x0fdc            ; dark grey foreground and black background
  3185 00001BEB B90400                         mov cx,4                 ; number of columns to color
  3186 00001BEE BF8E0C                         mov di,3214              ; place di to start of grass print position
  3187 00001BF1 F3AB                           rep stosw
  3188                                  
  3189 00001BF3 BB0000                     mov bx,0
  3190 00001BF6 BF860C                     mov di,3206
  3191                                  
  3192                                   trl3:
  3193 00001BF9 83C301                         add bx,1
  3194 00001BFC B8B30F                         mov ax,0x0fb3
  3195 00001BFF 268905                         mov [es:di],ax
  3196 00001C02 81C7A000                       add di,160
  3197 00001C06 83FB04                         cmp bx,4
  3198 00001C09 75EE                           jne trl3
  3199                                  
  3200 00001C0B 5E                             pop si
  3201 00001C0C 5F                             pop di
  3202 00001C0D 5A                             pop dx
  3203 00001C0E 59                             pop cx
  3204 00001C0F 5B                             pop bx
  3205 00001C10 58                             pop ax
  3206 00001C11 07                             pop es
  3207 00001C12 83C402                         add sp,2
  3208 00001C15 5D                             pop bp
  3209                                  
  3210 00001C16 C3                             ret
  3211                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3212                                  ; PRINTING ROAD TUNNEL TYPE II;
  3213                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3214                                  prntrdTunnel2:    
  3215 00001C17 55                             push bp
  3216 00001C18 89E5                           mov  bp,sp
  3217 00001C1A 83EC02                         sub  sp,2                 ; create space for local variable
  3218 00001C1D 06                             push es
  3219 00001C1E 50                             push ax
  3220 00001C1F 53                             push bx
  3221 00001C20 51                             push cx
  3222 00001C21 52                             push dx
  3223 00001C22 57                             push di
  3224 00001C23 56                             push si
  3225                                  
  3226 00001C24 B800B8                         mov ax,0xb800
  3227 00001C27 8EC0                           mov es,ax
  3228                                  
  3229 00001C29 FC                             cld                       ; auto increment method 
  3230                                  
  3231 00001C2A B8C40F                         mov ax,0x0fc4             ; dark grey foreground and black background
  3232 00001C2D B92A00                         mov cx,42                 ; number of columns to color
  3233 00001C30 BFE603                         mov di,998                ; place di to start of grass print position
  3234 00001C33 F3AB                           rep stosw                 ; color desired number of cloumns
  3235                                  
  3236 00001C35 B8B30F                         mov ax,0x0fb3
  3237 00001C38 2689454C                       mov [es:di+76],ax
  3238 00001C3C 2689859E00                     mov [es:di+158],ax
  3239                                  
  3240 00001C41 BFE603                        mov di,998
  3241 00001C44 B8DA0F                        mov ax,0x0fda
  3242 00001C47 268905                        mov [es:di],ax
  3243 00001C4A BF3804                        mov di,1080
  3244 00001C4D B8BF0F                        mov ax,0x0fbf
  3245 00001C50 268905                        mov [es:di],ax
  3246                                  
  3247 00001C53 B8C40F                         mov ax,0x0fc4             ; dark grey foreground and black background
  3248 00001C56 B93A00                         mov cx,58                 ; number of columns to color
  3249 00001C59 BF9602                         mov di,662                ; place di to start of grass print position
  3250 00001C5C F3AB                           rep stosw                 ; color desired number of cloumns
  3251                                  
  3252 00001C5E BB0000                         mov bx,0
  3253                                  
  3254                                   tl32:
  3255 00001C61 83C301                        add bx,1
  3256 00001C64 B8B30F                        mov ax,0x0fb3
  3257 00001C67 2689452C                      mov [es:di+44],ax
  3258 00001C6B 2689859E00                    mov [es:di+158],ax
  3259 00001C70 81C7A000                      add di,160
  3260 00001C74 83FB06                        cmp bx,6
  3261 00001C77 75E8                          jne tl32
  3262                                  
  3263 00001C79 BF9602                       mov di,662 
  3264 00001C7C B8DA0F                       mov ax,0x0fda
  3265 00001C7F 268905                       mov [es:di],ax
  3266 00001C82 BF0803                       mov di,776 
  3267 00001C85 B8BF0F                       mov ax,0x0fbf
  3268 00001C88 268905                       mov [es:di],ax
  3269                                  
  3270 00001C8B B8C40F                         mov ax,0x0fc4             ; dark grey foreground and black background
  3271 00001C8E B94A00                         mov cx,74                 ; number of columns to color
  3272 00001C91 BF4601                         mov di,326                ; place di to start of grass print position
  3273 00001C94 F3AB                           rep stosw                 ; color desired number of cloumns
  3274                                  
  3275 00001C96 BB0000                        mov bx,0
  3276                                  
  3277                                   tl52:
  3278 00001C99 83C301                        add bx,1
  3279 00001C9C B8B30F                        mov ax,0x0fb3
  3280 00001C9F 2689450C                      mov [es:di+12],ax
  3281 00001CA3 2689859E00                    mov [es:di+158],ax
  3282 00001CA8 81C7A000                      add di,160
  3283 00001CAC 83FB0C                        cmp bx,12
  3284 00001CAF 75E8                          jne tl52
  3285                                  
  3286 00001CB1 BF4601                       mov di,326 
  3287 00001CB4 B8DA0F                       mov ax,0x0fda
  3288 00001CB7 268905                       mov [es:di],ax
  3289 00001CBA BFD801                       mov di,472 
  3290 00001CBD B8BF0F                       mov ax,0x0fbf
  3291 00001CC0 268905                       mov [es:di],ax
  3292                                  
  3293 00001CC3 B8B20F                         mov ax,0x0fb2            ; dark grey foreground and black background
  3294 00001CC6 B90800                         mov cx,8                 ; number of columns to color
  3295 00001CC9 BF6A03                         mov di,874               ; place di to start of grass print position
  3296 00001CCC F3AB                           rep stosw
  3297                                  
  3298 00001CCE B8B20F                         mov ax,0x0fb2            ; dark grey foreground and black background
  3299 00001CD1 B90800                         mov cx,8                 ; number of columns to color
  3300 00001CD4 BF2402                         mov di,548               ; place di to start of grass print position
  3301 00001CD7 F3AB                           rep stosw
  3302                                  
  3303 00001CD9 B8DF0F                         mov ax,0x0fdf            ; dark grey foreground and black background
  3304 00001CDC B90400                         mov cx,4                 ; number of columns to color
  3305 00001CDF BF960C                         mov di,3222              ; place di to start of grass print position
  3306 00001CE2 F3AB                           rep stosw  
  3307                                  
  3308 00001CE4 BB0000                       mov bx,0
  3309                                       ;mov di,3208
  3310 00001CE7 BF280D                       mov di,3368 
  3311                                  trl4:
  3312 00001CEA 83C301                         add bx,1
  3313 00001CED B8B30F                         mov ax,0x0fb3
  3314 00001CF0 268905                         mov [es:di],ax
  3315 00001CF3 81C7A000                       add di,160
  3316 00001CF7 83FB02                         cmp bx,2
  3317 00001CFA 75EE                           jne trl4
  3318                                  
  3319 00001CFC 5E                             pop si
  3320 00001CFD 5F                             pop di
  3321 00001CFE 5A                             pop dx
  3322 00001CFF 59                             pop cx
  3323 00001D00 5B                             pop bx
  3324 00001D01 58                             pop ax
  3325 00001D02 07                             pop es
  3326 00001D03 83C402                         add sp,2
  3327 00001D06 5D                             pop bp
  3328                                  
  3329 00001D07 C3                             ret
  3330                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3331                                  ;PRINTING ROAD TUNNEL TYPE III;
  3332                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3333                                  prntrdTunnel3:    
  3334 00001D08 55                             push bp
  3335 00001D09 89E5                           mov  bp,sp
  3336 00001D0B 83EC02                         sub  sp,2                 ; create space for local variable
  3337 00001D0E 06                             push es
  3338 00001D0F 50                             push ax
  3339 00001D10 53                             push bx
  3340 00001D11 51                             push cx
  3341 00001D12 52                             push dx
  3342 00001D13 57                             push di
  3343 00001D14 56                             push si
  3344                                  
  3345 00001D15 B800B8                         mov ax,0xb800
  3346 00001D18 8EC0                           mov es,ax
  3347                                  
  3348 00001D1A FC                             cld                       ; auto increment method 
  3349                                  
  3350 00001D1B B8C40F                         mov ax,0x0fc4             ; dark grey foreground and black background
  3351 00001D1E B93200                         mov cx,50                 ; number of columns to color
  3352 00001D21 BF3E03                         mov di,830                ; place di to start of grass print position
  3353 00001D24 F3AB                           rep stosw                 ; color desired number of cloumns
  3354                                  
  3355 00001D26 BB0000                        mov bx,0
  3356                                  
  3357                                   tl23:
  3358 00001D29 83C301                        add bx,1
  3359 00001D2C B8B30F                        mov ax,0x0fb3
  3360 00001D2F 2689453C                      mov [es:di+60],ax
  3361 00001D33 2689859E00                    mov [es:di+158],ax
  3362 00001D38 81C7A000                      add di,160
  3363 00001D3C 83FB03                        cmp bx,3
  3364 00001D3F 75E8                          jne tl23
  3365                                  
  3366 00001D41 BF3E03                       mov di,830
  3367 00001D44 B8DA0F                       mov ax,0x0fda
  3368 00001D47 268905                       mov [es:di],ax
  3369 00001D4A BFA003                       mov di,928
  3370 00001D4D B8BF0F                       mov ax,0x0fbf
  3371 00001D50 268905                       mov [es:di],ax
  3372                                  
  3373 00001D53 B8C40F                         mov ax,0x0fc4             ; dark grey foreground and black background
  3374 00001D56 B93A00                         mov cx,58                 ; number of columns to color
  3375 00001D59 BF9602                         mov di,662                ; place di to start of grass print position
  3376 00001D5C F3AB                           rep stosw                 ; color desired number of cloumns
  3377                                  
  3378 00001D5E BB0000                       mov bx,0
  3379                                  
  3380                                   tl33:
  3381 00001D61 83C301                       add bx,1
  3382 00001D64 B8B30F                       mov ax,0x0fb3
  3383 00001D67 2689452C                     mov [es:di+44],ax
  3384 00001D6B 2689859E00                   mov [es:di+158],ax
  3385 00001D70 81C7A000                     add di,160
  3386 00001D74 83FB06                       cmp bx,6
  3387 00001D77 75E8                         jne tl33
  3388                                  
  3389 00001D79 BF9602                       mov di,662 
  3390 00001D7C B8DA0F                       mov ax,0x0fda
  3391 00001D7F 268905                       mov [es:di],ax
  3392 00001D82 BF0803                       mov di,776 
  3393 00001D85 B8BF0F                       mov ax,0x0fbf
  3394 00001D88 268905                       mov [es:di],ax
  3395                                  
  3396 00001D8B B8C40F                         mov ax,0x0fc4             ; dark grey foreground and black background
  3397 00001D8E B94200                         mov cx,66                 ; number of columns to color
  3398 00001D91 BFEE01                         mov di,494                ; place di to start of grass print position
  3399 00001D94 F3AB                           rep stosw                 ; color desired number of cloumns
  3400                                  
  3401 00001D96 BB0000                       mov bx,0
  3402                                  
  3403                                   tl34:
  3404 00001D99 83C301                        add bx,1
  3405 00001D9C B8B30F                        mov ax,0x0fb3
  3406 00001D9F 2689451C                      mov [es:di+28],ax
  3407 00001DA3 2689859E00                    mov [es:di+158],ax
  3408 00001DA8 81C7A000                      add di,160
  3409 00001DAC 83FB09                        cmp bx,9
  3410 00001DAF 75E8                          jne tl34
  3411                                  
  3412 00001DB1 BFEE01                       mov di,494 
  3413 00001DB4 B8DA0F                       mov ax,0x0fda
  3414 00001DB7 268905                       mov [es:di],ax
  3415 00001DBA BF7002                       mov di,624 
  3416 00001DBD B8BF0F                       mov ax,0x0fbf
  3417 00001DC0 268905                       mov [es:di],ax
  3418                                  
  3419 00001DC3 B8C40F                         mov ax,0x0fc4             ; dark grey foreground and black background
  3420 00001DC6 B94D00                         mov cx,77                 ; number of columns to color
  3421 00001DC9 BFA400                         mov di,164                ; place di to start of grass print position
  3422 00001DCC F3AB                           rep stosw                 ; color desired number of cloumns
  3423                                  
  3424 00001DCE BB0000                       mov bx,0
  3425                                   tl36:
  3426 00001DD1 83C301                       add bx,1
  3427 00001DD4 B8B30F                       mov ax,0x0fb3
  3428 00001DD7 26894506                     mov [es:di+6],ax
  3429 00001DDB 2689859E00                   mov [es:di+158],ax
  3430 00001DE0 81C7A000                     add di,160
  3431 00001DE4 83FB0E                       cmp bx,14
  3432 00001DE7 75E8                         jne tl36
  3433                                  
  3434 00001DE9 BFA400                       mov di,164 
  3435 00001DEC B8DA0F                       mov ax,0x0fda
  3436 00001DEF 268905                       mov [es:di],ax
  3437 00001DF2 BF3C01                       mov di,316 
  3438 00001DF5 B8BF0F                       mov ax,0x0fbf
  3439 00001DF8 268905                       mov [es:di],ax
  3440                                  
  3441 00001DFB B8B20F                         mov ax,0x0fb2             ; dark grey foreground and black background
  3442 00001DFE B90800                         mov cx,8                  ; number of columns to color
  3443 00001E01 BF0E04                         mov di,1038               ; place di to start of grass print position
  3444 00001E04 F3AB                           rep stosw
  3445                                  
  3446 00001E06 B8B20F                         mov ax,0x0fb2             ; dark grey foreground and black background
  3447 00001E09 B90800                         mov cx,8                  ; number of columns to color
  3448 00001E0C BF8401                         mov di,388                ; place di to start of grass print position
  3449 00001E0F F3AB                           rep stosw
  3450                                  
  3451 00001E11 BB0000                       mov bx,0
  3452                                       ;mov di,3208
  3453 00001E14 BF2A0D                       mov di,3370
  3454                                  
  3455                                  trl5:
  3456 00001E17 83C301                         add bx,1
  3457 00001E1A B8B30F                         mov ax,0x0fb3
  3458 00001E1D 268905                         mov [es:di],ax
  3459 00001E20 81C7A000                       add di,160
  3460 00001E24 83FB02                         cmp bx,2
  3461 00001E27 75EE                           jne trl5
  3462                                  
  3463 00001E29 5E                             pop si
  3464 00001E2A 5F                             pop di
  3465 00001E2B 5A                             pop dx
  3466 00001E2C 59                             pop cx
  3467 00001E2D 5B                             pop bx
  3468 00001E2E 58                             pop ax
  3469 00001E2F 07                             pop es
  3470 00001E30 83C402                         add sp,2
  3471 00001E33 5D                             pop bp
  3472                                  
  3473 00001E34 C3                             ret
  3474                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3475                                  ;    MOVING TUNNEL SCREEN     ;
  3476                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3477                                  movTunnel:
  3478 00001E35 55                             push bp
  3479 00001E36 56                             push si
  3480 00001E37 06                             push es
  3481 00001E38 50                             push ax
  3482 00001E39 53                             push bx
  3483 00001E3A 51                             push cx
  3484 00001E3B 52                             push dx
  3485 00001E3C 57                             push di
  3486 00001E3D 1E                             push ds
  3487                                  
  3488 00001E3E B800B8                         mov ax,0xb800
  3489 00001E41 8EC0                           mov es,ax
  3490 00001E43 8ED8                           mov ds,ax
  3491                                  
  3492 00001E45 FC                             cld
  3493                                  
  3494 00001E46 2EFF06[3900]                inc word[cs:SpeedMeter]
  3495 00001E4B E8D1F7                      call speeddials
  3496                                  
  3497 00001E4E E85EFB                       call clrscrnTunnel
  3498 00001E51 E8A5FC                       call prntrdTunnel1
  3499 00001E54 E843FC                       call movrdTunnel
  3500 00001E57 E880F8                       call prntsavedmap
  3501                                  
  3502 00001E5A B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3503 00001E5D E2FE                    loopx0: loop loopx0               ; loop instruction until cx is zero
  3504 00001E5F B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3505 00001E62 E2FE                    loopx1: loop loopx1               ; loop instruction until cx is zero
  3506 00001E64 B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3507 00001E67 E2FE                    loopx2: loop loopx2               ; loop instruction until cx is zero
  3508 00001E69 B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3509 00001E6C E2FE                    loopx3: loop loopx3               ; loop instruction until cx is zero
  3510                                  
  3511                                  
  3512 00001E6E E83EFB                      call clrscrnTunnel
  3513 00001E71 E8A3FD                      call prntrdTunnel2
  3514 00001E74 E823FC                      call movrdTunnel
  3515 00001E77 E860F8                      call prntsavedmap
  3516                                  
  3517 00001E7A B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3518 00001E7D E2FE                    loopy0: loop loopy0               ; loop instruction until cx is zero
  3519 00001E7F B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3520 00001E82 E2FE                    loopy1: loop loopy1               ; loop instruction until cx is zero
  3521 00001E84 B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3522 00001E87 E2FE                    loopy2: loop loopy2               ; loop instruction until cx is zero
  3523 00001E89 B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3524 00001E8C E2FE                    loopy3: loop loopy3               ; loop instruction until cx is zero
  3525                                  
  3526                                  
  3527 00001E8E E81EFB                      call clrscrnTunnel  
  3528 00001E91 E874FE                      call prntrdTunnel3
  3529 00001E94 E803FC                      call movrdTunnel
  3530 00001E97 E840F8                      call prntsavedmap
  3531                                  
  3532 00001E9A B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3533 00001E9D E2FE                    loopzz0: loop loopzz0             ; loop instruction until cx is zero
  3534 00001E9F B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3535 00001EA2 E2FE                    loopzz1: loop loopzz1             ; loop instruction until cx is zero
  3536 00001EA4 B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3537 00001EA7 E2FE                    loopzz2: loop loopzz2             ; loop instruction until cx is zero
  3538 00001EA9 B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3539 00001EAC E2FE                    loopzz3: loop loopzz3             ; loop instruction until cx is zero
  3540                                  
  3541 00001EAE 1F                               pop ds
  3542 00001EAF 5F                               pop di
  3543 00001EB0 5A                               pop dx
  3544 00001EB1 59                               pop cx
  3545 00001EB2 5B                               pop bx
  3546 00001EB3 58                               pop ax
  3547 00001EB4 07                               pop es
  3548 00001EB5 5E                               pop si
  3549 00001EB6 5D                               pop bp
  3550                                  
  3551 00001EB7 C3                               ret
  3552                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3553                                  ;        MOVING SCREEN        ;
  3554                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3555                                  movement:
  3556 00001EB8 55                             push bp
  3557 00001EB9 56                             push si
  3558 00001EBA 06                             push es
  3559 00001EBB 50                             push ax
  3560 00001EBC 53                             push bx
  3561 00001EBD 51                             push cx
  3562 00001EBE 52                             push dx
  3563 00001EBF 57                             push di
  3564 00001EC0 1E                             push ds
  3565                                  
  3566 00001EC1 B800B8                         mov ax,0xb800
  3567 00001EC4 8EC0                           mov es,ax
  3568 00001EC6 8ED8                           mov ds,ax
  3569                                  
  3570 00001EC8 2E803E[8800]01              cmp byte[cs:isRouteS],1
  3571 00001ECE 7506                        jne movnormal
  3572 00001ED0 E862FF                         call movTunnel
  3573 00001ED3 E99A00                      jmp exitmovement
  3574                                  
  3575                                  movnormal:
  3576                                  
  3577 00001ED6 BB0100                         mov bx,1                 ; number of cycles to complete
  3578                                  
  3579                                  loopMovs:
  3580                                  
  3581 00001ED9 2EFF06[3900]                inc word[cs:SpeedMeter]
  3582 00001EDE E83EF7                      call speeddials
  3583                                  
  3584 00001EE1 FC                          cld                          ; auto increment method
  3585                                  
  3586 00001EE2 B90700                      mov cx,7                     ; number of rows to use movs on
  3587 00001EE5 BFB009                      mov di,2480                  ; destination index loaded
  3588 00001EE8 BE1009                      mov si,2320                  ; source index loaded (directly above di)
  3589 00001EEB 268B05                      mov ax,[es:di]               ; store the memory location in ax
  3590                                  
  3591                                  roadMov:
  3592 00001EEE A5                          movsw                        ; execute movs on word data
  3593 00001EEF 81EFA200                    sub di,162                   ; update di accordingly to move upwards 
  3594 00001EF3 81EEA200                    sub si,162                   ; update si accordingly to move upwards
  3595 00001EF7 49                          dec cx                       ; decrement when movsw executed once
  3596 00001EF8 83F900                      cmp cx,0                     ; check if all required rows are movsw
  3597 00001EFB 75F1                        jnz roadMov                  ; keep executing if not false
  3598 00001EFD 268905                      mov [es:di],ax               ; replace the stored memory location
  3599                                  
  3600 00001F00 BF180F                      mov di,3864                  ; destination index loaded
  3601 00001F03 BE780E                      mov si,3704                  ; source index loaded (directly above di)
  3602 00001F06 268B05                      mov ax,[es:di]               ; store the memory location in ax               
  3603 00001F09 B90200                      mov cx,2                     ; number of rows to use movs on
  3604                                  
  3605                                  rearmirMov:
  3606 00001F0C A5                          movsw                        ; execute movs on word data
  3607 00001F0D 81EFA200                    sub di,162                   ; update di accordingly to move upwards 
  3608 00001F11 81EEA200                    sub si,162                   ; update si accordingly to move upwards
  3609 00001F15 49                          dec cx                       ; decrement when movsw executed once
  3610 00001F16 83F900                      cmp cx,0                     ; check if all required rows are movsw
  3611 00001F19 75F1                        jnz rearmirMov               ; keep executing if not false
  3612 00001F1B 268905                      mov [es:di],ax               ; replace the stored memory location
  3613                                  
  3614 00001F1E BF100A                      mov di,2576                  ; destination index loaded
  3615 00001F21 BE7409                      mov si, 2420                 ; source index loaded (directly above di)
  3616 00001F24 268B05                      mov ax,[es:di]               ; store the memory location in ax
  3617 00001F27 B90800                      mov cx,8                     ; number of rows to use movs on
  3618                                  
  3619                                  bdryrhtMov:
  3620 00001F2A A5                          movsw                        ; execute movs on word data
  3621 00001F2B A5                          movsw                        ; execute movs on word data
  3622 00001F2C 81EFA000                    sub di,160                   ; update di accordingly to move upwards 
  3623 00001F30 81EEA000                    sub si,160                   ; update si accordingly to move upwards
  3624 00001F34 49                          dec cx                       ; decrement when movsw executed once
  3625 00001F35 83F900                      cmp cx,0                     ; check if all required rows are movsw
  3626 00001F38 75F0                        jnz bdryrhtMov               ; keep executing if not false
  3627 00001F3A 268905                      mov [es:di],ax               ; replace the stored memory location
  3628 00001F3D 26894502                    mov [es:di+2],ax             ; replace the stored memory location
  3629                                  
  3630 00001F41 FD                          std                          ; auto decrement method
  3631 00001F42 BF8E0A                      mov di,2702                  ; destination index loaded
  3632 00001F45 BEEA09                      mov si, 2538                 ; source index loaded (directly above di)
  3633 00001F48 268B05                      mov ax,[es:di]               ; store the memory location in ax
  3634 00001F4B B90800                      mov cx,8                     ; number of rows to use movs on
  3635                                   
  3636                                  bdrylftMov:
  3637 00001F4E A5                          movsw                        ; execute movs on word data
  3638 00001F4F A5                          movsw                        ; execute movs on word data
  3639 00001F50 81EFA000                    sub di,160                   ; update di accordingly to move upwards 
  3640 00001F54 81EEA000                    sub si,160                   ; update si accordingly to move upwards
  3641 00001F58 49                          dec cx                       ; decrement when movsw executed once
  3642 00001F59 83F900                      cmp cx,0                     ; check if all required rows are movsw
  3643 00001F5C 75F0                        jnz bdrylftMov               ; keep executing if not false
  3644 00001F5E 268905                      mov [es:di],ax               ; replace the stored memory location
  3645 00001F61 268945FE                    mov [es:di-2],ax             ; replace the stored memory location
  3646                                  
  3647 00001F65 E82801                      call delay
  3648                                  
  3649 00001F68 4B                          dec bx                       ; decrement when movement executed once
  3650 00001F69 83FB00                      cmp bx,0                     ; check number of movs executed
  3651 00001F6C 0F8569FF                    jnz loopMovs                 ; keep repeating if false
  3652                                  
  3653                                  exitmovement:
  3654 00001F70 1F                               pop ds
  3655 00001F71 5F                               pop di
  3656 00001F72 5A                               pop dx
  3657 00001F73 59                               pop cx
  3658 00001F74 5B                               pop bx
  3659 00001F75 58                               pop ax
  3660 00001F76 07                               pop es
  3661 00001F77 5E                               pop si
  3662 00001F78 5D                               pop bp
  3663                                  
  3664 00001F79 C3                               ret
  3665                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3666                                  ;      RACE END ANIMATION     ;
  3667                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3668                                  endanimation:
  3669 00001F7A 55                             push bp
  3670 00001F7B 89E5                           mov  bp,sp
  3671 00001F7D 83ED04                         sub  bp,4                    ; create local variable space
  3672 00001F80 56                             push si
  3673 00001F81 06                             push es
  3674 00001F82 50                             push ax
  3675 00001F83 53                             push bx 
  3676 00001F84 51                             push cx
  3677 00001F85 52                             push dx
  3678 00001F86 57                             push di
  3679 00001F87 1E                             push ds
  3680                                  
  3681 00001F88 B800B8                         mov ax,0xb800
  3682 00001F8B 8EC0                           mov es,ax   
  3683 00001F8D 8ED8                           mov ds,ax
  3684                                  
  3685 00001F8F B8DB0C                    mov ax,0x0cdb
  3686 00001F92 26A36C05                  mov [es:1388],ax
  3687 00001F96 26A36E05                  mov [es:1390],ax
  3688                                  
  3689 00001F9A C746FE3405                mov word[bp-2],1332
  3690 00001F9F C746FC1C00                mov word[bp-4],28
  3691 00001FA4 BB0800                    mov bx,8
  3692                                  
  3693                                  loopCFE:
  3694 00001FA7 FC                         cld
  3695 00001FA8 8B7EFE                     mov di,word[bp-2] 
  3696 00001FAB 8B4EFC                     mov cx, word[bp-4]
  3697                                  
  3698 00001FAE 57                         push di
  3699 00001FAF 51                         push cx
  3700                                  
  3701                                  prntline1:
  3702 00001FB0 B8DB70                      mov ax,0x70db
  3703 00001FB3 268905                      mov [es:di],ax
  3704 00001FB6 26894502                    mov [es:di+2],ax
  3705 00001FBA 83C704                      add di,4
  3706 00001FBD B8DB7F                      mov ax,0x7fdb 
  3707 00001FC0 268905                      mov [es:di],ax
  3708 00001FC3 26894502                    mov [es:di+2],ax
  3709 00001FC7 83C704                      add di,4
  3710 00001FCA 83E904                      sub cx,4
  3711 00001FCD 83F900                      cmp cx,0
  3712 00001FD0 75DE                        jnz prntline1
  3713                                  
  3714 00001FD2 59                         pop cx
  3715 00001FD3 5F                         pop di
  3716                                  
  3717 00001FD4 81C79C00                   add di,156
  3718 00001FD8 83C104                     add cx,4
  3719                                  
  3720                                  prntline2:
  3721 00001FDB B8DB70                      mov ax,0x70db
  3722 00001FDE 268905                      mov [es:di],ax
  3723 00001FE1 26894502                    mov [es:di+2],ax
  3724 00001FE5 83C704                      add di,4
  3725 00001FE8 B8DB7F                      mov ax,0x7fdb 
  3726 00001FEB 268905                      mov [es:di],ax
  3727 00001FEE 26894502                    mov [es:di+2],ax
  3728 00001FF2 83C704                      add di,4
  3729 00001FF5 83E904                      sub cx,4
  3730 00001FF8 83F900                      cmp cx,0
  3731 00001FFB 75DE                        jnz prntline2
  3732                                  
  3733 00001FFD 8146FE9C00                 add word[bp-2],156 
  3734 00002002 8346FC04                   add word[bp-4],4
  3735                                  
  3736 00002006 E88700                     call delay
  3737                                  
  3738 00002009 B9FFFF                      mov cx,0xffff
  3739 0000200C E2FE                     loopa: loop loopa
  3740 0000200E B9FFFF                      mov cx,0xffff
  3741 00002011 E2FE                     loopb: loop loopb
  3742                                  
  3743 00002013 E8CBEE                      call prntrd
  3744                                  
  3745 00002016 BF180F                      mov di,3864                  ; destination index loaded
  3746 00002019 BE780E                      mov si,3704                  ; source index loaded (directly above di)
  3747 0000201C 268B05                      mov ax,[es:di]               ; store the memory location in ax               
  3748 0000201F B90200                      mov cx,2                     ; number of rows to use movs on
  3749                                  
  3750                                  rearmirMov2:
  3751 00002022 A5                          movsw                        ; execute movs on word data
  3752 00002023 81EFA200                    sub di,162                   ; update di accordingly to move upwards 
  3753 00002027 81EEA200                    sub si,162                   ; update si accordingly to move upwards
  3754 0000202B 49                          dec cx                       ; decrement when movsw executed once
  3755 0000202C 83F900                      cmp cx,0                     ; check if all required rows are movsw
  3756 0000202F 75F1                        jnz rearmirMov2              ; keep executing if not false
  3757 00002031 268905                      mov [es:di],ax               ; replace the stored memory location
  3758                                  
  3759 00002034 BF100A                      mov di,2576                  ; destination index loaded
  3760 00002037 BE7409                      mov si, 2420                 ; source index loaded (directly above di)
  3761 0000203A 268B05                      mov ax,[es:di]               ; store the memory location in ax
  3762 0000203D B90800                      mov cx,8                     ; number of rows to use movs on
  3763                                   
  3764                                  bdryrhtMov2:
  3765 00002040 A5                          movsw                        ; execute movs on word data
  3766 00002041 A5                          movsw                        ; execute movs on word data
  3767 00002042 81EFA000                    sub di,160                   ; update di accordingly to move upwards 
  3768 00002046 81EEA000                    sub si,160                   ; update si accordingly to move upwards
  3769 0000204A 49                          dec cx                       ; decrement when movsw executed once
  3770 0000204B 83F900                      cmp cx,0                     ; check if all required rows are movsw
  3771 0000204E 75F0                        jnz bdryrhtMov2              ; keep executing if not false
  3772 00002050 268905                      mov [es:di],ax               ; replace the stored memory location
  3773 00002053 26894502                    mov [es:di+2],ax             ; replace the stored memory location
  3774                                  
  3775 00002057 FD                          std                          ; auto decrement method
  3776 00002058 BF8E0A                      mov di,2702                  ; destination index loaded
  3777 0000205B BEEA09                      mov si, 2538                 ; source index loaded (directly above di)
  3778 0000205E 268B05                      mov ax,[es:di]               ; store the memory location in ax
  3779 00002061 B90800                      mov cx,8                     ; number of rows to use movs on
  3780                                   
  3781                                  bdrylftMov2:
  3782 00002064 A5                          movsw                        ; execute movs on word data
  3783 00002065 A5                          movsw                        ; execute movs on word data
  3784 00002066 81EFA000                    sub di,160                   ; update di accordingly to move upwards 
  3785 0000206A 81EEA000                    sub si,160                   ; update si accordingly to move upwards
  3786 0000206E 49                          dec cx                       ; decrement when movsw executed once
  3787 0000206F 83F900                      cmp cx,0                     ; check if all required rows are movsw
  3788 00002072 75F0                        jnz bdrylftMov2              ; keep executing if not false
  3789 00002074 268905                      mov [es:di],ax               ; replace the stored memory location
  3790 00002077 268945FE                    mov [es:di-2],ax             ; replace the stored memory location
  3791                                  
  3792 0000207B 4B                            dec bx
  3793 0000207C 83FB00                        cmp bx,0
  3794 0000207F 0F8524FF                      jnz loopCFE
  3795                                  
  3796 00002083 1F                             pop ds
  3797 00002084 5F                             pop di
  3798 00002085 5A                             pop dx
  3799 00002086 59                             pop cx
  3800 00002087 5B                             pop bx
  3801 00002088 58                             pop ax
  3802 00002089 07                             pop es
  3803 0000208A 5E                             pop si
  3804 0000208B 83C504                         add bp,4                  ; free local variable space
  3805 0000208E 5D                             pop bp
  3806                                  
  3807 0000208F C3                             ret
  3808                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3809                                  ;            DELAY            ;
  3810                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3811                                  delay:
  3812 00002090 51                           push cx
  3813                                  
  3814 00002091 B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3815 00002094 E2FE                    loop1: loop loop1               ; loop instruction until cx is zero
  3816                                   
  3817 00002096 B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3818 00002099 E2FE                    loop2: loop loop2               ; loop instruction until cx is zero
  3819                                  
  3820 0000209B B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3821 0000209E E2FE                    loop3: loop loop3               ; loop instruction until cx is zero
  3822                                  
  3823 000020A0 B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3824 000020A3 E2FE                    loop4: loop loop4               ; loop instruction until cx is zero
  3825                                  
  3826 000020A5 B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3827 000020A8 E2FE                    loop5: loop loop5               ; loop instruction until cx is zero
  3828                                  
  3829 000020AA B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3830 000020AD E2FE                    loop6: loop loop6               ; loop instruction until cx is zero
  3831                                  
  3832 000020AF B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3833 000020B2 E2FE                    loop7: loop loop7               ; loop instruction until cx is zero
  3834                                  
  3835 000020B4 B9FFFF                       mov  cx,0xffff             ; load cx with highest count
  3836 000020B7 E2FE                    loop8: loop loop8               ; loop instruction until cx is zero
  3837                                  
  3838 000020B9 59                           pop  cx
  3839                                  
  3840 000020BA C3                           ret
  3841                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3842                                  ;    PRINTING BACKGROUNDS     ;
  3843                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3844                                  
  3845                                  ;   THIS SUBROUTINE IS NOW NULL AND VOID
  3846                                  ;   THIS SUBROUTINE WAS DESIGNED SPECIFICALLY FOR PHASE II
  3847                                  ;   IT HAS NO FURTHER USE IN PROJECT FROM PHASE III ONWARDS
  3848                                  
  3849                                  prntBG:
  3850 000020BB 55                               push bp
  3851 000020BC 89E5                             mov bp,sp
  3852 000020BE 06                      	 push es
  3853 000020BF 50                      	 push ax
  3854 000020C0 53                      	 push bx
  3855 000020C1 51                      	 push cx
  3856 000020C2 52                      	 push dx
  3857 000020C3 57                      	 push di
  3858                                  
  3859 000020C4 B800B8                  	 mov ax, 0xb800
  3860 000020C7 8EC0                    	 mov es, ax
  3861                                           
  3862 000020C9 837E0432                         cmp word[bp+4],50      
  3863 000020CD 7425                             je bgB
  3864 000020CF 837E0464                         cmp word[bp+4],100
  3865 000020D3 7427                             je bgC
  3866 000020D5 817E049600                       cmp word[bp+4],150
  3867 000020DA 7428                             je bgD
  3868 000020DC 817E04C800                       cmp word[bp+4],200
  3869 000020E1 7402                             je bgA
  3870 000020E3 EB27                             jmp exitprntBG
  3871                                  
  3872                                  bgA:
  3873 000020E5 2EC706[8300]0000                 mov word[cs:TickCount],0  ; reset TickCount to 0
  3874 000020EC E843F2                           call strwhlrght
  3875 000020EF E8ECE4                           call prntbgA              ; FUNCTION CALL:  PRINTING BACKGROUND A
  3876 000020F2 EB18                             jmp exitprntBG
  3877                                  
  3878                                  bgB:     
  3879 000020F4 E83BF2                           call strwhlrght
  3880 000020F7 E8F3E5                           call prntbgB              ; FUNCTION CALL:  PRINTING BACKGROUND B
  3881 000020FA EB10                             jmp exitprntBG
  3882                                  
  3883                                  bgC:     
  3884 000020FC E833F2                           call strwhlrght
  3885 000020FF E849E6                           call prntbgC              ; FUNCTION CALL:  PRINTING BACKGROUND C
  3886 00002102 EB08                             jmp exitprntBG
  3887                                  
  3888                                  bgD:     
  3889 00002104 E82BF2                           call strwhlrght
  3890 00002107 E89DE7                           call prntbgD              ; FUNCTION CALL:  PRINTING BACKGROUND D
  3891 0000210A EB00                             jmp exitprntBG
  3892                                  
  3893                                  exitprntBG:
  3894                                  
  3895 0000210C E8A9FD                           call movement             ; FUNCTION CALL:  MOVING SCREEN
  3896                                  
  3897 0000210F 5F                               pop di
  3898 00002110 5A                      	 pop dx
  3899 00002111 59                               pop cx
  3900 00002112 5B                      	 pop bx
  3901 00002113 58                      	 pop ax
  3902 00002114 07                      	 pop es
  3903 00002115 5D                      	 pop bp
  3904                                  
  3905 00002116 C20200                  	 ret 2
  3906                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3907                                  ;         CAR CRASHED         ;
  3908                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  3909                                  carCrashed:
  3910 00002119 55                             push bp
  3911 0000211A 89E5                           mov  bp,sp
  3912 0000211C 06                             push es
  3913 0000211D 50                             push ax
  3914 0000211E 53                             push bx
  3915 0000211F 51                             push cx
  3916 00002120 52                             push dx
  3917 00002121 57                             push di
  3918 00002122 56                             push si
  3919 00002123 1E                             push ds
  3920                                  
  3921 00002124 B800B8                         mov ax,0xb800
  3922 00002127 8EC0                           mov es,ax
  3923                                   
  3924 00002129 FC                             cld
  3925                                  
  3926 0000212A BFA00A                      mov di,2720               ; load di with starting location
  3927 0000212D B8FE74                      mov ax,0x74fe             ; block with red attribute
  3928 00002130 B90800                      mov cx,8                  ; number of columns to color
  3929 00002133 F3AB                        rep stosw                 ; color the desired columns
  3930                                  
  3931 00002135 BF300B                      mov di,2864               ; load di with starting location
  3932 00002138 B90800                      mov cx,8                  ; number of columns to color
  3933 0000213B F3AB                        rep stosw                 ; color the desired columns
  3934                                  
  3935 0000213D E83407                      call soundsig2
  3936 00002140 E84FE9                      call prntbgCrash
  3937                                  
  3938 00002143 B81400                      mov  ax,20                ; load x position
  3939 00002146 50                          push ax                   ; push x position
  3940 00002147 B80800                      mov  ax,8                 ; load y position
  3941 0000214A 50                          push ax                   ; push y position
  3942 0000214B B87E00                      mov  ax,0x007e            ; yellow on grey attribute
  3943 0000214E 50                          push ax                   ; push attribute
  3944 0000214F B8[4500]                    mov  ax,CarCrashed        ; load string address
  3945 00002152 50                          push ax                   ; push string address
  3946 00002153 E876E3                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  3947                                  
  3948 00002156 E837FF                      call delay
  3949 00002159 E834FF                      call delay
  3950 0000215C E831FF                      call delay
  3951 0000215F E82EFF                      call delay
  3952 00002162 E82BFF                      call delay
  3953 00002165 E828FF                      call delay
  3954 00002168 E825FF                      call delay
  3955 0000216B E822FF                      call delay
  3956 0000216E E81FFF                      call delay
  3957 00002171 E81CFF                      call delay
  3958 00002174 E819FF                      call delay
  3959 00002177 E816FF                      call delay
  3960 0000217A E813FF                      call delay
  3961 0000217D E810FF                      call delay
  3962 00002180 E80DFF                      call delay
  3963 00002183 E80AFF                      call delay
  3964 00002186 E807FF                      call delay
  3965 00002189 E804FF                      call delay
  3966 0000218C E801FF                      call delay
  3967                                  
  3968 0000218F B800B8                      mov ax,0xb800
  3969 00002192 8EC0                        mov es,ax
  3970                                  
  3971 00002194 BFA00A                      mov di,2720               ; load di with starting location
  3972 00002197 B8FEFE                      mov ax,0xfefe             ; block with blinking yellow attribute
  3973 0000219A B90800                      mov cx,8                  ; number of columns to color
  3974 0000219D F3AB                        rep stosw                 ; color the desired columns
  3975                                  
  3976 0000219F BF300B                      mov di,2864               ; load di with starting location
  3977 000021A2 B90800                      mov cx,8                  ; number of columns to color
  3978 000021A5 F3AB                        rep stosw                 ; color the desired columns
  3979                                  
  3980 000021A7 2EC706[7900]8202            mov word[cs:CarPosMapRA],642
  3981 000021AE 2EC706[7B00]A200            mov word[cs:CarPosMapRB],162
  3982 000021B5 2EC706[7D00]5401            mov word[cs:CarPosMapRC],340
  3983 000021BC 2EC706[7F00]3403            mov word[cs:CarPosMapRD],820
  3984 000021C3 2EC706[9000]B000            mov word[cs:CarPosMapRSf],176
  3985 000021CA 2EC706[9200]9002            mov word[cs:CarPosMapRSr],656
  3986                                  
  3987 000021D1 E8F6EB                      call prntbndskrt          ; FUNCTION CALL:  PRINTING BOUNDARY SKIRTINGS
  3988 000021D4 E83AEC                      call prntgrs              ; FUNCTION CALL:  PRINTING GRASS
  3989 000021D7 E807ED                      call prntrd               ; FUNCTION CALL:  PRINTING ROAD
  3990                                  
  3991                                       
  3992 000021DA 2EC706[3900]0000            mov word[cs:SpeedMeter],0 ; car crasehd, so Speed is zero
  3993 000021E1 2EC706[3B00]0000            mov word[cs:GearMeter],0  ; speed is zero, so Gear is zero
  3994 000021E8 E834F4                      call speeddials           ; update speed dials
  3995                                  
  3996 000021EB 31D2                        xor dx,dx
  3997 000021ED 2E8A16[7300]                mov dl,byte[cs:noOfLaps]
  3998                                  
  3999 000021F2 2E803E[6B00]01              cmp byte[cs:isRouteA],1
  4000 000021F8 7519                        jne cmpRouteBCrash
  4001 000021FA 2EC606[6B00]00                  mov byte[cs:isRouteA],0
  4002 00002200 2EC606[6C00]01                  mov byte[cs:isRouteB],1
  4003 00002206 E8E4E4                          call prntbgB
  4004 00002209 2EC706[7B00]A000                mov word[cs:CarPosMapRB],160
  4005 00002210 E9FA00                      jmp exitCarCrash
  4006                                  
  4007                                  cmpRouteBCrash:
  4008 00002213 2E803E[6C00]01              cmp byte[cs:isRouteB],1
  4009 00002219 7519                        jne cmpRouteCCrash
  4010 0000221B 2EC606[6C00]00                  mov byte[cs:isRouteB],0
  4011 00002221 2EC606[6D00]01                  mov byte[cs:isRouteC],1
  4012 00002227 E821E5                          call prntbgC
  4013 0000222A 2EC706[7D00]B400                mov word[cs:CarPosMapRC],180
  4014 00002231 E9D900                      jmp exitCarCrash
  4015                                  
  4016                                  cmpRouteCCrash:
  4017 00002234 2E803E[6D00]01              cmp byte[cs:isRouteC],1
  4018 0000223A 7519                        jne cmpRouteDCrash
  4019 0000223C 2EC606[6D00]00                  mov byte[cs:isRouteC],0
  4020 00002242 2EC606[6E00]01                  mov byte[cs:isRouteD],1
  4021 00002248 E85CE6                          call prntbgD
  4022 0000224B 2EC706[7F00]3603                mov word[cs:CarPosMapRD],822
  4023 00002252 E9B800                      jmp exitCarCrash
  4024                                  
  4025                                  cmpRouteDCrash:
  4026 00002255 2E803E[6E00]01              cmp byte[cs:isRouteD],1
  4027 0000225B 751E                        jne cmpRouteSCrash
  4028 0000225D 2EC606[6E00]00                  mov byte[cs:isRouteD],0
  4029 00002263 2EC606[6B00]01                  mov byte[cs:isRouteA],1
  4030 00002269 E872E3                          call prntbgA
  4031 0000226C 2EC706[7900]2203                mov word[cs:CarPosMapRA],802
  4032 00002273 2EFF06[3D00]                    inc word[cs:RpmMeter]
  4033 00002278 E99200                      jmp exitCarCrash
  4034                                  
  4035                                  cmpRouteSCrash:
  4036 0000227B 2E803E[8800]01              cmp byte[cs:isRouteS],1
  4037 00002281 0F858800                    jne near exitCarCrash
  4038                                  
  4039 00002285 2E803E[8900]01              cmp byte[cs:isForwardRS],1
  4040 0000228B 753C                        jne cmpRouteSCrash2
  4041 0000228D 2EC606[6E00]01                  mov byte[cs:isRouteD],1
  4042 00002293 2EC606[8800]00                  mov byte[cs:isRouteS],0
  4043 00002299 2EC606[8900]00                  mov byte[cs:isForwardRS],0
  4044 0000229F 2EC606[8F00]00                  mov byte[cs:lencvrdS],0
  4045 000022A5 2EC606[7600]01                  mov byte[cs:isMultiple],1
  4046 000022AB 2EC606[7500]07                  mov byte[cs:lencvrdBD],7
  4047 000022B1 E816EB                          call prntbndskrt          ; FUNCTION CALL:  PRINTING BOUNDARY SKIRTINGS
  4048 000022B4 E85AEB                          call prntgrs              ; FUNCTION CALL:  PRINTING GRASS
  4049 000022B7 E827EC                          call prntrd               ; FUNCTION CALL:  PRINTING ROAD
  4050 000022BA E888EE                          call rvmirror             ; FUNCTION CALL:  PRINTING REAR VIEW MIRROR
  4051 000022BD E8E7E5                          call prntbgD
  4052 000022C0 2EC706[7F00]3203                mov word[cs:CarPosMapRD],818
  4053 000022C7 EB44                        jmp exitCarCrash
  4054                                  
  4055                                  cmpRouteSCrash2:
  4056 000022C9 2E803E[8A00]01              cmp byte[cs:isReverseRS],1
  4057 000022CF 75F8                        jne cmpRouteSCrash2
  4058 000022D1 2EC606[6C00]01                  mov byte[cs:isRouteB],1
  4059 000022D7 2EC606[8800]00                  mov byte[cs:isRouteS],0
  4060 000022DD 2EC606[8A00]00                  mov byte[cs:isReverseRS],0
  4061 000022E3 2EC606[8F00]00                  mov byte[cs:lencvrdS],0
  4062 000022E9 2EC606[7600]01                  mov byte[cs:isMultiple],1
  4063 000022EF 2EC606[7500]16                  mov byte[cs:lencvrdBD],22
  4064 000022F5 E8D2EA                          call prntbndskrt          ; FUNCTION CALL:  PRINTING BOUNDARY SKIRTINGS
  4065 000022F8 E816EB                          call prntgrs              ; FUNCTION CALL:  PRINTING GRASS
  4066 000022FB E8E3EB                          call prntrd               ; FUNCTION CALL:  PRINTING ROAD
  4067 000022FE E844EE                          call rvmirror             ; FUNCTION CALL:  PRINTING REAR VIEW MIRROR
  4068 00002301 E8E9E3                          call prntbgB
  4069 00002304 2EC706[7B00]AE00                mov word[cs:CarPosMapRB],174
  4070 0000230B EB00                        jmp exitCarCrash
  4071                                  
  4072                                  exitCarCrash:
  4073 0000230D 2E3916[3D00]                   cmp word[cs:RpmMeter],dx
  4074 00002312 7506                           jne exitCarCrash2
  4075 00002314 2EC606[7800]01                 mov byte[cs:RaceFinised],1
  4076                                  
  4077                                  exitCarCrash2:
  4078 0000231A 2EC606[7700]00                 mov byte[cs:isCrashed],0
  4079 00002320 E81000                         call updateCarPos
  4080 00002323 2E8006[8100]0A                 add byte[cs:Seconds],10
  4081                                  
  4082 00002329 1F                              pop ds
  4083 0000232A 5E                              pop si
  4084 0000232B 5F                              pop di
  4085 0000232C 5A                              pop dx
  4086 0000232D 59                              pop cx
  4087 0000232E 5B                              pop bx
  4088 0000232F 58                              pop ax
  4089 00002330 07                              pop es
  4090 00002331 5D                              pop bp
  4091                                  
  4092 00002332 C3                              ret
  4093                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4094                                  ;    UPDATING CAR POSITION    ;
  4095                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4096                                  updateCarPos:
  4097 00002333 55                             push bp
  4098 00002334 89E5                           mov  bp,sp
  4099 00002336 06                             push es
  4100 00002337 50                             push ax
  4101 00002338 53                             push bx
  4102 00002339 51                             push cx
  4103 0000233A 52                             push dx
  4104 0000233B 57                             push di
  4105 0000233C 56                             push si
  4106 0000233D 1E                             push ds
  4107                                  
  4108 0000233E B800B8                         mov ax,0xb800
  4109 00002341 8EC0                           mov es,ax
  4110                                  
  4111 00002343 E81CF4                         call prntmap
  4112 00002346 B8DB84                         mov ax,0x84db
  4113                                  
  4114 00002349 2E803E[6B00]01                 cmp byte[cs:isRouteA],1
  4115 0000234F 7512                           jne cmpRouteB
  4116 00002351 2E812E[7900]A000               sub word[cs:CarPosMapRA],160
  4117 00002358 2E8B3E[7900]                   mov di,[cs:CarPosMapRA]
  4118 0000235D 268905                         mov [es:di],ax
  4119 00002360 E98900                         jmp exitCarPos
  4120                                  
  4121                                  cmpRouteB:
  4122 00002363 2E803E[6C00]01                 cmp byte[cs:isRouteB],1
  4123 00002369 7510                           jne cmpRouteC
  4124 0000236B 2E8306[7B00]02                 add word[cs:CarPosMapRB],2
  4125 00002371 2E8B3E[7B00]                   mov di,[cs:CarPosMapRB]
  4126 00002376 268905                         mov [es:di],ax
  4127 00002379 EB71                           jmp exitCarPos
  4128                                  
  4129                                  cmpRouteC:
  4130 0000237B 2E803E[6D00]01                 cmp byte[cs:isRouteC],1
  4131 00002381 7511                           jne cmpRouteD
  4132 00002383 2E8106[7D00]A000               add word[cs:CarPosMapRC],160
  4133 0000238A 2E8B3E[7D00]                   mov di,[cs:CarPosMapRC]
  4134 0000238F 268905                         mov [es:di],ax
  4135 00002392 EB58                           jmp exitCarPos
  4136                                  
  4137                                  cmpRouteD:
  4138 00002394 2E803E[6E00]01                 cmp byte[cs:isRouteD],1
  4139 0000239A 7510                           jne cmpRouteS
  4140 0000239C 2E832E[7F00]02                 sub word[cs:CarPosMapRD],2
  4141 000023A2 2E8B3E[7F00]                   mov di,[cs:CarPosMapRD]
  4142 000023A7 268905                         mov [es:di],ax
  4143 000023AA EB40                           jmp exitCarPos
  4144                                  
  4145                                  cmpRouteS:
  4146 000023AC 2E803E[8800]01                 cmp byte[cs:isRouteS],1
  4147 000023B2 7538                           jne exitCarPos
  4148                                        
  4149 000023B4 2E803E[8900]01                 cmp byte[cs:isForwardRS],1
  4150 000023BA 7514                           jne cmpRSrev
  4151 000023BC 2E8106[9000]A000                 add word[cs:CarPosMapRSf],160
  4152 000023C3 2E8B3E[9000]                     mov di,[cs:CarPosMapRSf]
  4153 000023C8 268905                           mov [es:di],ax
  4154 000023CB E884F2                           call savemap
  4155 000023CE EB1C                           jmp exitCarPos
  4156                                  cmpRSrev:
  4157 000023D0 2E803E[8A00]01                 cmp byte[cs:isReverseRS],1
  4158 000023D6 7514                           jne exitCarPos
  4159 000023D8 2E812E[9200]A000                 sub word[cs:CarPosMapRSr],160
  4160 000023DF 2E8B3E[9200]                     mov di,[cs:CarPosMapRSr]
  4161 000023E4 268905                           mov [es:di],ax
  4162 000023E7 E868F2                           call savemap
  4163 000023EA EB00                           jmp exitCarPos
  4164                                  
  4165                                  exitCarPos:
  4166 000023EC 1F                              pop ds
  4167 000023ED 5E                              pop si
  4168 000023EE 5F                              pop di
  4169 000023EF 5A                              pop dx
  4170 000023F0 59                              pop cx
  4171 000023F1 5B                              pop bx
  4172 000023F2 58                              pop ax
  4173 000023F3 07                              pop es
  4174 000023F4 5D                              pop bp
  4175                                  
  4176 000023F5 C3                              ret
  4177                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4178                                  ;    MOVING DOWNWARDS KEY     ;
  4179                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4180                                  moveDOWN:
  4181 000023F6 55                             push bp
  4182 000023F7 89E5                           mov  bp,sp
  4183 000023F9 06                             push es
  4184 000023FA 50                             push ax
  4185 000023FB 53                             push bx
  4186 000023FC 51                             push cx
  4187 000023FD 52                             push dx
  4188 000023FE 57                             push di
  4189 000023FF 56                             push si
  4190 00002400 1E                             push ds
  4191                                  
  4192 00002401 B800B8                         mov ax,0xb800
  4193 00002404 8EC0                           mov es,ax
  4194                                  
  4195 00002406 FC                          cld
  4196                                  
  4197 00002407 2EC706[3900]0000            mov word[cs:SpeedMeter],0 ; car stopped, so Speed is zero
  4198 0000240E 2EC706[3B00]0000            mov word[cs:GearMeter],0  ; speed is zero, so Gear is zero
  4199 00002415 E807F2                      call speeddials           ; update speed dials
  4200                                  
  4201 00002418 BFA00A                      mov di,2720               ; load di with starting location
  4202 0000241B B8FE74                      mov ax,0x74fe             ; block with red attribute
  4203 0000241E B90800                      mov cx,8                  ; number of columns to color
  4204 00002421 F3AB                        rep stosw                 ; color the desired columns
  4205                                  
  4206 00002423 BF300B                      mov di,2864               ; load di with starting location
  4207 00002426 B90800                      mov cx,8                  ; number of columns to color
  4208 00002429 F3AB                        rep stosw                 ; color the desired columns
  4209                                  
  4210 0000242B E862FC                      call delay
  4211 0000242E E85FFC                      call delay
  4212 00002431 E85CFC                      call delay
  4213 00002434 E859FC                      call delay
  4214 00002437 E856FC                      call delay
  4215                                  
  4216 0000243A BFA00A                      mov di,2720               ; load di with starting location
  4217 0000243D B8FEFE                      mov ax,0xfefe             ; block with blinking yellow attribute
  4218 00002440 B90800                      mov cx,8                  ; number of columns to color
  4219 00002443 F3AB                        rep stosw                 ; color the desired columns
  4220                                  
  4221 00002445 BF300B                      mov di,2864               ; load di with starting location
  4222 00002448 B90800                      mov cx,8                  ; number of columns to color
  4223 0000244B F3AB                        rep stosw                 ; color the desired columns
  4224                                  
  4225 0000244D 1F                          pop ds
  4226 0000244E 5E                          pop si
  4227 0000244F 5F                          pop di
  4228 00002450 5A                          pop dx
  4229 00002451 59                          pop cx
  4230 00002452 5B                          pop bx
  4231 00002453 58                          pop ax
  4232 00002454 07                          pop es
  4233 00002455 5D                          pop bp
  4234                                  
  4235 00002456 C3                          ret
  4236                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4237                                  ;      MOVING UPWARDS KEY     ;
  4238                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4239                                  moveUP:
  4240 00002457 55                             push bp
  4241 00002458 89E5                           mov  bp,sp
  4242 0000245A 06                             push es
  4243 0000245B 50                             push ax
  4244 0000245C 53                             push bx
  4245 0000245D 51                             push cx
  4246 0000245E 52                             push dx
  4247 0000245F 57                             push di
  4248 00002460 56                             push si
  4249 00002461 1E                             push ds
  4250                                  
  4251 00002462 B800B8                         mov ax,0xb800
  4252 00002465 8EC0                           mov es,ax
  4253                                  
  4254 00002467 31C0                        xor ax,ax
  4255 00002469 31DB                        xor bx,bx
  4256 0000246B 31C9                        xor cx,cx
  4257                                  
  4258 0000246D 2EA0[6F00]                  mov al,byte[cs:lengthAC]
  4259 00002471 2E8A26[7000]                mov ah,byte[cs:lengthBD]
  4260 00002476 2E8A1E[7100]                mov bl,byte[cs:multipleAC]
  4261 0000247B 2E8A3E[7200]                mov bh,byte[cs:multipleBD]
  4262 00002480 2E8A0E[8B00]                mov cl,byte[cs:lengthS]
  4263 00002485 2E8A2E[8E00]                mov ch,byte[cs:multipleS]
  4264                                  
  4265 0000248A 2E803E[6B00]01               cmp byte[cs:isRouteA],1
  4266 00002490 7408                         je  updateRouteAC
  4267 00002492 2E803E[6D00]01               cmp byte[cs:isRouteC],1
  4268 00002498 753E                         jne chckRouteBD
  4269                                  
  4270                                  updateRouteAC:
  4271 0000249A 2EFE06[7400]                     inc byte[cs:lencvrdAC]
  4272 0000249F 2EFE06[7600]                     inc byte[cs:isMultiple]
  4273                                  
  4274 000024A4 2E3806[7400]                     cmp byte[cs:lencvrdAC],al 
  4275 000024A9 7618                             jbe cmpMultiple1
  4276 000024AB 2EC606[7400]00                     mov byte[cs:lencvrdAC],0
  4277 000024B1 2EC606[7600]00                     mov byte[cs:isMultiple],0
  4278 000024B7 2EC606[7700]01                     mov byte[cs:isCrashed],1
  4279 000024BD E859FC                             call carCrashed
  4280 000024C0 E99900                             jmp exitMoveUp
  4281                                  
  4282                                      cmpMultiple1:
  4283 000024C3 2E381E[7600]                     cmp byte[cs:isMultiple],bl
  4284 000024C8 0F859000                         jne near exitMoveUp
  4285 000024CC 2EC606[7600]00                   mov byte[cs:isMultiple],0
  4286 000024D2 E85EFE                           call updateCarPos
  4287 000024D5 E98400                           jmp exitMoveUp
  4288                                  
  4289                                  chckRouteBD:
  4290 000024D8 2E803E[6C00]01               cmp byte[cs:isRouteB],1
  4291 000024DE 7408                         je  updateRouteBD
  4292 000024E0 2E803E[6E00]01               cmp byte[cs:isRouteD],1
  4293 000024E6 753A                         jne chckRouteS
  4294                                  
  4295                                  updateRouteBD:
  4296 000024E8 2EFE06[7500]                     inc byte[cs:lencvrdBD]
  4297 000024ED 2EFE06[7600]                     inc byte[cs:isMultiple]
  4298                                  
  4299 000024F2 2E3826[7500]                     cmp byte[cs:lencvrdBD],ah
  4300 000024F7 7617                             jbe cmpMultiple2
  4301 000024F9 2EC606[7500]00                     mov byte[cs:lencvrdBD],0
  4302 000024FF 2EC606[7600]00                     mov byte[cs:isMultiple],0
  4303 00002505 2EC606[7700]01                     mov byte[cs:isCrashed],1
  4304 0000250B E80BFC                             call carCrashed
  4305 0000250E EB4C                               jmp exitMoveUp
  4306                                  
  4307                                      cmpMultiple2:
  4308 00002510 2E383E[7600]                     cmp byte[cs:isMultiple],bh
  4309 00002515 7545                             jne exitMoveUp
  4310 00002517 2EC606[7600]00                   mov byte[cs:isMultiple],0
  4311 0000251D E813FE                           call updateCarPos
  4312 00002520 EB3A                             jmp exitMoveUp
  4313                                  
  4314                                  chckRouteS:
  4315 00002522 2EFE06[8F00]                     inc byte[cs:lencvrdS]
  4316 00002527 2EFE06[7600]                     inc byte[cs:isMultiple]
  4317                                  
  4318 0000252C 2E380E[8F00]                     cmp byte[cs:lencvrdS],cl
  4319 00002531 7617                             jbe cmpMultiple3
  4320 00002533 2EC606[8F00]00                     mov byte[cs:lencvrdS],0
  4321 00002539 2EC606[7600]00                     mov byte[cs:isMultiple],0
  4322 0000253F 2EC606[7700]01                     mov byte[cs:isCrashed],1
  4323 00002545 E8D1FB                             call carCrashed
  4324 00002548 EB12                               jmp exitMoveUp
  4325                                  
  4326                                      cmpMultiple3:
  4327 0000254A 2E382E[7600]                     cmp byte[cs:isMultiple],ch
  4328 0000254F 750B                             jne exitMoveUp
  4329 00002551 2EC606[7600]00                   mov byte[cs:isMultiple],0
  4330 00002557 E8D9FD                           call updateCarPos
  4331 0000255A EB00                             jmp exitMoveUp
  4332                                  
  4333                                  exitMoveUp:
  4334 0000255C 1F                                pop ds
  4335 0000255D 5E                                pop si
  4336 0000255E 5F                                pop di
  4337 0000255F 5A                                pop dx
  4338 00002560 59                                pop cx
  4339 00002561 5B                                pop bx
  4340 00002562 58                                pop ax
  4341 00002563 07                                pop es
  4342 00002564 5D                                pop bp
  4343                                  
  4344 00002565 C3                                ret
  4345                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4346                                  ;       MOVING RIGHT KEY      ;
  4347                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4348                                  moveRIGHT:
  4349 00002566 55                             push bp
  4350 00002567 89E5                           mov  bp,sp
  4351 00002569 06                             push es
  4352 0000256A 50                             push ax
  4353 0000256B 53                             push bx
  4354 0000256C 51                             push cx
  4355 0000256D 52                             push dx
  4356 0000256E 57                             push di
  4357 0000256F 56                             push si
  4358 00002570 1E                             push ds
  4359                                  
  4360 00002571 B800B8                         mov ax,0xb800
  4361 00002574 8EC0                           mov es,ax
  4362                                  
  4363 00002576 31C0                        xor ax,ax
  4364 00002578 31DB                        xor bx,bx
  4365 0000257A 31D2                        xor dx,dx
  4366                                  
  4367 0000257C 2EA0[6F00]                  mov al,byte[cs:lengthAC]
  4368 00002580 2E8A26[7000]                mov ah,byte[cs:lengthBD]
  4369 00002585 2E8A1E[8C00]                mov bl,byte[cs:lengthBS]
  4370 0000258A 2E8A3E[8D00]                mov bh,byte[cs:lengthDS]
  4371 0000258F 2E8A0E[8B00]                mov cl,byte[cs:lengthS] 
  4372 00002594 2E8A16[7300]                mov dl,byte[cs:noOfLaps]
  4373                                  
  4374 00002599 E896ED                      call strwhlrght
  4375                                  
  4376 0000259C 2E381E[7500]                cmp byte[cs:lencvrdBD],bl
  4377 000025A1 754A                        jne chckRouteRSD
  4378 000025A3 2E803E[6C00]01              cmp byte[cs:isRouteB],1
  4379 000025A9 0F857B02                    jne near exitMoveRightSound
  4380 000025AD 2EC606[6C00]00                   mov byte[cs:isRouteB],0
  4381 000025B3 2EC606[8800]01                   mov byte[cs:isRouteS],1
  4382 000025B9 2EC606[8900]01                   mov byte[cs:isForwardRS],1
  4383 000025BF 2EC606[7500]00                   mov byte[cs:lencvrdBD],0
  4384 000025C5 2EC606[7600]00                   mov byte[cs:isMultiple],0
  4385 000025CB E84AF2                           call prntbgS
  4386 000025CE E891F1                           call prntmap
  4387 000025D1 2E8B3E[9000]                     mov di,[cs:CarPosMapRSf]
  4388 000025D6 26C705DB84                       mov word[es:di],0x84db
  4389 000025DB 2EC706[7B00]A200                 mov word[cs:CarPosMapRB],162
  4390 000025E2 E86DF0                           call savemap
  4391 000025E5 2EFF06[3B00]                     inc word[cs:GearMeter]
  4392 000025EA E94102                      jmp exitMoveRight
  4393                                  
  4394                                  chckRouteRSD:
  4395 000025ED 2E383E[7500]                cmp byte[cs:lencvrdBD],bh
  4396 000025F2 754A                        jne cmpRouteAC
  4397 000025F4 2E803E[6E00]01              cmp byte[cs:isRouteD],1
  4398 000025FA 0F852A02                    jne near exitMoveRightSound
  4399 000025FE 2EC606[6E00]00                   mov byte[cs:isRouteD],0
  4400 00002604 2EC606[8800]01                   mov byte[cs:isRouteS],1
  4401 0000260A 2EC606[8A00]01                   mov byte[cs:isReverseRS],1
  4402 00002610 2EC606[7500]00                   mov byte[cs:lencvrdBD],0
  4403 00002616 2EC606[7600]00                   mov byte[cs:isMultiple],0
  4404 0000261C E8F9F1                           call prntbgS
  4405 0000261F E840F1                           call prntmap
  4406 00002622 2E8B3E[9200]                     mov di,[cs:CarPosMapRSr]
  4407 00002627 26C705DB84                       mov word[es:di],0x84db
  4408 0000262C 2EC706[7F00]3403                 mov word[cs:CarPosMapRD],820
  4409 00002633 E81CF0                           call savemap
  4410 00002636 2EFF06[3B00]                     inc word[cs:GearMeter]
  4411 0000263B E9F001                      jmp exitMoveRight
  4412                                  
  4413                                  cmpRouteAC:
  4414 0000263E 2E3806[7400]                cmp byte[cs:lencvrdAC],al
  4415 00002643 0F857E00                    jne near cmpRouteBD
  4416                                  
  4417 00002647 2E803E[6B00]01              cmp byte[cs:isRouteA],1
  4418 0000264D 7537                        jne chckRouteC
  4419 0000264F 2EC606[6B00]00                 mov byte[cs:isRouteA],0
  4420 00002655 2EC606[6C00]01                 mov byte[cs:isRouteB],1
  4421 0000265B 2EC606[7400]00                 mov byte[cs:lencvrdAC],0
  4422 00002661 2EC606[7600]00                 mov byte[cs:isMultiple],0
  4423 00002667 E883E0                         call prntbgB
  4424 0000266A E8F5F0                         call prntmap
  4425 0000266D 2E8B3E[7B00]                   mov di,[cs:CarPosMapRB]
  4426 00002672 26C705DB84                     mov word[es:di],0x84db
  4427 00002677 2EC706[7900]8202               mov word[cs:CarPosMapRA],642
  4428 0000267E 2EFF06[3B00]                   inc word[cs:GearMeter]
  4429 00002683 E9A801                      jmp exitMoveRight
  4430                                  
  4431                                  chckRouteC:
  4432 00002686 2E803E[6D00]01              cmp byte[cs:isRouteC],1
  4433 0000268C 7537                        jne cmpRouteBD
  4434 0000268E 2EC606[6D00]00                 mov byte[cs:isRouteC],0
  4435 00002694 2EC606[6E00]01                 mov byte[cs:isRouteD],1
  4436 0000269A 2EC606[7400]00                 mov byte[cs:lencvrdAC],0
  4437 000026A0 2EC606[7600]00                 mov byte[cs:isMultiple],0
  4438 000026A6 E8FEE1                         call prntbgD
  4439 000026A9 E8B6F0                         call prntmap
  4440 000026AC 2E8B3E[7F00]                   mov di,[cs:CarPosMapRD]
  4441 000026B1 26C705DB84                     mov word[es:di],0x84db
  4442 000026B6 2EC706[7D00]5401               mov word[cs:CarPosMapRC],340
  4443 000026BD 2EFF06[3B00]                   inc word[cs:GearMeter]
  4444 000026C2 E96901                      jmp exitMoveRight
  4445                                  
  4446                                  cmpRouteBD:
  4447 000026C5 2E3826[7500]                cmp byte[cs:lencvrdBD],ah
  4448 000026CA 0F858300                    jne near checkRouteS
  4449                                  
  4450 000026CE 2E803E[6C00]01              cmp byte[cs:isRouteB],1
  4451 000026D4 7537                        jne chckRouteD
  4452 000026D6 2EC606[6C00]00                 mov byte[cs:isRouteB],0
  4453 000026DC 2EC606[6D00]01                 mov byte[cs:isRouteC],1
  4454 000026E2 2EC606[7500]00                 mov byte[cs:lencvrdBD],0
  4455 000026E8 2EC606[7600]00                 mov byte[cs:isMultiple],0
  4456 000026EE E85AE0                         call prntbgC
  4457 000026F1 E86EF0                         call prntmap
  4458 000026F4 2E8B3E[7D00]                   mov di,[cs:CarPosMapRC]
  4459 000026F9 26C705DB84                     mov word[es:di],0x84db
  4460 000026FE 2EC706[7B00]A200               mov word[cs:CarPosMapRB],162
  4461 00002705 2EFF06[3B00]                   inc word[cs:GearMeter]
  4462 0000270A E92101                      jmp exitMoveRight
  4463                                  chckRouteD:
  4464 0000270D 2E803E[6E00]01              cmp byte[cs:isRouteD],1
  4465 00002713 753C                        jne checkRouteS
  4466 00002715 2EC606[6E00]00                 mov byte[cs:isRouteD],0
  4467 0000271B 2EC606[6B00]01                 mov byte[cs:isRouteA],1
  4468 00002721 2EC606[7500]00                 mov byte[cs:lencvrdBD],0
  4469 00002727 2EC606[7600]00                 mov byte[cs:isMultiple],0
  4470 0000272D 2EFF06[3D00]                   inc word[cs:RpmMeter]
  4471 00002732 E8A9DE                         call prntbgA
  4472 00002735 E82AF0                         call prntmap
  4473 00002738 2E8B3E[7900]                   mov di,[cs:CarPosMapRA]
  4474 0000273D 26C705DB84                     mov word[es:di],0x84db
  4475 00002742 2EC706[7F00]3403               mov word[cs:CarPosMapRD],820
  4476 00002749 2EFF06[3B00]                   inc word[cs:GearMeter]
  4477 0000274E E9DD00                      jmp exitMoveRight
  4478                                  
  4479                                  checkRouteS:
  4480 00002751 2E803E[8800]01               cmp byte[cs:isRouteS],1
  4481 00002757 0F85CD00                     jne near exitMoveRightSound
  4482                                  
  4483 0000275B 2E380E[8F00]                 cmp byte[cs:lencvrdS],cl
  4484 00002760 0F85C400                     jne near exitMoveRightSound
  4485                                  
  4486 00002764 2E803E[8900]01               cmp byte[cs:isForwardRS],1
  4487 0000276A 755A                         jne checkisReverse
  4488 0000276C 2EC606[6E00]01                 mov byte[cs:isRouteD],1
  4489 00002772 2EC606[8800]00                 mov byte[cs:isRouteS],0
  4490 00002778 2EC606[8900]00                 mov byte[cs:isForwardRS],0
  4491 0000277E 2EC606[8F00]00                 mov byte[cs:lencvrdS],0
  4492 00002784 2EC606[7600]01                 mov byte[cs:isMultiple],1
  4493 0000278A 2EFF06[3B00]                   inc word[cs:GearMeter]
  4494 0000278F 2EC606[7500]07                 mov byte[cs:lencvrdBD],7
  4495 00002795 E832E6                         call prntbndskrt          ; FUNCTION CALL:  PRINTING BOUNDARY SKIRTINGS
  4496 00002798 E876E6                         call prntgrs              ; FUNCTION CALL:  PRINTING GRASS
  4497 0000279B E843E7                         call prntrd               ; FUNCTION CALL:  PRINTING ROAD
  4498 0000279E E8A4E9                         call rvmirror             ; FUNCTION CALL:  PRINTING REAR VIEW MIRROR
  4499 000027A1 E803E1                         call prntbgD
  4500 000027A4 E8BBEF                         call prntmap
  4501 000027A7 2EC706[7F00]3003               mov word[cs:CarPosMapRD],816
  4502 000027AE 2E8B3E[7F00]                   mov di,[cs:CarPosMapRD]
  4503 000027B3 26C705DB84                     mov word[es:di],0x84db
  4504 000027B8 2EC706[9000]B000               mov word[cs:CarPosMapRSf],176
  4505 000027BF 2EFF06[3B00]                   inc word[cs:GearMeter]
  4506 000027C4 EB68                         jmp exitMoveRight
  4507                                  
  4508                                  checkisReverse:
  4509 000027C6 2E803E[8A00]01               cmp byte[cs:isReverseRS],1
  4510 000027CC 755A                         jne exitMoveRightSound
  4511 000027CE 2EC606[6C00]01                 mov byte[cs:isRouteB],1
  4512 000027D4 2EC606[8800]00                 mov byte[cs:isRouteS],0
  4513 000027DA 2EC606[8A00]00                 mov byte[cs:isReverseRS],0
  4514 000027E0 2EC606[8F00]00                 mov byte[cs:lencvrdS],0
  4515 000027E6 2EC606[7600]01                 mov byte[cs:isMultiple],1
  4516 000027EC 2EFF06[3B00]                   inc word[cs:GearMeter]
  4517 000027F1 2EC606[7500]16                 mov byte[cs:lencvrdBD],22
  4518 000027F7 E8D0E5                         call prntbndskrt          ; FUNCTION CALL:  PRINTING BOUNDARY SKIRTINGS
  4519 000027FA E814E6                         call prntgrs              ; FUNCTION CALL:  PRINTING GRASS
  4520 000027FD E8E1E6                         call prntrd               ; FUNCTION CALL:  PRINTING ROAD
  4521 00002800 E842E9                         call rvmirror             ; FUNCTION CALL:  PRINTING REAR VIEW MIRROR
  4522 00002803 E8E7DE                         call prntbgB
  4523 00002806 E859EF                         call prntmap
  4524 00002809 2EC706[7B00]B000               mov word[cs:CarPosMapRB],176
  4525 00002810 2E8B3E[7B00]                   mov di,[cs:CarPosMapRB]
  4526 00002815 26C705DB84                     mov word[es:di],0x84db
  4527 0000281A 2EC706[9200]9002               mov word[cs:CarPosMapRSr],656
  4528 00002821 2EFF06[3B00]                   inc word[cs:GearMeter]
  4529 00002826 EB06                         jmp exitMoveRight
  4530                                  
  4531                                  exitMoveRightSound:
  4532                                  
  4533 00002828 E84900                           call soundsig2
  4534 0000282B E88AF6                           call movement
  4535                                  
  4536                                  exitMoveRight:
  4537 0000282E 2E3916[3D00]                     cmp word[cs:RpmMeter],dx
  4538 00002833 7506                             jne exitMoveRight2
  4539 00002835 2EC606[7800]01                   mov byte[cs:RaceFinised],1
  4540                                  exitMoveRight2:
  4541 0000283B E8E1ED                           call speeddials
  4542 0000283E 1F                                pop ds
  4543 0000283F 5E                                pop si
  4544 00002840 5F                                pop di
  4545 00002841 5A                                pop dx
  4546 00002842 59                                pop cx
  4547 00002843 5B                                pop bx
  4548 00002844 58                                pop ax
  4549 00002845 07                                pop es
  4550 00002846 5D                                pop bp
  4551                                  
  4552 00002847 C3                                ret
  4553                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4554                                  ;  ISR: SOUND EFFECT SIGNAL 1 ;
  4555                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4556                                  soundsig1:
  4557 00002848 55                           push bp
  4558 00002849 89E5                         mov  bp,sp
  4559 0000284B 50                           push ax
  4560 0000284C 51                           push cx
  4561                                  
  4562 0000284D 8B4E04                       mov cx,[bp+4]   ; load number of times to delay sound
  4563                                  
  4564 00002850 B0B6                         mov al, 0x0b6
  4565 00002852 E643                         out 0x43, al
  4566                                  
  4567 00002854 B8B41F                       mov ax, 0x1fb4
  4568 00002857 E642                         out 0x42, al
  4569 00002859 88E0                         mov al, ah
  4570 0000285B E642                         out 0x42, al
  4571                                  
  4572 0000285D E461                         in al, 0x61
  4573 0000285F 88C4                         mov ah,al
  4574 00002861 0C03                         or al, 0x03
  4575 00002863 E661                         out 0x61, al
  4576                                  
  4577                                  loopsndsig1:
  4578 00002865 E828F8                       call delay
  4579 00002868 E2FB                         loop loopsndsig1
  4580                                  
  4581 0000286A 88E0                         mov al, ah
  4582 0000286C E661                         out 0x61, al
  4583                                  
  4584 0000286E 59                           pop cx
  4585 0000286F 58                           pop ax
  4586 00002870 5D                           pop bp
  4587                                  
  4588 00002871 C20200                       ret 2
  4589                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4590                                  ;  ISR: SOUND EFFECT SIGNAL 2 ;
  4591                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4592                                  soundsig2:
  4593 00002874 55                           push bp
  4594 00002875 89E5                         mov  bp,sp
  4595 00002877 50                           push ax
  4596 00002878 51                           push cx
  4597                                  
  4598 00002879 B90500                       mov cx, 5
  4599                                  
  4600                                  loopsndsig2: 
  4601                                      
  4602 0000287C B0B6                         mov al, 0b6h
  4603 0000287E E643                         out 43h, al
  4604                                  
  4605 00002880 B8B41F                       mov ax, 1fb4h
  4606 00002883 E642                         out 42h, al
  4607 00002885 88E0                         mov al, ah
  4608 00002887 E642                         out 42h, al
  4609                                  
  4610 00002889 E461                         in al, 61h
  4611 0000288B 88C4                         mov ah,al
  4612 0000288D 0C03                         or al, 3h
  4613 0000288F E661                         out 61h, al
  4614 00002891 E8FCF7                       call delay
  4615 00002894 88E0                         mov al, ah
  4616 00002896 E661                         out 61h, al
  4617                                  
  4618 00002898 51                           push cx
  4619 00002899 B9FFFF                       mov cx,0xffff
  4620 0000289C E2FE                    loopS.1: loop loopS.1
  4621 0000289E 59                           pop cx
  4622                                  
  4623 0000289F B82F15                      mov ax, 152fh
  4624 000028A2 E642                        out 42h, al
  4625 000028A4 88E0                        mov al, ah
  4626 000028A6 E642                        out 42h, al
  4627                                  
  4628 000028A8 E461                        in al, 61h
  4629 000028AA 88C4                        mov ah,al
  4630 000028AC 0C03                        or al, 3h
  4631 000028AE E661                        out 61h, al
  4632                                  
  4633 000028B0 51                           push cx
  4634 000028B1 B9FFFF                       mov cx,0xffff
  4635 000028B4 E2FE                    loopS.2: loop loopS.2
  4636 000028B6 59                           pop cx
  4637                                  
  4638 000028B7 88E0                        mov al, ah
  4639 000028B9 E661                        out 61h, al
  4640                                  
  4641 000028BB 51                           push cx
  4642 000028BC B9FFFF                       mov cx,0xffff
  4643 000028BF E2FE                    loopS.3: loop loopS.3
  4644 000028C1 59                           pop cx
  4645                                  
  4646 000028C2 B8970A                      mov ax, 0A97h
  4647 000028C5 E642                        out 42h, al
  4648 000028C7 88E0                        mov al, ah
  4649 000028C9 E642                        out 42h, al
  4650                                  
  4651 000028CB E461                        in al, 61h
  4652 000028CD 88C4                        mov ah,al
  4653 000028CF 0C03                        or al, 3h
  4654 000028D1 E661                        out 61h, al
  4655                                  
  4656 000028D3 51                           push cx
  4657 000028D4 B9FFFF                       mov cx,0xffff
  4658 000028D7 E2FE                    loopS.4: loop loopS.4
  4659 000028D9 59                           pop cx
  4660                                  
  4661 000028DA 88E0                        mov al, ah
  4662 000028DC E661                        out 61h, al
  4663                                   
  4664 000028DE E29C                        loop loopsndsig2
  4665                                  
  4666 000028E0 59                           pop cx
  4667 000028E1 58                           pop ax
  4668 000028E2 5D                           pop bp
  4669                                   
  4670 000028E3 C3                           ret
  4671                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4672                                  ;        ISR: KEYBOARD        ;
  4673                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4674                                  kbisr:
  4675 000028E4 50                           push ax
  4676 000028E5 06                           push es
  4677                                  
  4678 000028E6 B800B8                       mov ax,0xb800
  4679 000028E9 8EC0                         mov es,ax
  4680                                  
  4681 000028EB E460                        in al,0x60
  4682                                  
  4683 000028ED 2E803E[7800]01              cmp byte[cs:RaceFinised],1
  4684 000028F3 744B                        je  nokeymatch
  4685                                  
  4686 000028F5 3C48                        cmp al,0x48               ; SCAN CODE UpArrow
  4687 000028F7 7511                        jne cmpnxtkey1
  4688                                  
  4689 000028F9 E85BFB                      call moveUP
  4690                                  
  4691 000028FC E8B9F5                      call movement
  4692 000028FF E8B6F5                      call movement
  4693 00002902 2E8006[8100]01              add byte[cs:Seconds],1
  4694 00002908 EB3D                        jmp keymatched
  4695                                  
  4696                                  cmpnxtkey1:
  4697 0000290A 3C50                        cmp al,0x50               ; SCAN CODE DownArrow
  4698 0000290C 750B                        jne cmpnxtkey2
  4699 0000290E E8E5FA                      call moveDOWN
  4700 00002911 2E8006[8100]01              add byte[cs:Seconds],1
  4701 00002917 EB2E                        jmp keymatched
  4702                                  
  4703                                  cmpnxtkey2:
  4704 00002919 3C4B                        cmp al,0x4B               ; SCAN CODE LeftArrow
  4705 0000291B 7514                        jne cmpnxtkey3
  4706                                  
  4707 0000291D E809EB                      call strwhllft
  4708 00002920 E895F5                      call movement
  4709 00002923 E84EFF                      call soundsig2
  4710 00002926 E88FF5                      call movement
  4711 00002929 2E8006[8100]02              add byte[cs:Seconds],2
  4712 0000292F EB16                        jmp keymatched
  4713                                  
  4714                                  cmpnxtkey3:
  4715 00002931 3C4D                        cmp al,0x4D               ; SCAN CODE RightArrow
  4716 00002933 750B                        jne nokeymatch
  4717                                  
  4718 00002935 E82EFC                      call moveRIGHT
  4719 00002938 2E8006[8100]02              add byte[cs:Seconds],2
  4720 0000293E EB07                        jmp keymatched
  4721                                  
  4722                                  nokeymatch:
  4723 00002940 07                            pop es
  4724 00002941 58                            pop ax
  4725 00002942 2EFF2E[3F00]                  jmp far [cs:OldKbISR]   ; call back the original ISR
  4726                                  
  4727                                  keymatched:
  4728 00002947 B020                        mov al,0x20
  4729 00002949 E620                        out 0x20,al               ; send EOI to PIC
  4730                                  
  4731 0000294B 07                          pop es
  4732 0000294C 58                          pop ax
  4733                                  
  4734 0000294D CF                          iret                       ; return from interrupt
  4735                                  
  4736                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4737                                  ;         ISR: TIMER          ;
  4738                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4739                                  timer:
  4740 0000294E 50                           push ax
  4741                                  
  4742 0000294F 2EFE06[8300]                 inc byte [cs:TickCount]
  4743                                       
  4744 00002954 2E803E[8300]12               cmp byte[cs:TickCount],18
  4745 0000295A 7526                         jne exitTimer
  4746 0000295C 2EFE06[8100]                 inc byte[cs:Seconds]
  4747 00002961 2EC606[8300]00               mov byte [cs:TickCount],0
  4748                                  
  4749 00002967 B88C00                       mov ax,140                    ; LOAD POSITION ON STACK
  4750 0000296A 50                           push ax
  4751 0000296B E81A00                       call printClock
  4752                                       
  4753 0000296E 2E833E[3900]00               cmp word[cs:SpeedMeter],0
  4754 00002974 740C                         je exitTimer
  4755                                     
  4756 00002976 E83FF5                       call movement
  4757 00002979 E83CF5                       call movement
  4758 0000297C 2E832E[3900]02               sub word[cs:SpeedMeter],2
  4759                                  
  4760                                  exitTimer:
  4761 00002982 B020                         mov al, 0x20
  4762 00002984 E620                         out 0x20, al
  4763                                  
  4764 00002986 58                           pop ax
  4765                                  
  4766 00002987 CF                           iret
  4767                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4768                                  ;        PRINTING CLOCK       ;
  4769                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4770                                  printClock:
  4771 00002988 55                              push bp
  4772 00002989 89E5                    	mov bp, sp
  4773 0000298B 06                      	push es
  4774 0000298C 50                      	push ax
  4775 0000298D 53                      	push bx
  4776 0000298E 51                      	push cx
  4777 0000298F 52                      	push dx
  4778 00002990 57                      	push di
  4779                                  
  4780 00002991 B800B8                  	mov ax, 0xb800
  4781 00002994 8EC0                    	mov es, ax
  4782                                  
  4783 00002996 8B7E04                        mov di,[bp+4]
  4784 00002999 83EF02                        sub di,2
  4785                                  
  4786 0000299C B83A07                        mov ax,0x073A     ; ASCII for :(colon) character
  4787 0000299F 268905                        mov [es:di],ax
  4788                                  
  4789 000029A2 2E803E[8100]3C                cmp byte[cs:Seconds],60
  4790 000029A8 720B                          jb prntSecondsNormal
  4791                                        
  4792 000029AA 2E802E[8100]3C                sub byte[cs:Seconds],60
  4793 000029B0 2EFE06[8200]                  inc byte[cs:Minutes]
  4794                                  
  4795                                  prntSecondsNormal:
  4796 000029B5 31C0                           xor ax,ax
  4797 000029B7 2EA0[8100]                     mov al, byte[cs:Seconds]
  4798 000029BB BB0A00                         mov bx, 10
  4799 000029BE B90000                         mov cx, 0
  4800                                  
  4801                                  nextdigitSec:	
  4802 000029C1 BA0000                            mov dx, 0
  4803 000029C4 F7F3                    	  div bx
  4804 000029C6 80C230                  	  add dl, 0x30
  4805 000029C9 52                      	  push dx
  4806 000029CA 41                      	  inc cx
  4807 000029CB 83F800                  	  cmp ax, 0
  4808 000029CE 75F1                    	  jnz nextdigitSec
  4809                                  
  4810 000029D0 83F901                            cmp cx,1
  4811 000029D3 7505                              jne prntSec    
  4812 000029D5 BA3000                            mov dx,0x0030
  4813 000029D8 52                                push dx
  4814 000029D9 41                                inc cx
  4815                                  
  4816                                  prntSec:
  4817 000029DA 8B7E04                  	mov di,[bp+4]
  4818                                  
  4819                                  nextposSec:	
  4820 000029DD 5A                              pop dx
  4821 000029DE B607                    	mov dh, 0x07
  4822 000029E0 268915                  	mov [es:di], dx
  4823 000029E3 83C702                  	add di, 2
  4824 000029E6 E2F5                    	loop nextposSec
  4825                                  
  4826 000029E8 31C0                            xor ax,ax
  4827 000029EA 2EA0[8200]              	mov al,byte[cs:Minutes]
  4828 000029EE BB0A00                  	mov bx, 10
  4829 000029F1 B90000                  	mov cx, 0
  4830                                  
  4831                                  nextdigitMin:	
  4832 000029F4 BA0000                             mov dx, 0
  4833 000029F7 F7F3                    	   div bx
  4834 000029F9 80C230                  	   add dl, 0x30
  4835 000029FC 52                      	   push dx
  4836 000029FD 41                      	   inc cx
  4837 000029FE 83F800                  	   cmp ax, 0
  4838 00002A01 75F1                    	   jnz nextdigitMin
  4839                                  
  4840 00002A03 83F901                            cmp cx,1
  4841 00002A06 7505                              jne prntMin    
  4842 00002A08 BA3000                            mov dx,0x0030
  4843 00002A0B 52                                push dx
  4844 00002A0C 41                                inc cx
  4845                                  
  4846                                  prntMin:
  4847 00002A0D 8B7E04                  	mov di,[bp+4]
  4848 00002A10 83EF06                          sub di,6
  4849                                  
  4850                                  nextposMin:	
  4851 00002A13 5A                              pop dx
  4852 00002A14 B607                    	mov dh, 0x07
  4853 00002A16 268915                  	mov [es:di], dx
  4854 00002A19 83C702                  	add di, 2
  4855 00002A1C E2F5                    	loop nextposMin
  4856                                  
  4857 00002A1E 5F                      		pop di
  4858 00002A1F 5A                      		pop dx
  4859 00002A20 59                      		pop cx
  4860 00002A21 5B                      		pop bx
  4861 00002A22 58                      		pop ax
  4862 00002A23 07                      		pop es
  4863 00002A24 5D                      		pop bp
  4864                                  
  4865 00002A25 C20200                  		ret 2
  4866                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4867                                  ;    LOADING RESULT SCREEN    ;
  4868                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  4869                                  loadingresult:
  4870                                  
  4871 00002A28 55                             push bp
  4872 00002A29 89E5                           mov  bp,sp
  4873 00002A2B 56                             push si
  4874 00002A2C 06                             push es
  4875 00002A2D 50                             push ax
  4876 00002A2E 53                             push bx 
  4877 00002A2F 51                             push cx
  4878 00002A30 52                             push dx
  4879 00002A31 57                             push di
  4880 00002A32 1E                             push ds
  4881                                  
  4882 00002A33 B800B8                         mov ax,0xb800
  4883 00002A36 8EC0                           mov es,ax
  4884                                  
  4885 00002A38 FC                             cld
  4886                                  
  4887 00002A39 E877DA                         call clrscrn
  4888                                  
  4889 00002A3C B81C00                      mov  ax,28                ; load x position
  4890 00002A3F 50                          push ax                   ; push x position
  4891 00002A40 B80500                      mov  ax,5                 ; load y position
  4892 00002A43 50                          push ax                   ; push y position
  4893 00002A44 B80400                      mov  ax,0x0004            ; red on black attribute
  4894 00002A47 50                          push ax                   ; push attribute
  4895 00002A48 B8[5303]                    mov  ax,RaceEndMsg        ; load string address
  4896 00002A4B 50                          push ax                   ; push string address
  4897 00002A4C E87DDA                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  4898                                  
  4899 00002A4F E83EF6                     call delay
  4900 00002A52 E83BF6                     call delay
  4901 00002A55 E838F6                     call delay
  4902 00002A58 E835F6                     call delay
  4903 00002A5B E832F6                     call delay
  4904 00002A5E E82FF6                     call delay
  4905                                  
  4906 00002A61 B82000                      mov  ax,32                ; load x position
  4907 00002A64 50                          push ax                   ; push x position
  4908 00002A65 B80800                      mov  ax,8                 ; load y position
  4909 00002A68 50                          push ax                   ; push y position
  4910 00002A69 B80E00                      mov  ax,0x000e            ; red on black attribute
  4911 00002A6C 50                          push ax                   ; push attribute
  4912 00002A6D B8[6D03]                    mov  ax,FetchData         ; load string address
  4913 00002A70 50                          push ax                   ; push string address
  4914 00002A71 E858DA                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  4915                                  
  4916 00002A74 B82007                      mov ax,0x0720
  4917 00002A77 BF5E05                      mov di,1374
  4918 00002A7A 31DB                        xor bx,bx
  4919                                  
  4920                                  loopFD:
  4921 00002A7C 57                          push di
  4922 00002A7D B90400                      mov cx,4
  4923 00002A80 F3AB                        rep stosw
  4924 00002A82 5F                          pop di
  4925 00002A83 E80AF6                      call delay
  4926 00002A86 E807F6                      call delay
  4927 00002A89 26C7052E0E                  mov word[es:di],0x0e2e
  4928 00002A8E E8FFF5                      call delay
  4929 00002A91 E8FCF5                      call delay
  4930 00002A94 26C745022E0E                mov word[es:di+2],0x0e2e
  4931 00002A9A E8F3F5                      call delay
  4932 00002A9D E8F0F5                      call delay
  4933 00002AA0 26C745042E0E                mov word[es:di+4],0x0e2e
  4934 00002AA6 E8E7F5                      call delay
  4935 00002AA9 E8E4F5                      call delay
  4936 00002AAC 43                          inc bx
  4937 00002AAD 83FB04                      cmp bx,4
  4938 00002AB0 75CA                        jne loopFD
  4939                                  
  4940 00002AB2 B81D00                      mov  ax,29                ; load x position
  4941 00002AB5 50                          push ax                   ; push x position
  4942 00002AB6 B80B00                      mov  ax,11                ; load y position
  4943 00002AB9 50                          push ax                   ; push y position
  4944 00002ABA B80800                      mov  ax,0x0008            ; red on black attribute
  4945 00002ABD 50                          push ax                   ; push attribute
  4946 00002ABE B8[8003]                    mov  ax,CalcResult        ; load string address
  4947 00002AC1 50                          push ax                   ; push string address
  4948 00002AC2 E807DA                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  4949                                  
  4950 00002AC5 B82007                      mov ax,0x0720
  4951 00002AC8 BF4407                      mov di,1860
  4952 00002ACB 31DB                        xor bx,bx
  4953                                  
  4954                                  loopCR:
  4955 00002ACD 57                          push di
  4956 00002ACE B90400                      mov cx,4
  4957 00002AD1 F3AB                        rep stosw
  4958 00002AD3 5F                          pop di
  4959 00002AD4 E8B9F5                      call delay
  4960 00002AD7 E8B6F5                      call delay
  4961 00002ADA 26C7052E08                  mov word[es:di],0x082e
  4962 00002ADF E8AEF5                      call delay
  4963 00002AE2 E8ABF5                      call delay
  4964 00002AE5 26C745022E08                mov word[es:di+2],0x082e
  4965 00002AEB E8A2F5                      call delay
  4966 00002AEE E89FF5                      call delay
  4967 00002AF1 26C745042E08                mov word[es:di+4],0x082e
  4968 00002AF7 E896F5                      call delay
  4969 00002AFA E893F5                      call delay
  4970 00002AFD 43                          inc bx
  4971 00002AFE 83FB04                      cmp bx,4
  4972 00002B01 75CA                        jne loopCR
  4973                                  
  4974 00002B03 B82300                      mov  ax,35                ; load x position
  4975 00002B06 50                          push ax                   ; push x position
  4976 00002B07 B80D00                      mov  ax,13                ; load y position
  4977 00002B0A 50                          push ax                   ; push y position
  4978 00002B0B B80C00                      mov  ax,0x000c            ; red on black attribute
  4979 00002B0E 50                          push ax                   ; push attribute
  4980 00002B0F B8[9903]                    mov  ax,PrintResult       ; load string address
  4981 00002B12 50                          push ax                   ; push string address
  4982 00002B13 E8B6D9                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  4983                                  
  4984 00002B16 BF7C08                      mov di,2172
  4985                                  
  4986 00002B19 E874F5                      call delay
  4987 00002B1C E871F5                      call delay
  4988 00002B1F E86EF5                      call delay
  4989 00002B22 26C7052E0C                  mov word[es:di],0x0c2e
  4990 00002B27 E866F5                      call delay
  4991 00002B2A E863F5                      call delay
  4992 00002B2D E860F5                      call delay
  4993 00002B30 E85DF5                      call delay
  4994 00002B33 26C745022E0C                mov word[es:di+2],0x0c2e
  4995 00002B39 E854F5                      call delay
  4996 00002B3C E851F5                      call delay
  4997 00002B3F E84EF5                      call delay
  4998 00002B42 E84BF5                      call delay
  4999 00002B45 26C745042E0C                mov word[es:di+4],0x0c2e
  5000 00002B4B E842F5                      call delay
  5001 00002B4E E83FF5                      call delay
  5002 00002B51 E83CF5                      call delay
  5003 00002B54 E839F5                      call delay
  5004                                  
  5005 00002B57 1F                             pop ds
  5006 00002B58 5F                             pop di
  5007 00002B59 5A                             pop dx
  5008 00002B5A 59                             pop cx
  5009 00002B5B 5B                             pop bx
  5010 00002B5C 58                             pop ax
  5011 00002B5D 07                             pop es
  5012 00002B5E 5E                             pop si
  5013 00002B5F 5D                             pop bp
  5014                                  
  5015 00002B60 C3                             ret
  5016                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  5017                                  ;   QUALIFYING RESULT SHEET   ;
  5018                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  5019                                  qualifyresultsheet:
  5020 00002B61 55                             push bp
  5021 00002B62 89E5                           mov  bp,sp
  5022 00002B64 83ED04                         sub  bp,4                    ; create local variable space
  5023 00002B67 56                             push si
  5024 00002B68 06                             push es
  5025 00002B69 50                             push ax
  5026 00002B6A 53                             push bx 
  5027 00002B6B 51                             push cx
  5028 00002B6C 52                             push dx
  5029 00002B6D 57                             push di
  5030 00002B6E 1E                             push ds
  5031                                  
  5032 00002B6F B800B8                         mov ax,0xb800
  5033 00002B72 8EC0                           mov es,ax
  5034                                  
  5035 00002B74 FC                             cld
  5036                                  
  5037 00002B75 E83BD9                         call clrscrn
  5038                                  
  5039 00002B78 2E803E[8100]3C                cmp byte[cs:Seconds],60
  5040 00002B7E 720B                          jb prntQRSNormal
  5041                                  
  5042 00002B80 2E802E[8100]3C                sub byte[cs:Seconds],60
  5043 00002B86 2EFE06[8200]                  inc byte[cs:Minutes]
  5044                                  
  5045                                  prntQRSNormal:
  5046 00002B8B B8DB04                         mov ax,0x04db
  5047 00002B8E 31FF                           xor di,di
  5048 00002B90 B9F000                         mov cx,240
  5049 00002B93 F3AB                           rep stosw
  5050                                  
  5051 00002B95 B81C00                      mov  ax,28                ; load x position
  5052 00002B98 50                          push ax                   ; push x position
  5053 00002B99 B80100                      mov  ax,1                 ; load y position
  5054 00002B9C 50                          push ax                   ; push y position
  5055 00002B9D B84000                      mov  ax,0x0040            ; black on red attribute
  5056 00002BA0 50                          push ax                   ; push attribute
  5057 00002BA1 B8[9400]                    mov  ax,GameName          ; load string address
  5058 00002BA4 50                          push ax                   ; push string address
  5059 00002BA5 E824D9                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5060                                  
  5061 00002BA8 B81900                      mov  ax,25                ; load x position
  5062 00002BAB 50                          push ax                   ; push x position
  5063 00002BAC B80400                      mov  ax,4                 ; load y position
  5064 00002BAF 50                          push ax                   ; push y position
  5065 00002BB0 B80F00                      mov  ax,0x000f            ; white on blackattribute
  5066 00002BB3 50                          push ax                   ; push attribute
  5067 00002BB4 B8[AC00]                    mov  ax,ResultSheet       ; load string address
  5068 00002BB7 50                          push ax                   ; push string address
  5069 00002BB8 E811D9                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5070                                  
  5071 00002BBB BB0A00                          mov bx,10             ; load Overall x position
  5072                                  
  5073 00002BBE 89D8                        mov  ax,bx                ; load x position
  5074 00002BC0 50                          push ax                   ; push x position
  5075 00002BC1 B80600                      mov  ax,6                 ; load y position
  5076 00002BC4 50                          push ax                   ; push y position
  5077 00002BC5 B80700                      mov  ax,0x0007            ; grey on blackattribute
  5078 00002BC8 50                          push ax                   ; push attribute
  5079 00002BC9 B8[CA00]                    mov  ax,Header            ; load string address
  5080 00002BCC 50                          push ax                   ; push string address
  5081 00002BCD E8FCD8                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5082                                  
  5083 00002BD0 89D8                        mov  ax,bx                ; load x position
  5084 00002BD2 50                          push ax                   ; push x position
  5085 00002BD3 B80800                      mov  ax,8                 ; load y position
  5086 00002BD6 50                          push ax                   ; push y position
  5087 00002BD7 B80F00                      mov  ax,0x000f            ; white on blackattribute
  5088 00002BDA 50                          push ax                   ; push attribute
  5089 00002BDB B8[FE00]                    mov  ax,Position1         ; load string address
  5090 00002BDE 50                          push ax                   ; push string address
  5091 00002BDF E8EAD8                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5092                                  
  5093 00002BE2 89D8                        mov  ax,bx                ; load x position
  5094 00002BE4 50                          push ax                   ; push x position
  5095 00002BE5 B80900                      mov  ax,9                 ; load y position
  5096 00002BE8 50                          push ax                   ; push y position
  5097 00002BE9 B80F00                      mov  ax,0x000f            ; white on blackattribute
  5098 00002BEC 50                          push ax                   ; push attribute
  5099 00002BED B8[3201]                    mov  ax,Position2         ; load string address
  5100 00002BF0 50                          push ax                   ; push string address
  5101 00002BF1 E8D8D8                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5102                                  
  5103 00002BF4 89D8                        mov  ax,bx                ; load x position
  5104 00002BF6 50                          push ax                   ; push x position
  5105 00002BF7 B80A00                      mov  ax,10                ; load y position
  5106 00002BFA 50                          push ax                   ; push y position
  5107 00002BFB B80F00                      mov  ax,0x000f            ; white on blackattribute
  5108 00002BFE 50                          push ax                   ; push attribute
  5109 00002BFF B8[6601]                    mov  ax,Position3         ; load string address
  5110 00002C02 50                          push ax                   ; push string address
  5111 00002C03 E8C6D8                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5112                                  
  5113 00002C06 89D8                        mov  ax,bx                ; load x position
  5114 00002C08 50                          push ax                   ; push x position
  5115 00002C09 B80B00                      mov  ax,11                ; load y position
  5116 00002C0C 50                          push ax                   ; push y position
  5117 00002C0D B80F00                      mov  ax,0x000f            ; white on blackattribute
  5118 00002C10 50                          push ax                   ; push attribute
  5119 00002C11 B8[9A01]                    mov  ax,Position4         ; load string address
  5120 00002C14 50                          push ax                   ; push string address
  5121 00002C15 E8B4D8                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5122                                  
  5123 00002C18 89D8                        mov  ax,bx                ; load x position
  5124 00002C1A 50                          push ax                   ; push x position
  5125 00002C1B B80C00                      mov  ax,12                ; load y position
  5126 00002C1E 50                          push ax                   ; push y position
  5127 00002C1F B80F00                      mov  ax,0x000f            ; white on blackattribute
  5128 00002C22 50                          push ax                   ; push attribute
  5129 00002C23 B8[CE01]                    mov  ax,Position5         ; load string address
  5130 00002C26 50                          push ax                   ; push string address
  5131 00002C27 E8A2D8                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5132                                  
  5133 00002C2A 89D8                        mov  ax,bx                ; load x position
  5134 00002C2C 50                          push ax                   ; push x position
  5135 00002C2D B80D00                      mov  ax,13                ; load y position
  5136 00002C30 50                          push ax                   ; push y position
  5137 00002C31 B80F00                      mov  ax,0x000f            ; white on blackattribute
  5138 00002C34 50                          push ax                   ; push attribute
  5139 00002C35 B8[0202]                    mov  ax,Position6         ; load string address
  5140 00002C38 50                          push ax                   ; push string address
  5141 00002C39 E890D8                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5142                                  
  5143 00002C3C 89D8                        mov  ax,bx                ; load x position
  5144 00002C3E 50                          push ax                   ; push x position
  5145 00002C3F B80E00                      mov  ax,14                ; load y position
  5146 00002C42 50                          push ax                   ; push y position
  5147 00002C43 B80F00                      mov  ax,0x000f            ; white on blackattribute
  5148 00002C46 50                          push ax                   ; push attribute
  5149 00002C47 B8[3602]                    mov  ax,Position7         ; load string address
  5150 00002C4A 50                          push ax                   ; push string address
  5151 00002C4B E87ED8                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5152                                  
  5153 00002C4E 89D8                        mov  ax,bx                ; load x position
  5154 00002C50 50                          push ax                   ; push x position
  5155 00002C51 B80F00                      mov  ax,15                ; load y position
  5156 00002C54 50                          push ax                   ; push y position
  5157 00002C55 B80F00                      mov  ax,0x000f            ; white on blackattribute
  5158 00002C58 50                          push ax                   ; push attribute
  5159 00002C59 B8[6A02]                    mov  ax,Position8         ; load string address
  5160 00002C5C 50                          push ax                   ; push string address
  5161 00002C5D E86CD8                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5162                                  
  5163 00002C60 89D8                        mov  ax,bx                ; load x position
  5164 00002C62 50                          push ax                   ; push x position
  5165 00002C63 B81000                      mov  ax,16                ; load y position
  5166 00002C66 50                          push ax                   ; push y position
  5167 00002C67 B80F00                      mov  ax,0x000f            ; white on blackattribute
  5168 00002C6A 50                          push ax                   ; push attribute
  5169 00002C6B B8[9E02]                    mov  ax,Position9         ; load string address
  5170 00002C6E 50                          push ax                   ; push string address
  5171 00002C6F E85AD8                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5172                                  
  5173 00002C72 89D8                        mov  ax,bx                ; load x position
  5174 00002C74 50                          push ax                   ; push x position
  5175 00002C75 B81100                      mov  ax,17                ; load y position
  5176 00002C78 50                          push ax                   ; push y position
  5177 00002C79 B80F00                      mov  ax,0x000f            ; white on blackattribute
  5178 00002C7C 50                          push ax                   ; push attribute
  5179 00002C7D B8[D202]                    mov  ax,Position10        ; load string address
  5180 00002C80 50                          push ax                   ; push string address
  5181 00002C81 E848D8                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5182                                  
  5183 00002C84 31C0                        xor ax,ax
  5184 00002C86 31DB                        xor bx,bx
  5185                                  
  5186 00002C88 B80005                      mov ax,1280
  5187                                      
  5188 00002C8B 2E803E[8200]04              cmp byte[cs:Minutes],4
  5189 00002C91 7F05                        jg  QRScmp2
  5190 00002C93 B80100                       mov ax,1
  5191 00002C96 EB6B                        jmp exitQRS
  5192                                  
  5193                                  QRScmp2:
  5194 00002C98 2E803E[8200]05              cmp byte[cs:Minutes],5
  5195 00002C9E 7F05                        jg  QRScmp3
  5196 00002CA0 B80200                        mov ax,2
  5197 00002CA3 EB5E                        jmp exitQRS
  5198                                  
  5199                                  QRScmp3:
  5200 00002CA5 2E803E[8200]06              cmp byte[cs:Minutes],6
  5201 00002CAB 7F05                        jg  QRScmp4
  5202 00002CAD B80300                        mov ax,3
  5203 00002CB0 EB51                        jmp exitQRS
  5204                                  
  5205                                  QRScmp4:
  5206 00002CB2 2E803E[8200]07              cmp byte[cs:Minutes],7
  5207 00002CB8 7F05                        jg  QRScmp5
  5208 00002CBA B80400                        mov ax,4
  5209 00002CBD EB44                        jmp exitQRS
  5210                                  
  5211                                  QRScmp5:
  5212 00002CBF 2E803E[8200]08              cmp byte[cs:Minutes],8
  5213 00002CC5 7F05                        jg  QRScmp6
  5214 00002CC7 B80500                        mov ax,5
  5215 00002CCA EB37                        jmp exitQRS
  5216                                  
  5217                                  QRScmp6:
  5218 00002CCC 2E803E[8200]09              cmp byte[cs:Minutes],9
  5219 00002CD2 7F05                        jg  QRScmp7
  5220 00002CD4 B80600                        mov ax,6
  5221 00002CD7 EB2A                        jmp exitQRS
  5222                                  
  5223                                  QRScmp7:
  5224 00002CD9 2E803E[8200]0A              cmp byte[cs:Minutes],10
  5225 00002CDF 7F05                        jg  QRScmp8
  5226 00002CE1 B80700                        mov ax,7
  5227 00002CE4 EB1D                        jmp exitQRS
  5228                                  
  5229                                  QRScmp8:
  5230 00002CE6 2E803E[8200]0B              cmp byte[cs:Minutes],11
  5231 00002CEC 7F05                        jg  QRScmp9
  5232 00002CEE B80800                        mov ax,8
  5233 00002CF1 EB10                        jmp exitQRS
  5234                                  
  5235                                  QRScmp9:
  5236 00002CF3 2E803E[8200]0C              cmp byte[cs:Minutes],12
  5237 00002CF9 7F05                        jg  QRScmp10
  5238 00002CFB B80900                        mov ax,9
  5239 00002CFE EB03                        jmp exitQRS
  5240                                  
  5241                                  QRScmp10:
  5242 00002D00 B80A00                      mov ax,10
  5243                                  
  5244                                  exitQRS:
  5245 00002D03 8946FC                      mov word[bp-4],ax         ; store rank in local variable for position print
  5246 00002D06 8946FE                      mov word[bp-2],ax         ; store rank in local variable for time print
  5247 00002D09 BA0700                      mov dx,7
  5248 00002D0C 0356FE                      add dx,word[bp-2]         ; move to respective row
  5249                                  
  5250 00002D0F BB0A00                      mov  bx,10                ; load x position
  5251 00002D12 53                          push bx                   ; push x position
  5252 00002D13 52                          push dx                   ; push y position
  5253 00002D14 BB0C00                      mov  bx,0x000C            ; pink on blackattribute
  5254 00002D17 53                          push bx                   ; push attribute
  5255 00002D18 BB[0603]                    mov  bx,PositionX         ; load string address
  5256 00002D1B 53                          push bx                   ; push string address
  5257 00002D1C E8ADD7                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5258                                  
  5259 00002D1F B050                        mov al,80
  5260 00002D21 F7E2                        mul dx
  5261 00002D23 83C039                      add ax,57
  5262 00002D26 D1E0                        shl ax,1
  5263 00002D28 8946FE                      mov word[bp-2],ax          ; store rank
  5264                                      
  5265 00002D2B 31C0                        xor ax,ax
  5266 00002D2D 2EA0[8100]                  mov al, byte[cs:Seconds]
  5267 00002D31 BB0A00                      mov bx, 10
  5268 00002D34 B90000                      mov cx, 0
  5269                                  
  5270                                  QRSdigitSec:	
  5271 00002D37 BA0000                            mov dx, 0
  5272 00002D3A F7F3                    	  div bx
  5273 00002D3C 80C230                  	  add dl, 0x30
  5274 00002D3F 52                      	  push dx
  5275 00002D40 41                      	  inc cx
  5276 00002D41 83F800                  	  cmp ax, 0
  5277 00002D44 75F1                    	  jnz QRSdigitSec
  5278                                  
  5279 00002D46 83F901                            cmp cx,1
  5280 00002D49 7505                              jne QRSprntSec    
  5281 00002D4B BA3000                            mov dx,0x0030
  5282 00002D4E 52                                push dx
  5283 00002D4F 41                                inc cx
  5284                                  
  5285                                  QRSprntSec: 
  5286 00002D50 8B7EFE                  	mov di,[bp-2]
  5287                                  
  5288                                  QRSnextposSec:	
  5289 00002D53 5A                              pop dx
  5290 00002D54 B60C                    	mov dh, 0x0C
  5291 00002D56 268915                  	mov [es:di], dx
  5292 00002D59 83C702                  	add di, 2
  5293 00002D5C E2F5                    	loop QRSnextposSec
  5294                                  
  5295 00002D5E 31C0                            xor ax,ax
  5296 00002D60 2EA0[8200]              	mov al,byte[cs:Minutes]
  5297 00002D64 BB0A00                  	mov bx, 10
  5298 00002D67 B90000                  	mov cx, 0
  5299                                  
  5300                                  QRSdigitMin:	
  5301 00002D6A BA0000                             mov dx, 0
  5302 00002D6D F7F3                    	   div bx
  5303 00002D6F 80C230                  	   add dl, 0x30
  5304 00002D72 52                      	   push dx
  5305 00002D73 41                      	   inc cx
  5306 00002D74 83F800                  	   cmp ax, 0
  5307 00002D77 75F1                    	   jnz QRSdigitMin
  5308                                  
  5309 00002D79 83F901                            cmp cx,1
  5310 00002D7C 7505                              jne QRSprntMin    
  5311 00002D7E BA3000                            mov dx,0x0030
  5312 00002D81 52                                push dx
  5313 00002D82 41                                inc cx
  5314                                  
  5315                                  QRSprntMin:
  5316 00002D83 8B7EFE                  	mov di,[bp-2]
  5317 00002D86 83EF06                          sub di,6
  5318                                  
  5319                                  QRSposMin:	
  5320 00002D89 5A                              pop dx
  5321 00002D8A B60C                    	mov dh, 0x0C
  5322 00002D8C 268915                  	mov [es:di], dx
  5323 00002D8F 83C702                  	add di, 2
  5324 00002D92 E2F5                    	loop QRSposMin
  5325                                  
  5326 00002D94 8B7EFE                        mov di,[bp-2]
  5327 00002D97 83EF02                        sub di,2
  5328                                  
  5329 00002D9A B83A0C                        mov ax,0x0C3A         ; ASCII for :(colon) character
  5330 00002D9D 268905                        mov [es:di],ax
  5331                                  
  5332 00002DA0 31C0                        xor ax,ax
  5333 00002DA2 8A46FC                      mov al, byte[bp-4]
  5334 00002DA5 BB0A00                      mov bx, 10
  5335 00002DA8 B90000                      mov cx, 0
  5336                                  
  5337                                  QRSdigitRank:	
  5338 00002DAB BA0000                            mov dx, 0
  5339 00002DAE F7F3                    	  div bx
  5340 00002DB0 80C230                  	  add dl, 0x30
  5341 00002DB3 52                      	  push dx
  5342 00002DB4 41                      	  inc cx
  5343 00002DB5 83F800                  	  cmp ax, 0
  5344 00002DB8 75F1                    	  jnz QRSdigitRank
  5345                                  
  5346 00002DBA 83F901                            cmp cx,1
  5347 00002DBD 7505                              jne QRSprntRank   
  5348 00002DBF BA3000                            mov dx,0x0030
  5349 00002DC2 52                                push dx
  5350 00002DC3 41                                inc cx
  5351                                  
  5352                                  QRSprntRank: 
  5353 00002DC4 8B7EFE                  	mov di,[bp-2]
  5354 00002DC7 83EF5E                          sub di,94
  5355                                  QRSnextposRank:	
  5356 00002DCA 5A                              pop dx
  5357 00002DCB B60C                    	mov dh, 0x0C
  5358 00002DCD 268915                  	mov [es:di], dx
  5359 00002DD0 83C702                  	add di, 2
  5360 00002DD3 E2F5                    	loop QRSnextposRank
  5361                                  
  5362 00002DD5 B81900                      mov  ax,25                ; load x position
  5363 00002DD8 50                          push ax                   ; push x position
  5364 00002DD9 B81400                      mov  ax,20                ; load y position
  5365 00002DDC 50                          push ax                   ; push y position
  5366 00002DDD B88700                      mov  ax,0x0087            ; white on blackattribute
  5367 00002DE0 50                          push ax                   ; push attribute
  5368 00002DE1 B8[3A03]                    mov  ax,EnterToExit       ; load string address
  5369 00002DE4 50                          push ax                   ; push string address
  5370 00002DE5 E8E4D6                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5371                                  
  5372                                  loopEntKey
  5372          ******************       warning: label alone on a line without a colon might be in error [-w+label-orphan]
  5373 00002DE8 B400                        mov ah,0
  5374 00002DEA CD16                        int 0x16
  5375 00002DEC 3C0D                        cmp al,0x0D               ; ASCII of enter Key (NOT Scan Code)
  5376 00002DEE 75F8                        jne loopEntKey
  5377                                  
  5378 00002DF0 E8C0D6                      call clrscrn
  5379                                  
  5380 00002DF3 1F                             pop ds
  5381 00002DF4 5F                             pop di
  5382 00002DF5 5A                             pop dx
  5383 00002DF6 59                             pop cx
  5384 00002DF7 5B                             pop bx
  5385 00002DF8 58                             pop ax
  5386 00002DF9 07                             pop es
  5387 00002DFA 5E                             pop si
  5388 00002DFB 83C504                         add bp,4                ; free local variable space
  5389 00002DFE 5D                             pop bp
  5390                                  
  5391 00002DFF C3                             ret
  5392                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  5393                                  ;     LOADING GAME SCREEN     ;
  5394                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  5395                                  loadinggame:
  5396 00002E00 55                             push bp
  5397 00002E01 89E5                           mov  bp,sp
  5398 00002E03 56                             push si
  5399 00002E04 06                             push es
  5400 00002E05 50                             push ax
  5401 00002E06 53                             push bx 
  5402 00002E07 51                             push cx
  5403 00002E08 52                             push dx
  5404 00002E09 57                             push di
  5405 00002E0A 1E                             push ds
  5406                                  
  5407 00002E0B B800B8                         mov ax,0xb800
  5408 00002E0E 8EC0                           mov es,ax
  5409                                  
  5410 00002E10 FC                             cld
  5411                                  
  5412 00002E11 E89FD6                         call clrscrn
  5413                                  
  5414 00002E14 31FF                           xor di,di
  5415 00002E16 C746FE5000                     mov word[bp-2],80
  5416                                  
  5417                                  loopTopR1:
  5418 00002E1B B8DB0F                        mov ax,0x0fdb
  5419 00002E1E B90200                        mov cx,2
  5420 00002E21 F3AB                          rep stosw
  5421 00002E23 B8DB00                        mov ax,0x00db
  5422 00002E26 B90200                        mov cx,2
  5423 00002E29 F3AB                          rep stosw
  5424 00002E2B 836EFE04                      sub word[bp-2],4
  5425 00002E2F 837EFE00                      cmp word[bp-2],0
  5426 00002E33 75E6                          jne loopTopR1
  5427                                  
  5428 00002E35 C746FE5000                     mov word[bp-2],80
  5429                                  
  5430                                  loopTopR2:
  5431 00002E3A B8DB00                        mov ax,0x00db
  5432 00002E3D B90200                        mov cx,2
  5433 00002E40 F3AB                          rep stosw
  5434 00002E42 B8DB0F                        mov ax,0x0fdb
  5435 00002E45 B90200                        mov cx,2
  5436 00002E48 F3AB                          rep stosw
  5437 00002E4A 836EFE04                      sub word[bp-2],4
  5438 00002E4E 837EFE00                      cmp word[bp-2],0
  5439 00002E52 75E6                          jne loopTopR2
  5440                                  
  5441 00002E54 C746FE5000                     mov word[bp-2],80
  5442                                  
  5443                                  loopTopR3:
  5444 00002E59 B8DB0F                        mov ax,0x0fdb
  5445 00002E5C B90200                        mov cx,2
  5446 00002E5F F3AB                          rep stosw
  5447 00002E61 B8DB00                        mov ax,0x00db
  5448 00002E64 B90200                        mov cx,2
  5449 00002E67 F3AB                          rep stosw
  5450 00002E69 836EFE04                      sub word[bp-2],4
  5451 00002E6D 837EFE00                      cmp word[bp-2],0
  5452 00002E71 75E6                          jne loopTopR3
  5453                                  
  5454 00002E73 C746FE5000                     mov word[bp-2],80
  5455                                  
  5456                                  loopTopR4:
  5457 00002E78 B8DB00                        mov ax,0x00db
  5458 00002E7B B90200                        mov cx,2
  5459 00002E7E F3AB                          rep stosw
  5460 00002E80 B8DB0F                        mov ax,0x0fdb
  5461 00002E83 B90200                        mov cx,2
  5462 00002E86 F3AB                          rep stosw
  5463 00002E88 836EFE04                      sub word[bp-2],4
  5464 00002E8C 837EFE00                      cmp word[bp-2],0
  5465 00002E90 75E6                          jne loopTopR4
  5466                                  
  5467 00002E92 B81A00                      mov  ax,26                ; load x position
  5468 00002E95 50                          push ax                   ; push x position
  5469 00002E96 B80600                      mov  ax,6                 ; load y position
  5470 00002E99 50                          push ax                   ; push y position
  5471 00002E9A B80400                      mov  ax,0x0004            ; red on black attribute
  5472 00002E9D 50                          push ax                   ; push attribute
  5473 00002E9E B8[1B04]                    mov  ax,StartRace         ; load string address
  5474 00002EA1 50                          push ax                   ; push string address
  5475 00002EA2 E827D6                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5476                                  
  5477 00002EA5 B82000                      mov  ax,32                ; load x position
  5478 00002EA8 50                          push ax                   ; push x position
  5479 00002EA9 B80900                      mov  ax,9                 ; load y position
  5480 00002EAC 50                          push ax                   ; push y position
  5481 00002EAD B80A00                      mov  ax,0x000a            ; red on black attribute
  5482 00002EB0 50                          push ax                   ; push attribute
  5483 00002EB1 B8[3704]                    mov  ax,LoadTrack         ; load string address
  5484 00002EB4 50                          push ax                   ; push string address
  5485 00002EB5 E814D6                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5486                                  
  5487 00002EB8 B82007                      mov ax,0x0720
  5488 00002EBB BFFE05                      mov di,1534
  5489 00002EBE 31DB                        xor bx,bx
  5490                                  
  5491                                  loopLT:
  5492 00002EC0 57                          push di
  5493 00002EC1 B90400                      mov cx,4
  5494 00002EC4 F3AB                        rep stosw
  5495 00002EC6 5F                          pop di
  5496 00002EC7 E8C6F1                      call delay
  5497 00002ECA E8C3F1                      call delay
  5498 00002ECD 26C7052E0A                  mov word[es:di],0x0a2e
  5499 00002ED2 E8BBF1                      call delay
  5500 00002ED5 E8B8F1                      call delay
  5501 00002ED8 26C745022E0A                mov word[es:di+2],0x0a2e
  5502 00002EDE E8AFF1                      call delay
  5503 00002EE1 E8ACF1                      call delay
  5504 00002EE4 26C745042E0A                mov word[es:di+4],0x0a2e
  5505 00002EEA E8A3F1                      call delay
  5506 00002EED E8A0F1                      call delay
  5507 00002EF0 43                          inc bx
  5508 00002EF1 83FB04                      cmp bx,4
  5509 00002EF4 75CA                        jne loopLT
  5510                                  
  5511 00002EF6 B81D00                      mov  ax,29                ; load x position
  5512 00002EF9 50                          push ax                   ; push x position
  5513 00002EFA B80C00                      mov  ax,12                ; load y position
  5514 00002EFD 50                          push ax                   ; push y position
  5515 00002EFE B80600                      mov  ax,0x0006            ; red on black attribute
  5516 00002F01 50                          push ax                   ; push attribute
  5517 00002F02 B8[4B04]                    mov  ax,SetCar            ; load string address
  5518 00002F05 50                          push ax                   ; push string address
  5519 00002F06 E8C3D5                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5520                                  
  5521 00002F09 B82007                      mov ax,0x0720
  5522 00002F0C BFE607                      mov di,2022
  5523 00002F0F 31DB                        xor bx,bx
  5524                                  
  5525                                  loopSC:
  5526 00002F11 57                          push di
  5527 00002F12 B90400                      mov cx,4
  5528 00002F15 F3AB                        rep stosw
  5529 00002F17 5F                          pop di
  5530 00002F18 E875F1                      call delay
  5531 00002F1B E872F1                      call delay
  5532 00002F1E 26C7052E06                  mov word[es:di],0x062e
  5533 00002F23 E86AF1                      call delay
  5534 00002F26 E867F1                      call delay
  5535 00002F29 26C745022E06                mov word[es:di+2],0x062e
  5536 00002F2F E85EF1                      call delay
  5537 00002F32 E85BF1                      call delay
  5538 00002F35 26C745042E06                mov word[es:di+4],0x062e
  5539 00002F3B E852F1                      call delay
  5540 00002F3E E84FF1                      call delay
  5541 00002F41 43                          inc bx
  5542 00002F42 83FB04                      cmp bx,4
  5543 00002F45 75CA                        jne loopSC
  5544                                  
  5545 00002F47 B82200                      mov  ax,34                ; load x position
  5546 00002F4A 50                          push ax                   ; push x position
  5547 00002F4B B81600                      mov  ax,22                ; load y position
  5548 00002F4E 50                          push ax                   ; push y position
  5549 00002F4F B88700                      mov  ax,0x0087            ; red on black attribute
  5550 00002F52 50                          push ax                   ; push attribute
  5551 00002F53 B8[6504]                    mov  ax,GetReady          ; load string address
  5552 00002F56 50                          push ax                   ; push string address
  5553 00002F57 E872D5                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5554                                  
  5555 00002F5A B82000                      mov  ax,32                ; load x position
  5556 00002F5D 50                          push ax                   ; push x position
  5557 00002F5E B80F00                      mov  ax,15                ; load y position
  5558 00002F61 50                          push ax                   ; push y position
  5559 00002F62 B80F00                      mov  ax,0x000f            ; red on black attribute
  5560 00002F65 50                          push ax                   ; push attribute
  5561 00002F66 B8[7004]                    mov  ax,Refueling         ; load string address
  5562 00002F69 50                          push ax                   ; push string address
  5563 00002F6A E85FD5                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5564                                  
  5565 00002F6D B82007                      mov ax,0x0720
  5566 00002F70 BFBE09                      mov di,2494
  5567 00002F73 31DB                        xor bx,bx
  5568                                  
  5569                                  loopRF:
  5570 00002F75 57                          push di
  5571 00002F76 B90400                      mov cx,4
  5572 00002F79 F3AB                        rep stosw
  5573 00002F7B 5F                          pop di
  5574 00002F7C E811F1                      call delay
  5575 00002F7F E80EF1                      call delay
  5576 00002F82 26C7052E0F                  mov word[es:di],0x0f2e
  5577 00002F87 E806F1                      call delay
  5578 00002F8A E803F1                      call delay
  5579 00002F8D 26C745022E0F                mov word[es:di+2],0x0f2e
  5580 00002F93 E8FAF0                      call delay
  5581 00002F96 E8F7F0                      call delay
  5582 00002F99 26C745042E0F                mov word[es:di+4],0x0f2e
  5583 00002F9F E8EEF0                      call delay
  5584 00002FA2 E8EBF0                      call delay
  5585 00002FA5 43                          inc bx
  5586 00002FA6 83FB03                      cmp bx,3
  5587 00002FA9 75CA                        jne loopRF
  5588                                  
  5589 00002FAB B82200                      mov  ax,34                ; load x position
  5590 00002FAE 50                          push ax                   ; push x position
  5591 00002FAF B81600                      mov  ax,22                ; load y position
  5592 00002FB2 50                          push ax                   ; push y position
  5593 00002FB3 B88E00                      mov  ax,0x008e            ; red on black attribute
  5594 00002FB6 50                          push ax                   ; push attribute
  5595 00002FB7 B8[6504]                    mov  ax,GetReady          ; load string address
  5596 00002FBA 50                          push ax                   ; push string address
  5597 00002FBB E80ED5                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5598                                  
  5599 00002FBE B81F00                      mov  ax,31                ; load x position
  5600 00002FC1 50                          push ax                   ; push x position
  5601 00002FC2 B81200                      mov  ax,18                ; load y position
  5602 00002FC5 50                          push ax                   ; push y position
  5603 00002FC6 B80900                      mov  ax,0x0009            ; red on black attribute
  5604 00002FC9 50                          push ax                   ; push attribute
  5605 00002FCA B8[8304]                    mov  ax,IgnSwtch          ; load string address
  5606 00002FCD 50                          push ax                   ; push string address
  5607 00002FCE E8FBD4                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5608                                  
  5609 00002FD1 B82007                      mov ax,0x0720
  5610 00002FD4 BFA00B                      mov di,2976
  5611 00002FD7 31DB                        xor bx,bx
  5612                                  
  5613 00002FD9 E8B4F0                      call delay
  5614 00002FDC E8B1F0                      call delay
  5615 00002FDF 26C7052E09                  mov word[es:di],0x092e
  5616 00002FE4 E8A9F0                      call delay
  5617 00002FE7 E8A6F0                      call delay
  5618 00002FEA E8A3F0                      call delay
  5619 00002FED 26C745022E09                mov word[es:di+2],0x092e
  5620 00002FF3 E89AF0                      call delay
  5621 00002FF6 E897F0                      call delay
  5622 00002FF9 E894F0                      call delay
  5623 00002FFC 26C745042E09                mov word[es:di+4],0x092e
  5624 00003002 E88BF0                      call delay
  5625 00003005 E888F0                      call delay
  5626 00003008 E885F0                      call delay
  5627 0000300B E882F0                      call delay
  5628 0000300E E87FF0                      call delay
  5629                                  
  5630 00003011 B83300                      mov  ax,51                ; load x position
  5631 00003014 50                          push ax                   ; push x position
  5632 00003015 B81200                      mov  ax,18                ; load y position
  5633 00003018 50                          push ax                   ; push y position
  5634 00003019 B80900                      mov  ax,0x0009            ; red on black attribute
  5635 0000301C 50                          push ax                   ; push attribute
  5636 0000301D B8[9504]                    mov  ax,swtchOn           ; load string address
  5637 00003020 50                          push ax                   ; push string address
  5638 00003021 E8A8D4                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5639                                  
  5640 00003024 B82200                      mov  ax,34                ; load x position
  5641 00003027 50                          push ax                   ; push x position
  5642 00003028 B81600                      mov  ax,22                ; load y position
  5643 0000302B 50                          push ax                   ; push y position
  5644 0000302C B80200                      mov  ax,0x0002            ; red on black attribute
  5645 0000302F 50                          push ax                   ; push attribute
  5646 00003030 B8[6504]                    mov  ax,GetReady          ; load string address
  5647 00003033 50                          push ax                   ; push string address
  5648 00003034 E895D4                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  5649                                  
  5650 00003037 E856F0                      call delay
  5651 0000303A E853F0                      call delay
  5652 0000303D E850F0                      call delay
  5653 00003040 E84DF0                      call delay
  5654 00003043 E84AF0                      call delay
  5655 00003046 E847F0                      call delay
  5656                                  
  5657 00003049 1F                             pop ds
  5658 0000304A 5F                             pop di
  5659 0000304B 5A                             pop dx
  5660 0000304C 59                             pop cx
  5661 0000304D 5B                             pop bx
  5662 0000304E 58                             pop ax
  5663 0000304F 07                             pop es
  5664 00003050 5E                             pop si
  5665 00003051 5D                             pop bp
  5666                                  
  5667 00003052 C3                             ret
  5668                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  5669                                  ;     PRINTING GAME NAME      ;
  5670                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  5671                                  prntname:
  5672 00003053 55                             push bp
  5673 00003054 89E5                           mov  bp,sp
  5674 00003056 83EC02                         sub  sp,2                 ; create space for local variable
  5675 00003059 06                             push es
  5676 0000305A 50                             push ax
  5677 0000305B 53                             push bx
  5678 0000305C 51                             push cx
  5679 0000305D 52                             push dx
  5680 0000305E 57                             push di
  5681 0000305F 56                             push si
  5682                                  
  5683 00003060 B800B8                         mov ax,0xb800
  5684 00003063 8EC0                           mov es,ax
  5685                                  
  5686 00003065 FC                             cld              ; auto increment method 
  5687                                  
  5688 00003066 B8B104                         mov ax,0x04b1
  5689 00003069 BFAC00                         mov di,172
  5690 0000306C B90600                         mov cx,6
  5691 0000306F F3AB                           rep stosw
  5692 00003071 BFAC00                         mov di,172
  5693 00003074 268985A000                     mov [es:di+160],ax
  5694 00003079 268985A200                     mov [es:di+162],ax
  5695 0000307E 2689854001                     mov [es:di+320],ax
  5696 00003083 2689854201                     mov [es:di+322],ax
  5697 00003088 268985E001                     mov [es:di+480],ax
  5698 0000308D 268985E201                     mov [es:di+482],ax
  5699 00003092 2689858002                     mov [es:di+640],ax
  5700 00003097 2689858202                     mov [es:di+642],ax
  5701 0000309C 81C78002                       add di,640
  5702 000030A0 B90600                         mov cx,6
  5703 000030A3 F3AB                           rep stosw
  5704 000030A5 83EF04                         sub di,4
  5705 000030A8 26898560FF                     mov [es:di-160],ax
  5706 000030AD 26898562FF                     mov [es:di-158],ax
  5707 000030B2 268985C0FE                     mov [es:di-320],ax
  5708 000030B7 268985C2FE                     mov [es:di-318],ax
  5709 000030BC 268985BEFE                     mov [es:di-322],ax
  5710                                  
  5711 000030C1 B8B001                      mov ax,0x01b0
  5712 000030C4 BFBC00                      mov di,188
  5713 000030C7 B90600                      mov cx,6
  5714 000030CA F3AB                        rep stosw
  5715 000030CC BFBC00                      mov di,188
  5716 000030CF 268985A000                  mov [es:di+160],ax
  5717 000030D4 268985A200                  mov [es:di+162],ax
  5718 000030D9 2689854001                  mov [es:di+320],ax
  5719 000030DE 2689854201                  mov [es:di+322],ax
  5720 000030E3 268985E001                  mov [es:di+480],ax
  5721 000030E8 268985E201                  mov [es:di+482],ax
  5722 000030ED 2689858002                  mov [es:di+640],ax
  5723 000030F2 2689858202                  mov [es:di+642],ax
  5724 000030F7 81C74001                    add di,320
  5725 000030FB B90600                      mov cx,6
  5726 000030FE F3AB                        rep stosw
  5727 00003100 2689855CFF                  mov [es:di-164],ax
  5728 00003105 2689855EFF                  mov [es:di-162],ax
  5729 0000310A 83EF06                      sub di,6
  5730 0000310D 268985A000                  mov [es:di+160],ax
  5731 00003112 268985A200                  mov [es:di+162],ax
  5732 00003117 2689854001                  mov [es:di+320],ax
  5733 0000311C 2689854201                  mov [es:di+322],ax
  5734 00003121 2689854401                  mov [es:di+324],ax
  5735                                  
  5736 00003126 B8B104                         mov ax,0x04b1
  5737 00003129 BFCC00                         mov di,204
  5738 0000312C B90600                         mov cx,6
  5739 0000312F F3AB                           rep stosw
  5740 00003131 2689859C00                     mov [es:di+156],ax
  5741 00003136 2689859E00                     mov [es:di+158],ax
  5742 0000313B 2689853C01                     mov [es:di+316],ax
  5743 00003140 2689853E01                     mov [es:di+318],ax
  5744 00003145 268985DC01                     mov [es:di+476],ax
  5745 0000314A 268985DE01                     mov [es:di+478],ax
  5746 0000314F 2689857C02                     mov [es:di+636],ax
  5747 00003154 2689857E02                     mov [es:di+638],ax
  5748 00003159 83EF0C                         sub di,12
  5749 0000315C 268985A000                     mov [es:di+160],ax
  5750 00003161 268985A200                     mov [es:di+162],ax
  5751 00003166 2689854001                     mov [es:di+320],ax
  5752 0000316B 2689854201                     mov [es:di+322],ax
  5753 00003170 268985E001                     mov [es:di+480],ax
  5754 00003175 268985E201                     mov [es:di+482],ax
  5755 0000317A 2689858002                     mov [es:di+640],ax
  5756 0000317F 2689858202                     mov [es:di+642],ax
  5757 00003184 81C74001                       add di,320
  5758 00003188 B90400                         mov cx,4
  5759 0000318B F3AB                           rep stosw
  5760                                  
  5761 0000318D B8B001                      mov ax,0x01b0
  5762 00003190 BFDC00                      mov di,220
  5763 00003193 B90200                      mov cx,2
  5764 00003196 F3AB                        rep stosw
  5765 00003198 BFDC00                      mov di,220
  5766 0000319B 268985A000                  mov [es:di+160],ax
  5767 000031A0 268985A200                  mov [es:di+162],ax
  5768 000031A5 2689854001                  mov [es:di+320],ax
  5769 000031AA 2689854201                  mov [es:di+322],ax
  5770 000031AF 268985E001                  mov [es:di+480],ax
  5771 000031B4 268985E201                  mov [es:di+482],ax
  5772 000031B9 2689858002                  mov [es:di+640],ax
  5773 000031BE 2689858202                  mov [es:di+642],ax
  5774 000031C3 BFE600                      mov di,230
  5775 000031C6 B90200                      mov cx,2
  5776 000031C9 F3AB                        rep stosw
  5777 000031CB BFE600                      mov di,230
  5778 000031CE 268985A000                  mov [es:di+160],ax
  5779 000031D3 268985A200                  mov [es:di+162],ax
  5780 000031D8 2689854001                  mov [es:di+320],ax
  5781 000031DD 2689854201                  mov [es:di+322],ax
  5782 000031E2 268985E001                  mov [es:di+480],ax
  5783 000031E7 268985E201                  mov [es:di+482],ax
  5784 000031EC 2689858002                  mov [es:di+640],ax
  5785 000031F1 2689858202                  mov [es:di+642],ax
  5786 000031F6 BFDC00                      mov di,220
  5787 000031F9 268985A400                  mov [es:di+164],ax
  5788 000031FE 2689854601                  mov [es:di+326],ax
  5789 00003203 268985E801                  mov [es:di+488],ax
  5790                                  
  5791 00003208 B8B104                        mov ax,0x04b1
  5792 0000320B BFEE00                        mov di,238
  5793 0000320E B90500                        mov cx,5
  5794 00003211 F3AB                          rep stosw
  5795 00003213 BFEE00                        mov di,238
  5796 00003216 268985A000                    mov [es:di+160],ax
  5797 0000321B 268985A200                    mov [es:di+162],ax
  5798 00003220 2689854001                    mov [es:di+320],ax
  5799 00003225 2689854201                    mov [es:di+322],ax
  5800 0000322A 268985E001                    mov [es:di+480],ax
  5801 0000322F 268985E201                    mov [es:di+482],ax
  5802 00003234 2689858002                    mov [es:di+640],ax
  5803 00003239 2689858202                    mov [es:di+642],ax
  5804 0000323E 81C78002                      add di,640
  5805 00003242 B90500                        mov cx,5
  5806 00003245 F3AB                          rep stosw
  5807 00003247 2689855EFF                    mov [es:di-162],ax
  5808 0000324C 268985BEFE                    mov [es:di-322],ax
  5809 00003251 2689851EFE                    mov [es:di-482],ax
  5810                                  
  5811 00003256 B8DB0F                       mov ax,0x0fdb
  5812                                  
  5813 00003259 BF0001                      mov di,256
  5814 0000325C B90600                      mov cx,6
  5815 0000325F F3AB                        rep stosw
  5816 00003261 BF0001                      mov di,256
  5817 00003264 268985A000                  mov [es:di+160],ax
  5818 00003269 268985A200                  mov [es:di+162],ax
  5819 0000326E 2689854001                  mov [es:di+320],ax
  5820 00003273 2689854201                  mov [es:di+322],ax
  5821 00003278 268985E001                  mov [es:di+480],ax
  5822 0000327D 268985E201                  mov [es:di+482],ax
  5823 00003282 2689858002                  mov [es:di+640],ax
  5824 00003287 2689858202                  mov [es:di+642],ax
  5825 0000328C 81C74001                    add di,320
  5826 00003290 B90600                      mov cx,6
  5827 00003293 F3AB                        rep stosw
  5828 00003295 2689855CFF                  mov [es:di-164],ax
  5829 0000329A 2689855EFF                  mov [es:di-162],ax
  5830                                  
  5831 0000329F B8DB0F                         mov ax,0x0fdb
  5832 000032A2 BF0E01                         mov di,270
  5833 000032A5 B90600                         mov cx,6
  5834 000032A8 F3AB                           rep stosw
  5835 000032AA BF0E01                         mov di,270
  5836 000032AD 268985A000                     mov [es:di+160],ax
  5837 000032B2 268985A200                     mov [es:di+162],ax
  5838 000032B7 2689854001                     mov [es:di+320],ax
  5839 000032BC 2689854201                     mov [es:di+322],ax
  5840 000032C1 268985E001                     mov [es:di+480],ax
  5841 000032C6 268985E201                     mov [es:di+482],ax
  5842 000032CB 2689858002                     mov [es:di+640],ax
  5843 000032D0 2689858202                     mov [es:di+642],ax
  5844 000032D5 81C74001                       add di,320
  5845 000032D9 B90600                         mov cx,6
  5846 000032DC F3AB                           rep stosw
  5847 000032DE 2689855CFF                     mov [es:di-164],ax
  5848 000032E3 2689855EFF                     mov [es:di-162],ax
  5849 000032E8 83EF06                         sub di,6
  5850 000032EB 268985A000                     mov [es:di+160],ax
  5851 000032F0 268985A200                     mov [es:di+162],ax
  5852 000032F5 2689854001                     mov [es:di+320],ax
  5853 000032FA 2689854201                     mov [es:di+322],ax
  5854 000032FF 2689854401                     mov [es:di+324],ax
  5855                                  
  5856 00003304 BF1E01                      mov di,286
  5857 00003307 B90600                      mov cx,6
  5858 0000330A F3AB                        rep stosw
  5859 0000330C BF1E01                      mov di,286
  5860 0000330F 268985A400                  mov [es:di+164],ax
  5861 00003314 268985A600                  mov [es:di+166],ax
  5862 00003319 2689854401                  mov [es:di+324],ax
  5863 0000331E 2689854601                  mov [es:di+326],ax
  5864 00003323 268985E401                  mov [es:di+484],ax
  5865 00003328 268985E601                  mov [es:di+486],ax
  5866 0000332D 2689858402                  mov [es:di+644],ax
  5867 00003332 2689858602                  mov [es:di+646],ax
  5868 00003337 81C78002                    add di,640
  5869 0000333B B90600                      mov cx,6
  5870 0000333E F3AB                        rep stosw
  5871                                  
  5872 00003340 BF2C01                         mov di,300
  5873 00003343 268905                         mov [es:di],ax
  5874 00003346 268985A200                     mov [es:di+162],ax
  5875 0000334B 2689854401                     mov [es:di+324],ax
  5876 00003350 268985E601                     mov [es:di+486],ax
  5877 00003355 2689858802                     mov [es:di+648],ax
  5878 0000335A 83C708                         add di,8
  5879 0000335D 268905                         mov [es:di],ax
  5880 00003360 2689859E00                     mov [es:di+158],ax
  5881 00003365 2689853C01                     mov [es:di+316],ax
  5882 0000336A 268985DA01                     mov [es:di+474],ax
  5883 0000336F 2689857802                     mov [es:di+632],ax
  5884                                  
  5885 00003374 5E                             pop si
  5886 00003375 5F                             pop di
  5887 00003376 5A                             pop dx
  5888 00003377 59                             pop cx
  5889 00003378 5B                             pop bx
  5890 00003379 58                             pop ax
  5891 0000337A 07                             pop es
  5892 0000337B 83C402                         add sp,2
  5893 0000337E 5D                             pop bp
  5894                                  
  5895 0000337F C3                             ret
  5896                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  5897                                  ;        INTRO SCREEN         ;
  5898                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  5899                                  intro:
  5900 00003380 55                             push bp
  5901 00003381 89E5                           mov  bp,sp
  5902 00003383 83EC02                         sub  sp,2                 ; create space for local variable
  5903 00003386 06                             push es
  5904 00003387 50                             push ax
  5905 00003388 53                             push bx
  5906 00003389 51                             push cx
  5907 0000338A 52                             push dx
  5908 0000338B 57                             push di
  5909 0000338C 56                             push si
  5910                                  
  5911 0000338D B800B8                        mov ax,0xb800
  5912 00003390 8EC0                          mov es,ax
  5913                                  
  5914 00003392 FC                            cld                ; auto increment method
  5915                                  
  5916 00003393 31FF                           xor di,di           ; load di to point to top left of screen
  5917 00003395 B8DB08                         mov ax,0x08db       ; load space character on black background
  5918 00003398 B9D007                         mov cx,2000         ; number of columns to color
  5919 0000339B F3AB                           rep stosw           ; repeat until  cx turns zero
  5920                                  
  5921 0000339D BB0000                          mov bx,0
  5922 000033A0 BF0000                          mov di, 0          ; point di to location 
  5923 000033A3 B90400                          mov cx,4           ; number of columns to color
  5924                                  
  5925                                  ler:
  5926 000033A6 83C301                      add bx,1
  5927 000033A9 B8DB04                      mov ax,0x04db          ; magenta background on black foreground
  5928 000033AC F3AB                        rep stosw              ; color desired number of columns
  5929 000033AE B90400                      mov cx,4
  5930 000033B1 81C73801                    add di,312
  5931 000033B5 83FB0D                      cmp bx,13
  5932 000033B8 75EC                        jne ler
  5933                                  
  5934 000033BA BB0000                          mov bx,0
  5935 000033BD BFA000                          mov di, 160       ; point di to location 
  5936 000033C0 B90400                          mov cx,4          ; number of columns to color
  5937                                  
  5938                                  lew:
  5939 000033C3 83C301                        add bx,1
  5940 000033C6 B8DB0F                        mov ax,0x0fdb      ; magenta background on black foreground
  5941 000033C9 F3AB                          rep stosw          ; color desired number of columns
  5942 000033CB B90400                        mov cx,4
  5943 000033CE 81C73801                      add di,312
  5944 000033D2 83FB0C                        cmp bx,12
  5945 000033D5 75EC                          jne lew
  5946                                  
  5947 000033D7 BB0000                          mov bx,0
  5948 000033DA BF9800                          mov di, 152      ; point di to location 
  5949 000033DD B90400                          mov cx,4         ; number of columns to color
  5950                                  
  5951                                  rer:
  5952 000033E0 83C301                       add bx,1
  5953 000033E3 B8DB04                       mov ax,0x04db      ; magenta background on black foreground
  5954 000033E6 F3AB                         rep stosw          ; color desired number of columns
  5955 000033E8 B90400                       mov cx,4
  5956 000033EB 81C73801                     add di,312
  5957 000033EF 83FB0D                       cmp bx,13
  5958 000033F2 75EC                         jne rer
  5959                                  
  5960 000033F4 BB0000                          mov bx,0
  5961 000033F7 BF3801                          mov di, 312      ; point di to location 
  5962 000033FA B90400                          mov cx,4         ; number of columns to color
  5963                                  
  5964                                  rew:
  5965 000033FD 83C301                      add bx,1
  5966 00003400 B8DB0F                      mov ax,0x0fdb        ; magenta background on black foreground
  5967 00003403 F3AB                        rep stosw            ; color desired number of columns
  5968 00003405 B90400                      mov cx,4
  5969 00003408 81C73801                    add di,312
  5970 0000340C 83FB0C                      cmp bx,12
  5971 0000340F 75EC                        jne rew      
  5972                                  
  5973 00003411 BB0000                       mov bx,0
  5974 00003414 BF3005                       mov di, 1328       ; point di to location 
  5975 00003417 B90200                       mov cx,2           ; number of columns to color
  5976                                  
  5977                                  rs1:
  5978 0000341A 83C301                       add bx,1
  5979 0000341D B8DB0F                       mov ax,0x0fdb      ; magenta background on black foreground
  5980 00003420 F3AB                         rep stosw          ; color desired number of columns
  5981 00003422 B90200                       mov cx,2
  5982 00003425 81C77C02                     add di,636
  5983 00003429 83FB05                       cmp bx,5
  5984 0000342C 75EC                         jne rs1
  5985                                  
  5986 0000342E BB0000                        mov bx,0
  5987 00003431 BF7006                        mov di, 1648      ; point di to location 
  5988 00003434 B90200                        mov cx,2          ; number of columns to color
  5989                                  
  5990                                  rs1w:
  5991 00003437 83C301                      add bx,1
  5992 0000343A B8DB0E                      mov ax,0x0edb       ; magenta background on black foreground
  5993 0000343D F3AB                        rep stosw           ; color desired number of columns
  5994 0000343F B90200                      mov cx,2
  5995 00003442 81C77C02                    add di,636
  5996 00003446 83FB04                      cmp bx,4
  5997 00003449 75EC                        jne rs1w
  5998                                  
  5999 0000344B BB0000                         mov bx,0
  6000 0000344E BF6805                         mov di, 1384     ; point di to location 
  6001 00003451 B90200                         mov cx,2         ; number of columns to color
  6002                                  
  6003                                  rs2:
  6004 00003454 83C301                       add bx,1
  6005 00003457 B8DB0F                       mov ax,0x0fdb      ; magenta background on black foreground
  6006 0000345A F3AB                         rep stosw          ; color desired number of columns
  6007 0000345C B90200                       mov cx,2
  6008 0000345F 81C77C02                     add di,636
  6009 00003463 83FB05                       cmp bx,5
  6010 00003466 75EC                         jne rs2
  6011                                  
  6012 00003468 BB0000                       mov bx,0
  6013 0000346B BFA806                       mov di, 1704      ; point di to location 
  6014 0000346E B90200                       mov cx,2          ; number of columns to color
  6015                                  
  6016                                  rs2w:
  6017 00003471 83C301                       add bx,1
  6018 00003474 B8DB0E                       mov ax,0x0edb     ; magenta background on black foreground
  6019 00003477 F3AB                         rep stosw         ; color desired number of columns
  6020 00003479 B90200                       mov cx,2
  6021 0000347C 81C77C02                     add di,636
  6022 00003480 83FB04                       cmp bx,4
  6023 00003483 75EC                         jne rs2w
  6024                                  
  6025 00003485 BFE605                         mov di,1510      ; load di to point to top left of screen
  6026 00003488 B8CD10                         mov ax,0x10cd    ; load space character on black background
  6027 0000348B B90800                         mov cx,8         ; number of columns to color
  6028 0000348E F3AB                           rep stosw        ; repeat until  cx turns zero
  6029                                  
  6030 00003490 BF8C06                    mov di, 1676          ; point di to location 
  6031 00003493 B8BA10                    mov ax,0x10ba         ; magenta background on black foreground
  6032 00003496 268905                    mov[es:di],ax
  6033 00003499 26894502                  mov [es:di+2],ax
  6034 0000349D 268985A000                mov[es:di+160],ax
  6035 000034A2 268985A200                mov [es:di+162],ax
  6036                                   
  6037 000034A7 B8DB01                   mov ax,0x01db  
  6038 000034AA 2689854001               mov[es:di+320],ax
  6039 000034AF 2689854201               mov [es:di+322],ax
  6040                                  
  6041 000034B4 B8DE11                   mov ax,0x11de
  6042 000034B7 2689853E01               mov [es:di+318],ax
  6043                                  
  6044 000034BC B8DE11                   mov ax,0x11de
  6045 000034BF 2689854401               mov[es:di+324],ax
  6046                                  
  6047 000034C4 BF6608                      mov di,2150          ; point di to location 
  6048 000034C7 B90800                      mov cx,8             ; number of columns to color
  6049 000034CA BB0000                      mov bx,0
  6050                                  
  6051                                  cl11:
  6052 000034CD 83C301                         add bx,1
  6053 000034D0 B8DB01                         mov ax,0x01db     ; magenta background on black foreground
  6054 000034D3 F3AB                           rep stosw         ; color desired number of columns
  6055 000034D5 83C108                         add cx,8
  6056 000034D8 81C71003                       add di,784
  6057 000034DC 83FB02                         cmp bx,2
  6058 000034DF 75EC                           jne cl11
  6059                                  
  6060 000034E1 BF0409                      mov di,2308          ; point di to location 
  6061 000034E4 B90A00                      mov cx,10            ; number of columns to color
  6062 000034E7 BB0000                      mov bx,0
  6063                                  
  6064                                  cl1:
  6065 000034EA 83C301                         add bx,1
  6066 000034ED B8DB01                         mov ax,0x01db     ; magenta background on black foreground
  6067 000034F0 F3AB                           rep stosw         ; color desired number of columns
  6068 000034F2 83C10A                         add cx,10
  6069 000034F5 81C78C00                       add di,140
  6070 000034F9 83FB04                         cmp bx,4
  6071 000034FC 75EC                           jne cl1
  6072                                  
  6073 000034FE B8DB0B                    mov ax,0x0bdb
  6074 00003501 BF0C09                    mov di,2316
  6075 00003504 268905                    mov[es:di],ax
  6076 00003507 26894502                  mov[es:di+2],ax
  6077                                  
  6078 0000350B B8DB01                      mov ax,0x01db
  6079 0000350E BF280C                      mov di,3112         ; point di to location 
  6080 00003511 B90600                      mov cx,6            ; number of columns to color
  6081 00003514 BB0000                      mov bx,0
  6082 00003517 B8CD01                      mov ax,0x01cd       ; magenta background on black foreground
  6083                                  
  6084                                  cl111:
  6085 0000351A 83C301                         add bx,1
  6086 0000351D F3AB                           rep stosw         ; color desired number of columns
  6087 0000351F 83C108                         add cx,8
  6088 00003522 81C79200                       add di,146
  6089 00003526 B8F010                         mov ax,0x10f0     ; magenta background on black foreground
  6090 00003529 83FB02                         cmp bx,2
  6091 0000352C 75EC                           jne cl111
  6092                                  
  6093 0000352E BF220C                      mov di,3106
  6094 00003531 B8DB00                      mov ax,0x00db
  6095 00003534 268905                      mov [es:di],ax
  6096 00003537 268945FE                    mov [es:di-2],ax
  6097 0000353B 26894516                    mov [es:di+22],ax
  6098 0000353F 26894518                    mov [es:di+24],ax
  6099 00003543 268985A000                  mov [es:di+160],ax
  6100 00003548 2689859E00                  mov [es:di+158],ax
  6101 0000354D 268985B600                  mov [es:di+182],ax
  6102 00003552 268985B800                  mov [es:di+184],ax
  6103                                  
  6104 00003557 BF2207                      mov di,1826
  6105 0000355A B8DB00                      mov ax,0x00db
  6106 0000355D 268905                      mov [es:di],ax
  6107 00003560 268945FE                    mov [es:di-2],ax
  6108 00003564 26894516                    mov [es:di+22],ax 
  6109 00003568 26894518                    mov [es:di+24],ax   
  6110 0000356C 268985A000                  mov [es:di+160],ax
  6111 00003571 2689859E00                  mov [es:di+158],ax 
  6112 00003576 268985B600                  mov [es:di+182],ax
  6113 0000357B 268985B800                  mov [es:di+184],ax
  6114                                  
  6115 00003580 B8DC08                    mov ax,0x08dc
  6116 00003583 268985A200                mov [es:di+162],ax
  6117 00003588 268985A400                mov [es:di+164],ax
  6118 0000358D 268985A600                mov [es:di+166],ax
  6119 00003592 268985B000                mov [es:di+176],ax
  6120 00003597 268985B200                mov [es:di+178],ax
  6121 0000359C 268985B400                mov [es:di+180],ax
  6122                                  
  6123 000035A1 BFC40C                    mov di,3268
  6124 000035A4 268905                    mov [es:di],ax
  6125 000035A7 26894512                  mov [es:di+18],ax
  6126                                  
  6127 000035AB BFF406                       mov di,1780        ; load di to point to top left of screen
  6128 000035AE B8CD40                       mov ax,0x40cd      ; load space character on black background
  6129 000035B1 B90800                       mov cx,8           ; number of columns to color
  6130 000035B4 F3AB                         rep stosw          ; repeat until  cx turns zero
  6131                                  
  6132 000035B6 BF9A07                      mov di, 1946        ; point di to location 
  6133 000035B9 B8BA40                      mov ax,0x40ba       ; magenta background on black foreground
  6134 000035BC 268905                      mov[es:di],ax
  6135 000035BF 26894502                    mov [es:di+2],ax
  6136 000035C3 268985A000                  mov[es:di+160],ax
  6137 000035C8 268985A200                  mov [es:di+162],ax
  6138                                  
  6139 000035CD B8DB04                      mov ax,0x04db  
  6140 000035D0 2689854001                  mov[es:di+320],ax
  6141 000035D5 2689854201                  mov [es:di+322],ax
  6142                                  
  6143 000035DA B8DE44                      mov ax,0x44de
  6144 000035DD 2689853E01                  mov [es:di+318],ax
  6145                                  
  6146 000035E2 B8DE44                    mov ax,0x44de
  6147 000035E5 2689854401                mov[es:di+324],ax
  6148                                  
  6149 000035EA BF7409                       mov di,2420        ; point di to location 
  6150 000035ED B90800                       mov cx,8           ; number of columns to color
  6151 000035F0 BB0000                       mov bx,0
  6152                                  
  6153                                  c211:
  6154 000035F3 83C301                         add bx,1
  6155 000035F6 B8DB04                         mov ax,0x04db     ; magenta background on black foreground
  6156 000035F9 F3AB                           rep stosw         ; color desired number of columns
  6157 000035FB 83C108                         add cx,8
  6158 000035FE 81C71003                       add di,784
  6159 00003602 83FB02                         cmp bx,2
  6160 00003605 75EC                           jne c211
  6161                                  
  6162 00003607 BF120A                        mov di,2578        ; point di to location 
  6163 0000360A B90A00                        mov cx,10          ; number of columns to color
  6164 0000360D BB0000                        mov bx,0
  6165                                  
  6166                                  c2l1:
  6167 00003610 83C301                         add bx,1
  6168 00003613 B8DB04                         mov ax,0x04db     ; magenta background on black foreground
  6169 00003616 F3AB                           rep stosw         ; color desired number of columns
  6170 00003618 83C10A                         add cx,10
  6171 0000361B 81C78C00                       add di,140
  6172 0000361F 83FB04                         cmp bx,4
  6173 00003622 75EC                           jne c2l1
  6174                                  
  6175 00003624 B8DB0B                    mov ax,0x0bdb
  6176 00003627 BF1A0A                    mov di,2586
  6177 0000362A 268905                    mov[es:di],ax
  6178 0000362D 26894502                  mov[es:di+2],ax
  6179                                  
  6180 00003631 BF360D                     mov di,3382           ; point di to location 
  6181 00003634 B90600                     mov cx,6              ; number of columns to color
  6182 00003637 BB0000                     mov bx,0
  6183 0000363A B8CD04                     mov ax,0x04cd         ; magenta background on black foreground
  6184                                  
  6185                                  c2111:
  6186 0000363D 83C301                         add bx,1
  6187 00003640 F3AB                           rep stosw         ; color desired number of columns
  6188 00003642 83C108                         add cx,8
  6189 00003645 81C79200                       add di,146
  6190 00003649 B8F040                         mov ax,0x40f0     ; magenta background on black foreground
  6191 0000364C 83FB02                         cmp bx,2
  6192 0000364F 75EC                           jne c2111
  6193                                  
  6194 00003651 BF300D                      mov di,3376
  6195 00003654 B8DB00                      mov ax,0x00db
  6196 00003657 268905                      mov [es:di],ax
  6197 0000365A 268945FE                    mov [es:di-2],ax
  6198 0000365E 26894516                    mov [es:di+22],ax 
  6199 00003662 26894518                    mov [es:di+24],ax   
  6200 00003666 268985A000                  mov [es:di+160],ax
  6201 0000366B 2689859E00                  mov [es:di+158],ax 
  6202 00003670 268985B600                  mov [es:di+182],ax
  6203 00003675 268985B800                  mov [es:di+184],ax
  6204                                  
  6205 0000367A BF3008                      mov di,2096
  6206 0000367D B8DB00                      mov ax,0x00db
  6207 00003680 268905                      mov [es:di],ax
  6208 00003683 268945FE                    mov [es:di-2],ax
  6209 00003687 26894516                    mov [es:di+22],ax
  6210 0000368B 26894518                    mov [es:di+24],ax
  6211 0000368F 268985A000                  mov [es:di+160],ax
  6212 00003694 2689859E00                  mov [es:di+158],ax
  6213 00003699 268985B600                  mov [es:di+182],ax
  6214 0000369E 268985B800                  mov [es:di+184],ax
  6215                                  
  6216 000036A3 B8DC08                      mov ax,0x08dc
  6217 000036A6 268985A200                  mov [es:di+162],ax
  6218 000036AB 268985A400                  mov [es:di+164],ax
  6219 000036B0 268985A600                  mov [es:di+166],ax
  6220 000036B5 268985B000                  mov [es:di+176],ax
  6221 000036BA 268985B200                  mov [es:di+178],ax
  6222 000036BF 268985B400                  mov [es:di+180],ax
  6223                                  
  6224 000036C4 BFD20D                      mov di,3538
  6225 000036C7 268905                      mov [es:di],ax
  6226 000036CA 26894512                    mov [es:di+18],ax
  6227                                  
  6228 000036CE BFFA07                     mov di,2042           ; load di to point to top left of screen
  6229 000036D1 B8CD20                     mov ax,0x20cd         ; load space character on black background
  6230 000036D4 B90800                     mov cx,8              ; number of columns to color
  6231 000036D7 F3AB                       rep stosw             ; repeat until  cx turns zero
  6232                                  
  6233 000036D9 BFA008                     mov di, 2208          ; point di to location 
  6234 000036DC B8BA20                     mov ax,0x20ba         ; magenta background on black foreground
  6235 000036DF 268905                     mov[es:di],ax
  6236 000036E2 26894502                   mov [es:di+2],ax
  6237 000036E6 268985A000                 mov[es:di+160],ax
  6238 000036EB 268985A200                 mov [es:di+162],ax
  6239                                  
  6240 000036F0 B8DB02                     mov ax,0x02db
  6241 000036F3 2689854001                 mov[es:di+320],ax
  6242 000036F8 2689854201                 mov [es:di+322],ax
  6243                                  
  6244 000036FD B8DE22                     mov ax,0x22de
  6245 00003700 2689853E01                 mov [es:di+318],ax
  6246                                  
  6247 00003705 B8DE22                     mov ax,0x22de
  6248 00003708 2689854401                 mov[es:di+324],ax
  6249                                  
  6250 0000370D BF7A0A                       mov di,2682          ; point di to location 
  6251 00003710 B90800                       mov cx,8             ; number of columns to color
  6252 00003713 BB0000                       mov bx,0
  6253                                  
  6254                                  c311:   
  6255 00003716 83C301                         add bx,1
  6256 00003719 B8DB02                         mov ax,0x02db      ; magenta background on black foreground
  6257 0000371C F3AB                           rep stosw          ; color desired number of columns
  6258 0000371E 83C108                         add cx,8
  6259 00003721 81C71003                       add di,784
  6260 00003725 83FB02                         cmp bx,2
  6261 00003728 75EC                           jne c311
  6262                                  
  6263 0000372A BF180B                       mov di,2840          ; point di to location 
  6264 0000372D B90A00                       mov cx,10            ; number of columns to color
  6265 00003730 BB0000                       mov bx,0
  6266                                  
  6267                                  c33l1:    
  6268 00003733 83C301                         add bx,1
  6269 00003736 B8DB02                         mov ax,0x02db      ; magenta background on black foreground
  6270 00003739 F3AB                           rep stosw          ; color desired number of columns
  6271 0000373B 83C10A                         add cx,10
  6272 0000373E 81C78C00                       add di,140
  6273 00003742 83FB04                         cmp bx,4
  6274 00003745 75EC                           jne c33l1
  6275                                  
  6276 00003747 B8DB0B                    mov ax,0x0bdb
  6277 0000374A BF200B                    mov di,2848
  6278 0000374D 268905                    mov[es:di],ax
  6279 00003750 26894502                  mov[es:di+2],ax
  6280                                  
  6281 00003754 BF3C0E                      mov di,3644           ; point di to location 
  6282 00003757 B90600                      mov cx,6              ; number of columns to color
  6283 0000375A BB0000                      mov bx,0              ; intialize bx to 0
  6284 0000375D B8CD02                      mov ax,0x02cd         ; magenta background on black foreground
  6285                                  
  6286                                  c3111:    
  6287 00003760 83C301                         add bx,1
  6288 00003763 F3AB                           rep stosw          ; color desired number of columns
  6289 00003765 83C108                         add cx,8
  6290 00003768 81C79200                       add di,146
  6291 0000376C B8F020                         mov ax,0x20f0      ; magenta background on black foreground
  6292 0000376F 83FB02                         cmp bx,2
  6293 00003772 75EC                           jne c3111
  6294                                  
  6295 00003774 BF360E                      mov di,3638
  6296 00003777 B8DB00                      mov ax,0x00db
  6297 0000377A 268905                      mov [es:di],ax
  6298 0000377D 268945FE                    mov [es:di-2],ax
  6299 00003781 26894516                    mov [es:di+22],ax 
  6300 00003785 26894518                    mov [es:di+24],ax   
  6301 00003789 268985A000                  mov [es:di+160],ax
  6302 0000378E 2689859E00                  mov [es:di+158],ax 
  6303 00003793 268985B600                  mov [es:di+182],ax
  6304 00003798 268985B800                  mov [es:di+184],ax
  6305                                  
  6306 0000379D BF3609                      mov di,2358
  6307 000037A0 B8DB00                      mov ax,0x00db
  6308 000037A3 268905                      mov [es:di],ax
  6309 000037A6 268945FE                    mov [es:di-2],ax
  6310 000037AA 26894516                    mov [es:di+22],ax 
  6311 000037AE 26894518                    mov [es:di+24],ax   
  6312 000037B2 268985A000                  mov [es:di+160],ax
  6313 000037B7 2689859E00                  mov [es:di+158],ax 
  6314 000037BC 268985B600                  mov [es:di+182],ax
  6315 000037C1 268985B800                  mov [es:di+184],ax
  6316                                  
  6317 000037C6 B8DC08                    mov ax,0x08dc
  6318 000037C9 268985A200                mov [es:di+162],ax
  6319 000037CE 268985A400                mov [es:di+164],ax
  6320 000037D3 268985A600                mov [es:di+166],ax
  6321 000037D8 268985B000                mov [es:di+176],ax
  6322 000037DD 268985B200                mov [es:di+178],ax
  6323 000037E2 268985B400                mov [es:di+180],ax
  6324                                  
  6325 000037E7 BFD80E                     mov di,3800
  6326 000037EA 268905                     mov [es:di],ax
  6327 000037ED 26894512                   mov [es:di+18],ax
  6328                                  
  6329 000037F1 E85FF8                  call prntname
  6330                                  
  6331 000037F4 B81B00                      mov  ax,27                ; load x position
  6332 000037F7 50                          push ax                   ; push x position
  6333 000037F8 B81800                      mov  ax,24                ; load y position
  6334 000037FB 50                          push ax                   ; push y position
  6335 000037FC B88F00                      mov  ax,0x008f            ; white on black attribute
  6336 000037FF 50                          push ax                   ; push attribute
  6337 00003800 B8[9904]                    mov  ax,EnterToStart      ; load string address
  6338 00003803 50                          push ax                   ; push string address
  6339 00003804 E8C5CC                      call prntstr              ; FUNCTION CALL:  PRINTING STRING
  6340                                  
  6341                                  loopEntKey2:
  6342 00003807 B400                        mov ah,0
  6343 00003809 CD16                        int 0x16
  6344 0000380B 3C0D                        cmp al,0x0D               ; ASCII of enter Key (NOT Scan Code)
  6345 0000380D 75F8                        jne loopEntKey2
  6346                                  
  6347 0000380F E8A1CC                      call clrscrn
  6348                                  
  6349 00003812 5E                             pop si
  6350 00003813 5F                             pop di
  6351 00003814 5A                             pop dx
  6352 00003815 59                             pop cx
  6353 00003816 5B                             pop bx
  6354 00003817 58                             pop ax
  6355 00003818 07                             pop es
  6356 00003819 83C402                         add sp,2
  6357 0000381C 5D                             pop bp
  6358                                  
  6359 0000381D C3                             ret
  6360                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  6361                                  ;       MAIN FUNCTION         ;
  6362                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  6363                                  start:
  6364 0000381E 2E8C1E[4300]                  mov  [cs:DataSegment],ds
  6365                                  
  6366 00003823 E88DCC                        call clrscrn              ; FUNCTION CALL:  CLEARING SCREEN
  6367                                  
  6368 00003826 E857FB                        call intro                ; FUNCTION CALL:  LOADING INTRO SCREEN
  6369                                  
  6370 00003829 E8D4F5                        call loadinggame          ; FUNCTION CALL:  LOADING GAME SCREEN
  6371                                  
  6372 0000382C E884CC                        call clrscrn              ; FUNCTION CALL:  CLEARING SCREEN
  6373                                  
  6374 0000382F E898D5                        call prntbndskrt          ; FUNCTION CALL:  PRINTING BOUNDARY SKIRTINGS
  6375 00003832 E8DCD5                        call prntgrs              ; FUNCTION CALL:  PRINTING GRASS
  6376 00003835 E8A9D6                        call prntrd               ; FUNCTION CALL:  PRINTING ROAD
  6377 00003838 E821D7                        call chqrdflg             ; FUNCTION CALL:  PRINTING CHECKERED FLAG 
  6378 0000383B E871D7                        call prntdbrd             ; FUNCTION CALL:  PRINTING DASHBOARD
  6379 0000383E E804D9                        call rvmirror             ; FUNCTION CALL:  PRINTING REAR VIEW MIRROR
  6380 00003841 E89ACD                        call prntbgA              ; FUNCTION CALL:  PRINTING BACKGROUND A
  6381 00003844 E881D9                        call prntstrwhl           ; FUNCTION CALL:  PRINTING STEERING WHEEL
  6382 00003847 E8D5DD                        call speeddials           ; FUNCTION CALL:  CAR SPEEDING DIALS
  6383 0000384A E8D3DC                        call rcstrt               ; FUNCTION CALL:  STARTING RACE
  6384 0000384D E812DF                        call prntmap              ; FUNCTION CALL:  PRINTING MAP
  6385 00003850 E865E6                        call movement             ; FUNCTION CALL:  MOVING SCREEN
  6386                                  
  6387 00003853 31C0                          xor ax, ax
  6388 00003855 8EC0                          mov es, ax
  6389                                  
  6390 00003857 26A12400                      mov ax,[es:9*4]          ; get  offset  of oldKbISR
  6391 0000385B 2EA3[3F00]                    mov [cs:OldKbISR],ax     ; save offset  of oldKbISR
  6392 0000385F 26A12600                      mov ax,[es:9*4+2]        ; get  segment of oldKbISR
  6393 00003863 2EA3[4100]                    mov [cs:OldKbISR+2],ax   ; save segment of oldKbISR
  6394                                  
  6395 00003867 26A12000                      mov ax,[es:8*4]
  6396 0000386B 2EA3[8400]                    mov [cs:oldTimerISR],ax
  6397 0000386F 26A12200                      mov ax,[es:8*4+2]
  6398 00003873 2EA3[8600]                    mov [cs:oldTimerISR+2],ax
  6399                                  
  6400 00003877 FA                            cli
  6401 00003878 26C7062400[E428]              mov word[es:9*4],kbisr   ; store offset at n*4
  6402 0000387F 268C0E2600                    mov [es:9*4+2],cs        ; store segment at n*4+2
  6403 00003884 26C7062000[4E29]              mov word [es:8*4],timer  ; store offset at n*4
  6404 0000388B 268C0E2200                    mov [es:8*4+2],cs        ; store segment at n*4+2
  6405 00003890 FB                            sti                      ; enable interrupts
  6406                                  
  6407                                  loopesckey:
  6408 00003891 B400                          mov ah,0                 ; service 0 - get keystroke
  6409 00003893 CD16                          int 0x16                 ; call BIOS keyboard services
  6410 00003895 3C1B                          cmp al,27                ; is the ESC key pressed
  6411 00003897 740A                          je  exitQualifyRound
  6412 00003899 2E803E[7800]01                cmp byte[cs:RaceFinised],1
  6413 0000389F 7402                          je  exitQualifyRound
  6414 000038A1 75EE                          jne loopesckey
  6415                                  
  6416                                  exitQualifyRound:
  6417                                  
  6418 000038A3 2EA1[3F00]                    mov ax,[cs:OldKbISR]     ; read old offset in ax
  6419 000038A7 2E8B1E[4100]                  mov bx,[cs:OldKbISR+2]   ; read old segment in bx
  6420                                  
  6421 000038AC FA                            cli                      ; disable interrupts
  6422 000038AD 26A32400                      mov [es:9*4],ax          ; store offset at n*4
  6423 000038B1 26891E2600                    mov [es:9*4+2],bx        ; store segment at n*4+2
  6424 000038B6 FB                            sti                      ; enable interrupts
  6425                                  
  6426 000038B7 31C0                        xor ax, ax
  6427 000038B9 8EC0                        mov es, ax
  6428                                  
  6429 000038BB 2EA1[8400]                    mov ax,[cs:oldTimerISR]
  6430 000038BF 2E8B1E[8600]                  mov bx,[cs:oldTimerISR+2]
  6431                                  
  6432 000038C4 FA                            cli
  6433 000038C5 26A32000                      mov [es:8*4],ax
  6434 000038C9 26891E2200                    mov [es:8*4+2],bx
  6435 000038CE FB                            sti
  6436                                  
  6437 000038CF 2E803E[7800]01              cmp byte[cs:RaceFinised],1
  6438 000038D5 7518                        jne exitProgram
  6439                                  
  6440 000038D7 E8A0E6                      call endanimation
  6441                                  
  6442 000038DA E8B3E7                      call delay
  6443 000038DD E8B0E7                      call delay
  6444 000038E0 E8ADE7                      call delay
  6445 000038E3 E8AAE7                      call delay
  6446 000038E6 E8A7E7                      call delay
  6447                                  
  6448 000038E9 E83CF1                      call loadingresult
  6449 000038EC E872F2                      call qualifyresultsheet
  6450                                  
  6451                                  exitProgram:
  6452 000038EF E8C1CB                       call clrscrn
  6453 000038F2 B8004C                  mov ax, 0x4c00
  6454 000038F5 CD21                    int 0x21
