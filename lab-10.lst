     1                                  org 0x100                 ; COM file starts at 0x100 in memory
     2                                  
     3                                  section .data
     4 00000000 1D0000000000000000-     name db 29, 0, 29 dup(0)         ; Buffer for name (29 max characters, +2 for control)
     4 00000009 000000000000000000-
     4 00000012 000000000000000000-
     4 0000001B 00000000           
     5 0000001F 090000000000000000-     roll db 9, 0, 9 dup(0)           ; Buffer for roll number (9 max characters, +2 for control)
     5 00000028 0000               
     6 0000002A 1D0000000000000000-     course db 29, 0, 29 dup(0)       ; Buffer for course name (29 max characters, +2 for control)
     6 00000033 000000000000000000-
     6 0000003C 000000000000000000-
     6 00000045 00000000           
     7 00000049 090000000000000000-     section_name db 9, 0, 9 dup(0)   ; Buffer for section (9 max characters, +2 for control)
     7 00000052 0000               
     8                                  
     9 00000054 456E74657220796F75-     msg_name db "Enter your name: $"
     9 0000005D 72206E616D653A2024 
    10 00000066 456E74657220796F75-     msg_roll db "Enter your roll number: $"
    10 0000006F 7220726F6C6C206E75-
    10 00000078 6D6265723A2024     
    11 0000007F 456E74657220796F75-     msg_course db "Enter your course name: $"
    11 00000088 7220636F7572736520-
    11 00000091 6E616D653A2024     
    12 00000098 456E74657220796F75-     msg_section db "Enter your section: $"
    12 000000A1 722073656374696F6E-
    12 000000AA 3A2024             
    13                                  
    14 000000AD 0D0A24                  newline1 db 0Dh, 0Ah, "$"         ; Newline sequence for DOS interrupt 21h
    15                                  
    16                                  section .text
    17                                  start:
    18                                      ; Ask for and store the name
    19 00000000 BA[5400]                    mov dx, msg_name
    20 00000003 E83F00                      call print_string            ; Print "Enter your name:"
    21 00000006 8D16[0000]                  lea dx, [name]
    22 0000000A E83D00                      call read_string             ; Read user input into 'name'
    23 0000000D E83F00                      call newline                 ; Move to the next line
    24                                  
    25                                      ; Ask for and store the roll number
    26 00000010 BA[6600]                    mov dx, msg_roll
    27 00000013 E82F00                      call print_string            ; Print "Enter your roll number:"
    28 00000016 8D16[1F00]                  lea dx, [roll]
    29 0000001A E82D00                      call read_string             ; Read user input into 'roll'
    30 0000001D E82F00                      call newline                 ; Move to the next line
    31                                  
    32                                      ; Ask for and store the course name
    33 00000020 BA[7F00]                    mov dx, msg_course
    34 00000023 E81F00                      call print_string            ; Print "Enter your course name:"
    35 00000026 8D16[2A00]                  lea dx, [course]
    36 0000002A E81D00                      call read_string             ; Read user input into 'course'
    37 0000002D E81F00                      call newline                 ; Move to the next line
    38                                  
    39                                      ; Ask for and store the section
    40 00000030 BA[9800]                    mov dx, msg_section
    41 00000033 E80F00                      call print_string            ; Print "Enter your section:"
    42 00000036 8D16[4900]                  lea dx, [section_name]
    43 0000003A E80D00                      call read_string             ; Read user input into 'section_name'
    44 0000003D E80F00                      call newline                 ; Move to the next line
    45                                  
    46                                      ; Program end
    47 00000040 B8004C                      mov ax, 0x4C00              ; DOS terminate program
    48 00000043 CD21                        int 0x21
    49                                  
    50                                  ; Subroutine to print a string (uses DOS interrupt 21h, function 09h)
    51                                  print_string:
    52 00000045 B409                        mov ah, 0x09                ; DOS function 09h: print string
    53 00000047 CD21                        int 0x21                    ; Print the string at DS:DX
    54 00000049 C3                          ret
    55                                  
    56                                  ; Subroutine to read a string (uses DOS interrupt 21h, function 0Ah)
    57                                  read_string:
    58 0000004A B40A                        mov ah, 0x0A                ; DOS function 0Ah: buffered input
    59 0000004C CD21                        int 0x21                    ; Read user input into buffer at DS:DX
    60 0000004E C3                          ret
    61                                  
    62                                  ; Subroutine to move to the next line
    63                                  newline:
    64 0000004F BA[AD00]                    mov dx, newline1
    65 00000052 E8F0FF                      call print_string
    66 00000055 C3                          ret
