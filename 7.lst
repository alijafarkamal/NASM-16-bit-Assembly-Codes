     1                                  
     2                                  [org 0x0100]
     3 00000000 EB00                    jmp start
     4                                  
     5                                  section .data
     6 00000000 0000<rep 1Eh>           num: times 30 dw 0 ; Correctly
     7                                  
     8                                  section .text
     9                                  start:
    10 00000002 BE[1E00]                    mov si, num+30
    11 00000005 8CD8                    	mov ax,ds
    12 00000007 8EC0                        mov es, ax
    13 00000009 89E7                        mov di, sp
    14 0000000B 83EC1E                  	sub sp,30
    15 0000000E B90F00                      mov cx, 15
    16 00000011 FD                          std
    17 00000012 F3A5                        rep movsw
    18 00000014 83C41E                      add sp, 30 
    19 00000017 B8004C                      mov ax, 0x4c00
    20 0000001A CD21                        int 0x21
    21                                  
    22                                  
    23                                  
    24                                  ; The ending lines are related more to the operating system than to
    25                                  ; assembly language programming. It is a way to inform DOS that our
    26                                  ; program has terminated so it can display its command prompt
    27                                  ; again. The computer may reboot or behave improperly if this
    28                                  ; termination is not present.
    29                                  
    30                                  ; Lecture Topics:
    31                                  ; 1. Instructions Addresses
    32                                  ; 2. Inst. Opcodes
    33                                  ; 3. Little Endian VS Big Endian
    34                                  ; 4. Size of COM file = 18Bytes
    35                                  ; 5. Overview of AFD
    36                                  ; 6. Registers
    37                                  ; 7. Why is 1st instruction on 0x100
    38                                  ; 8. Debug program and watch Registers
    39                                  ; jmp start
    40                                  ; score: dw 0
    41                                  ; text_score: dw '0','$' 
    42                                  ; bird_row: dw 100
    43                                  ; bird_color: dw 14
    44                                  ; sky_color: dw 3
    45                                  ; grass_color: dw 2
    46                                  ; game_active: dw 1   ;  
    47                                  ; game_ovr_var: db 'GAME OVER!!','$'
    48                                  ; start_message: db 'START-ANY KEY', 0 
    49                                  ; madnimsj :  db ' Muhammad Madni '
    50                                  ; roll: db ' 23L-0996 '
    51                                  ; para0 :  db 'INSTRUCTIONS:'
    52                                  ; para1 : db ' Avoid Poles'
    53                                  ; para2 : db '&'
    54                                  ; para3 : db '     Dont touch the ground'
    55                                  ; para4 : db 'press up button for the bird movement'
    56                                  ; oldisr: dd 0 
    57                                  ; end_message: db 'QUIT-ESC', 0 
    58                                  ; pipe_col: dw 6
    59                                  ; pipe_pos: dw 150,300
    60                                  ; pipe_p1: dw 50,80
    61                                  ; pipe_p2: dw 100,130
    62                                  ; time_var: dw 0
    63                                  ; gravity: dw 1
    64                                  ; x1: db 0
    65                                  ; y1: db 0
    66                                  ; x2: db 0 
    67                                  ; y2: db 0
    68                                  ; x3: db 0
    69                                  ; y3: db 0
    70                                  ; x4: db 0
    71                                  ; y4: db 0
    72                                  
    73                                  ; menu:
    74                                  
    75                                  
    76                                  
    77                                      ; mov ax, 30 
    78                                      ; push ax ; push x position 
    79                                      ; mov ax, 10 
    80                                      ; push ax ; push y position 
    81                                      ; mov ax, 2 ; green on black attribute 
    82                                      ; push ax ; push attribute 
    83                                      ; mov ax, start_message 
    84                                      ; push ax ; push address of message 
    85                                      ; call printstr
    86                                      ; mov ax,  110
    87                                      ; push ax ; push x position 
    88                                      ; mov ax, 11
    89                                      ; push ax ; push y position 
    90                                      ; mov ax, 4 ; red on black attribute 
    91                                      ; push ax ; push attribute 
    92                                      ; mov ax, end_message 
    93                                      ; push ax ; push address of message 
    94                                      ; call printstr
    95                                   
    96                                      ; ret
    97                                  
    98                                   ; printscr:
    99                                  ; push bp
   100                                  ; mov bp,sp
   101                                  ; push ax
   102                                  ; push cx
   103                                  ; push si
   104                                  ; push di
   105                                  ; push bx
   106                                  ; mov di,[bp+4]
   107                                  ; mov ax,0xb800
   108                                  ; mov es,ax
   109                                  ; mov si,[bp+8]
   110                                  ; mov cx,[bp+6]
   111                                  ; mov ah,0x04
   112                                  ; l1:
   113                                  ; mov al,[si]
   114                                  ; mov [es:di],ax
   115                                  ; add di,2
   116                                  ; inc si
   117                                  ; dec cx
   118                                  ; jnz l1
   119                                  ; pop bx
   120                                  ; pop di
   121                                  ; pop si
   122                                  ; pop cx
   123                                  ; pop ax
   124                                  ; pop bp
   125                                  ; ret 6
   126                                  
   127                                  
   128                                  
   129                                  
   130                                  
   131                                  ; background:
   132                                  ; mov cx,0
   133                                  ; mov al,[sky_color]
   134                                  ; mov ah,0x0C
   135                                  ; mov dx,0
   136                                  
   137                                  ; back_b:
   138                                  ; int 10h
   139                                  ; inc cx
   140                                  ; cmp cx,320
   141                                  ; jne back_b
   142                                  ; mov cx,0
   143                                  ; inc dx
   144                                  ; cmp dx,150
   145                                  ; jne back_b
   146                                  ; mov cx,0
   147                                  ; mov al,[grass_color]
   148                                  ; mov ah,0x0C
   149                                  
   150                                  ; back_g:
   151                                  ; int 10h
   152                                  ; inc cx
   153                                  ; cmp cx,320
   154                                  ; jne back_g
   155                                  ; mov cx,0
   156                                  ; inc dx
   157                                  ; cmp dx,200
   158                                  ; jne back_g
   159                                  ; ret
   160                                  
   161                                  ; pillar_up:
   162                                  ; mov si,10
   163                                  ; mov di,0
   164                                  ; push bp
   165                                  ; mov cx,[pipe_pos+di]
   166                                  ; mov bp,sp
   167                                  ; mov al,[bp+4]
   168                                  ; mov ah,0x0C
   169                                  ; mov dx,0
   170                                  
   171                                  ; line_h:
   172                                  ; int 10h
   173                                  ; inc cx
   174                                  ; dec si
   175                                  ; jnz line_h
   176                                  ; inc dx
   177                                  ; mov si,10
   178                                  ; mov cx,[pipe_pos+di]
   179                                  ; cmp dx,[pipe_p1+di]
   180                                  ; jne line_h
   181                                  ; mov dx,0
   182                                  ; add di,2
   183                                  ; cmp di,4
   184                                  ; jne line_h
   185                                  ; pop bp
   186                                  ; ret 2
   187                                  
   188                                  ; pillar_down:
   189                                  ; mov si,10
   190                                  ; mov di,0
   191                                  ; push bp
   192                                  ; mov cx,[pipe_pos+di]
   193                                  ; mov bp,sp
   194                                  ; mov al,[bp+4]
   195                                  ; mov ah,0x0C
   196                                  ; mov dx,[pipe_p2+di]
   197                                  
   198                                  ; line_h_d:
   199                                  ; int 10h
   200                                  ; inc cx
   201                                  ; dec si
   202                                  ; jnz line_h_d
   203                                  ; inc dx
   204                                  ; mov si,10
   205                                  ; mov cx,[pipe_pos+di]
   206                                  ; cmp dx,150
   207                                  ; jne line_h_d
   208                                  ; add di,2
   209                                  ; mov dx,[pipe_p2+di]
   210                                  ; cmp di,4
   211                                  ; jne line_h_d
   212                                  ; pop bp
   213                                  ; ret 2
   214                                  
   215                                  ; chota_don:
   216                                              ; xor ax, ax
   217                                              ; mov al, [score]
   218                                              ; add al, 0x30
   219                                              ; mov [text_score], al
   220                                              ; ret
   221                                  
   222                                  ; elvish_bhai:    
   223                                  
   224                                              ; pusha
   225                                              ; mov ah, 2
   226                                              ; mov bh, 0
   227                                         
   228                                              ; mov dh, 23
   229                                              ; mov dl, 19
   230                                              ; int 0x10 
   231                                              ; mov ah, 9
   232                                              ; mov dx, text_score
   233                                              ; int 0x21
   234                                  
   235                                              ; popa
   236                                              ; ret
   237                                  
   238                                  ; marks:
   239                                  ; mov di,0
   240                                  
   241                                  ; wow:
   242                                  ; mov ax,50
   243                                  ; mov bx,[pipe_pos+di]
   244                                  ; cmp bx,45
   245                                  ; jne just_looking
   246                                  ; inc word[score]
   247                                  
   248                                  ; just_looking:
   249                                  ; add di ,2
   250                                  ; cmp di , 4
   251                                  ; jne wow
   252                                  ; ret
   253                                  
   254                                  ; end: 
   255                                  ; popa
   256                                  ; ret
   257                                  
   258                                  ; game_over:
   259                                  ; mov ah,2
   260                                  ; mov bh,0
   261                                  ; mov dh,10 ;row number
   262                                  ; mov dl,15 ;column number
   263                                  ; int 0x10
   264                                  
   265                                  ; mov ah,9
   266                                  ; mov dx,game_ovr_var
   267                                  ; int 0x21
   268                                  
   269                                  ; mov ah,2
   270                                  ; mov bh,0
   271                                  ; mov dh,12 ;row number
   272                                  ; mov dl,18 ;column number
   273                                  ; int 0x10
   274                                  
   275                                  ; mov ah,9
   276                                  ; mov dx,score
   277                                  ; int 0x21
   278                                  
   279                                  ; ret
   280                                  
   281                                  ; make_bird:
   282                                  ; ;Bird code
   283                                  ; push bp
   284                                  ; mov bp, sp
   285                                  
   286                                  ; mov al, [bp+4]  ; color of bird
   287                                  ; mov ah,0x0C
   288                                  
   289                                  ; mov di,[bird_row]
   290                                  ; add di, 5
   291                                  
   292                                  ; mov si,10
   293                                  ; mov cx,50;column number
   294                                  ; mov dx,[bird_row] ;row number
   295                                  ; for_bird:
   296                                  ; int 10h
   297                                  ; inc cx
   298                                  ; dec si
   299                                  ; jnz for_bird
   300                                  ; mov si,10
   301                                  ; mov cx, 50
   302                                  ; int 0x10
   303                                  ; inc dx
   304                                  ; cmp dx, di
   305                                  ; jne for_bird
   306                                  ; pop bp
   307                                  ; ret 2
   308                                  
   309                                  ; rand:
   310                                  ; mov word [game_active],0
   311                                  ; jmp bird_move_exit
   312                                  
   313                                  ; bird_move:
   314                                  ; pusha
   315                                  
   316                                  ; cmp word [bird_row],4   ;top touch
   317                                  ; jle rand
   318                                  
   319                                  ; cmp word [bird_row],145 ;bottom touch
   320                                  ; jge rand
   321                                      
   322                                  ; ;mov si, [bird_row]; save old pos of bird
   323                                  ; mov ah, 1
   324                                  ; int 16h
   325                                  ; jz moveUp
   326                                  ; mov cx,3
   327                                  ; mov ah,0
   328                                  ; int 16h
   329                                  ; cmp al,0x1B
   330                                  ; cmp al,'j'
   331                                  ; jne moveDown
   332                                  
   333                                  ; moveUp:
   334                                  ; push word [sky_color] ; erase the old bird
   335                                  ; call make_bird
   336                                  ; mov ax, [gravity]
   337                                  ; add word [bird_row], ax     ;down jump
   338                                  ; push word [bird_color]
   339                                  ; call make_bird
   340                                  ; jmp bird_move_exit
   341                                  
   342                                  ; moveDown:
   343                                  ; push word [sky_color] ; erase the old bird
   344                                  ; call make_bird
   345                                  ; sub word [bird_row], 4  ;up jump
   346                                  ; push word [bird_color]
   347                                  ; call make_bird
   348                                  
   349                                  ; bird_move_exit:
   350                                  ; popa
   351                                  ; ret
   352                                  
   353                                  ; rand2:
   354                                  ; ret
   355                                  
   356                                  ; game:
   357                                  ; call waj_gia
   358                                  ; call baigan
   359                                  ; mov ah, 0x2C
   360                                  ; int 0x21
   361                                  ; cmp dl, [time_var]
   362                                  ; je game
   363                                  
   364                                  ; mov byte [time_var], dl
   365                                              
   366                                  ; push word[sky_color]
   367                                  ; call pillar_up
   368                                  ; push word[sky_color]
   369                                  ; call pillar_down
   370                                  ; mov di,0
   371                                  
   372                                  ; call nan_sense
   373                                  ; array_sub:
   374                                  ; dec word[pipe_pos+di]
   375                                  ; add di,2
   376                                  ; cmp di,4
   377                                  ; jne array_sub
   378                                  ; push word[pipe_col]
   379                                  ; call pillar_up
   380                                  ; push word[pipe_col]
   381                                  ; call pillar_down
   382                                  ; call marks
   383                                  ; call elvish_bhai
   384                                  ; call chota_don
   385                                  
   386                                  ; pusha
   387                                  ; call bird_move
   388                                  ; popa
   389                                  ; cmp word [game_active],0
   390                                  ; je rand2
   391                                  ; jmp game
   392                                  
   393                                  ; ret
   394                                  
   395                                  ; baigan:  pusha
   396                                              ; xor cx, cx
   397                                              ; xor dx, dx
   398                                              ; xor ax, ax
   399                                              ; mov di, 0
   400                                              ; mov ah, 0x0D
   401                                              ; ayien:        mov cl, [x1+di]
   402                                                          ; mov dl, [x1+di+1]
   403                                                          ; int 0x10
   404                                                         
   405                                                          ; cmp al, 6
   406                                                          ; je khatam
   407                                                          ; add di, 2
   408                                                          ; cmp di, 8
   409                                                          ; jne ayien
   410                                                          ; jmp tata
   411                                              ; khatam:  push ax
   412                                                          ; mov ax, 0
   413                                                          ; mov word [game_active], ax
   414                                                          ; pop ax
   415                                              ; tata: popa
   416                                              ; ret
   417                                              
   418                                              ; waj_gia:     pusha
   419                                              ; mov al, 59
   420                                              ; mov ah, 0x0C
   421                                              ; mov cx,50
   422                                              ; dec cx
   423                                              ; push cx
   424                                              ; mov dx, [bird_row]
   425                                              ; dec dx
   426                                              ; mov byte [x1], cl ; mov x1
   427                                              ; mov byte [y1], dl ; mov y1
   428                                              ; ;int 0x10
   429                                              ; ; x2 y2
   430                                              ; mov cx, 50
   431                                              ; add cx, 10
   432                                              ; mov di, cx
   433                                              ; ; mov dx, [bird_row]
   434                                              ; ; dec dx
   435                                              ; mov byte [x2], cl ; mov x2
   436                                              ; mov byte [y2], dl ; mov y2
   437                                              ; ;int 0x10
   438                                              ; ; x3 y3
   439                                              ; pop cx
   440                                              ; mov dx, [bird_row]
   441                                              ; add dx, 4
   442                                              ; mov byte [x3], cl ; mov x3
   443                                              ; mov byte [y3], dl ; mov y3
   444                                              ; ;int 0x10
   445                                              ; mov cx, di
   446                                              ; mov byte [x4], cl ; mov x4
   447                                              ; mov byte [y4], dl ; mov y4
   448                                              ; ;int 0x10
   449                                              ; popa
   450                                              ; ret
   451                                  
   452                                  
   453                                  ; clrscr: 
   454                                   ; push es 
   455                                   ; push ax 
   456                                   ; push cx 
   457                                   ; push di 
   458                                   ; mov ax, 0xb800 
   459                                   ; mov es, ax
   460                                   ; xor di, di
   461                                   ; mov ax, 0x0720
   462                                   ; mov cx, 2000 
   463                                   ; cld 
   464                                   ; rep stosw 
   465                                   ; pop di
   466                                   ; pop cx 
   467                                   ; pop ax 
   468                                   ; pop es 
   469                                   ; ret 
   470                                  
   471                                  
   472                                   ; printstr:
   473                                   ; push bp 
   474                                   ; mov bp, sp 
   475                                   ; push es 
   476                                   ; push ax 
   477                                   ; push cx 
   478                                   ; push si 
   479                                   ; push di 
   480                                   ; push ds 
   481                                   ; pop es
   482                                   ; mov di, [bp+4] 
   483                                   ; mov cx, 0xffff
   484                                   ; xor al, al 
   485                                   ; repne scasb 
   486                                   ; mov ax, 0xffff 
   487                                   ; sub ax, cx 
   488                                   ; dec ax 
   489                                   ; jz exit 
   490                                   ; mov cx, ax 
   491                                   ; mov ax, 0xb800 
   492                                   ; mov es, ax 
   493                                   ; mov al, 80 
   494                                   ; mul byte [bp+8] 
   495                                   ; add ax, [bp+10] 
   496                                   ; shl ax, 1 
   497                                   ; mov di,ax 
   498                                   ; mov si, [bp+4]
   499                                   ; mov ah, [bp+6]
   500                                   ; cld
   501                                  
   502                                  ; nextchar: 
   503                                  ; lodsb 
   504                                   ; stosw 
   505                                   ; loop nextchar 
   506                                  
   507                                  ; exit: 
   508                                  ; pop di 
   509                                   ; pop si 
   510                                   ; pop cx 
   511                                   ; pop ax 
   512                                   ; pop es 
   513                                   ; pop bp 
   514                                   ; ret 8 
   515                                  
   516                                   ; nan_sense:
   517                                   ; mov di,0
   518                                   ; mov ax,10
   519                                   ; cmp [pipe_pos],ax
   520                                   ; jne return
   521                                   ; call pipe_tur_ja
   522                                   ; mov ax,300
   523                                   ; mov [pipe_pos], ax
   524                                   ; return:
   525                                   ; mov ax,10
   526                                   ; cmp [pipe_pos+2],ax
   527                                   ; jne tur_ja
   528                                   ; mov ax,300
   529                                   ; mov [pipe_pos+2], ax
   530                                   ; call pipe_tur_ja
   531                                   ; tur_ja:
   532                                   ; ret
   533                                  
   534                                   ; pipe_tur_ja:
   535                                  
   536                                  ; mov si,10
   537                                  ; mov di,0
   538                                  ; mov cx,[pipe_pos]
   539                                  ; mov al,[sky_color]
   540                                  ; mov ah,0x0C
   541                                  ; mov dx,0
   542                                  
   543                                  ; line_h_del:
   544                                  ; int 10h
   545                                  ; inc cx
   546                                  ; dec si
   547                                  ; jnz line_h_del
   548                                  ; inc dx
   549                                  ; mov si,10
   550                                  ; mov cx,[pipe_pos]
   551                                  ; cmp dx,150
   552                                  ; jne line_h_del
   553                                  
   554                                   ; ret
   555                                  
   556                                  
   557                                   ; kbisr:
   558                                   ; push ax 
   559                                   ; push es 
   560                                   ; mov ax, 0xb800 
   561                                   ; mov es, ax ; point es to video memory 
   562                                   ; in al, 0x60 ; read a char from keyboard port 
   563                                   ; cmp al,  0x36  ; is the key right shift 
   564                                   ; jne nomatch 
   565                                    
   566                                   ; call clrscr  
   567                                   ; int 0x16
   568                                   
   569                                   
   570                                  ; nomatch: ; mov al, 0x20 
   571                                   ; ; out 0x20, al 
   572                                   ; pop es 
   573                                   ; pop ax 
   574                                   ; jmp far [cs:oldisr] ; call the original ISR 
   575                                    ; ;iret
   576                                  
   577                                  
   578                                  
   579                                  
   580                                  
   581                                  
   582                                  
   583                                  
   584                                  
   585                                  
   586                                  
   587                                  
   588                                  ; start:
   589                                  
   590                                  ; call clrscr
   591                                  
   592                                   
   593                                  ; mov ax ,madnimsj 
   594                                  ; push ax
   595                                  ; mov ax,16
   596                                  ; push ax
   597                                  ; mov bx , 1986
   598                                  ; push bx
   599                                  ; call printscr
   600                                  
   601                                  ; mov ax ,roll
   602                                  ; push ax
   603                                  ; mov ax,10
   604                                  ; push ax
   605                                  ; mov bx , 2306
   606                                  ; push bx
   607                                  ; call printscr
   608                                  
   609                                  
   610                                  ; mov ah,0
   611                                   ; int 0x16
   612                                  
   613                                   ; mov ax ,para0
   614                                  ; push ax
   615                                  ; mov ax,13
   616                                  ; push ax
   617                                  ; mov bx , 1500
   618                                  ; push bx
   619                                  ; call printscr
   620                                  
   621                                  
   622                                  
   623                                  ; mov ax ,para1
   624                                  ; push ax
   625                                  ; mov ax,12
   626                                  ; push ax
   627                                  ; mov bx , 1660
   628                                  ; push bx
   629                                  ; call printscr
   630                                  
   631                                  
   632                                  
   633                                  ; mov ax ,para2
   634                                  ; push ax
   635                                  ; mov ax,1
   636                                  ; push ax
   637                                  ; mov bx , 1830
   638                                  ; push bx
   639                                  ; call printscr
   640                                  
   641                                  
   642                                  
   643                                  ; mov ax ,para3
   644                                  ; push ax
   645                                  ; mov ax,26
   646                                  ; push ax
   647                                  ; mov bx , 1968
   648                                  ; push bx
   649                                  ; call printscr
   650                                  
   651                                  
   652                                  ; mov ax ,para2
   653                                  ; push ax
   654                                  ; mov ax,1
   655                                  ; push ax
   656                                  ; mov bx , 2150
   657                                  ; push bx
   658                                  ; call printscr
   659                                  
   660                                  
   661                                  
   662                                  
   663                                  ; mov ax ,para4
   664                                  ; push ax
   665                                  ; mov ax,37
   666                                  ; push ax
   667                                  ; mov bx , 2280
   668                                  ; push bx
   669                                  ; call printscr
   670                                  
   671                                  
   672                                  
   673                                  
   674                                  
   675                                  ; mov ah,0
   676                                   ; int 0x16
   677                                  
   678                                  
   679                                  
   680                                      ; call clrscr
   681                                      ; call menu
   682                                      ; mov ah,0
   683                                      ; int 0x16
   684                                      ; call clrscr
   685                                  
   686                                  
   687                                      ; cmp al,0x1B
   688                                      ; je skip
   689                                  
   690                                      ; mov ah, 0x00
   691                                      ; mov al, 0x13
   692                                      ; int 0x10
   693                                      
   694                                      ; call background
   695                                      ; mov ax,[pipe_col]
   696                                      ; push ax
   697                                  
   698                                      ; call pillar_up
   699                                      ; mov ax,[pipe_col]
   700                                      ; push ax
   701                                  
   702                                      ; call pillar_down
   703                                  
   704                                  
   705                                      ; ;;  to pause
   706                                   ; xor ax, ax 
   707                                   ; mov es, ax ; point es to IVT base 
   708                                   ; mov ax, [es:9*4] 
   709                                   ; mov [oldisr], ax ; save offset of old routine 
   710                                   ; mov ax, [es:9*4+2] 
   711                                   ; mov [oldisr+2], ax ; save segment of old routine 
   712                                   ; cli ; disable interrupts 
   713                                  
   714                                  
   715                                  
   716                                   ; mov word [es:9*4], kbisr ; store offset at n*4 
   717                                   ; mov [es:9*4+2], cs ; store segment at n*4+2 
   718                                   ; sti ; enable interrupts
   719                                   ; mov ah, 0 ; service 0 – get keystroke 
   720                                   ; int 0x16 ; call BIOS keyboard service
   721                                  
   722                                      ; push word [bird_color]
   723                                      ; call make_bird
   724                                      ; call bird_move
   725                                      ; call game
   726                                      ; call game_over
   727                                          
   728                                      ; ; Your program's termination code goes here
   729                                  ; termination: 
   730                                     ; mov eax, 0x01  ; system call number for exit
   731                                      ; xor ebx, ebx    ; exit code 0
   732                                      ; int 0x80        ; call kerne
   733                                  
   734                                      ; skip:
   735                                      ; call clrscr
   736                                      ; mov ax,0x4c00
   737                                      ; int 0x21
